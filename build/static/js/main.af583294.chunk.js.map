{"version":3,"sources":["rav3-jsonapi-client/errors.ts","rav3-jsonapi-client/default-settings.ts","rav3-jsonapi-client/resourceLookup.ts","rav3-jsonapi-client/ra-jsonapi-client.ts","components/JoinModal.js","util.js","components/InfoModal.js","components/DynInstance.js","components/DynFields.js","components/DynList.js","DynResource.js","components/ConfigurationUI.js","components/ValH.js","components/Home.js","components/Menu.js","components/Layout.js","createAdminStore.js","authprovider.js","pages/LoginPage.js","App.js","reportWebVitals.js","index.js","components/AttrForm.js","components/QuickPreviewButton.js","components/DynInput.js","../node_modules/typescript/lib sync","Config.js"],"names":["SafrsHttpError","Error","message","status","body","name","HttpError","defaultSettings","total","headers","Accept","updateMethod","arrayFormat","includeRelations","errorHandler","httpError","errors","length","alert","title","code","console","log","endpointToTypeStripLastLetters","ResourceLookup","response","lookup","includes","this","Map","resources","Object","prototype","hasOwnProperty","call","data","included","entry","key","getKey","set","resource","type","id","has","get","ret","assign","ja_type","attributes","relationships","conf","get_Conf","duration","prepareAttributes","resource_attr_rels","map","attr","relationship","m_attrs","k","v","find","n","toString","entries","prepareQueryFilter","query","ids","fks","i","fk","warn","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","textAlign","useStyles","makeStyles","joined_field","cursor","color","JoinModal","label","content","resource_name","React","open","setOpen","classes","onClick","e","stopPropagation","className","Modal","onClose","Box","sx","Typography","variant","component","mt","type2resource","DynPagination","props","Pagination","rowsPerPageOptions","perPage","InfoPopover","useState","anchorEl","setAnchorEl","Boolean","undefined","event","currentTarget","onMouseOver","Popover","anchorOrigin","vertical","horizontal","info_modal","InfoModal","info","join_attr","delete_icon","fill","edit_grid","rel_icon","paddingLeft","marginBottom","many_tab","instance_title","margin","ResourceTitle","record","DetailPanel","Grid","container","spacing","m","source","ShowRecordField","tabs","useRecordContext","attr_name","value","ShowInstance","rel","direction","DynRelationshipMany","DynRelationshipOne","SimpleShowLayout","TabbedShowLayout","TabbedShowLayoutTabs","scrollButtons","rel_data","setRelData","setLoading","rel_error","setRelError","useQueryWithStore","payload","error","loaded","rel_id","join","dataProvider","useDataProvider","tab_content","useEffect","getOne","then","catch","instance","target_resource","rel_resource","Loading","Tab","LoadingRelatedInstance","setError","setRelated","filter","target","r_attr","fields","attr_fields","col_nr","max_list_columns","ReferenceManyField","reference","addLabel","pagination","Datagrid","rowClick","expand","slice","EditButton","RelatedInstance","resource_conf","Button","Link","to","pathname","ShowActions","info_btn","basePath","icon","TopToolbar","RelLabel","text","Tooltip","placement","arrow","display","height","paddingTop","TruncatedTextField","isValidElement","JSON","stringify","err","Function","JoinedField","attribute","rel_name","user_key","user_component","loading","item","component_name","LabelComponent","loadable","resolveComponent","components","load_custom_component","col","modal_content","Array","hidden","label_text","AttrField","result","sortBy","toLowerCase","DateField","locales","settings","locale","Component","ShowField","trunc_size","mode","Number","full_text","setFullText","shown","outlined","xs","ShowAttrField","field_props","jf","rel_label","searchFilters","TextInput","alwaysOn","DeleteButton","refresh","useRefresh","FunctionField","render","Confirm","isOpen","onConfirm","delete","deleteField","ListActions","FilterButton","CreateButton","ExportButton","gen_DynResourceList","ButtonField","filtered_props","startsWith","edit","ShowButton","sort","sort_attr_names","document","filters","actions","field","order","gen_DynResourceCreate","history","useHistory","notify","useNotify","create","CreateComp","get_Component","onSuccess","goBack","AttrForm","DynResource","window","addEventListener","location","reload","List","useMemo","Create","Edit","redirect","useRedirect","onFailure","mutationMode","gen_DynResourceEdit","Show","gen_DynResourceShow","options","Resource","list","show","yaml","require","als_yaml_url","href","theme","widget","marginRight","marginTop","textInput","modal","addConf","configs","parse","localStorage","getItem","api_root","setItem","LoadYaml","config_url","saveYaml","ystr","load","fetch","cache","conf_str","r","saveConf","ManageModal","config_list","conf_name","confirm","DeleteConf","textFieldRef","useRef","TextField","inputRef","evt","current","ConfSelect","current_conf","setCurrent","minWidth","FormControl","fullWidth","InputLabel","Select","labelId","size","onChange","new_conf","defaultValue","MenuItem","resetConf","defconf","default_configs","ConfigurationUI","saveEdit","parsed_conf","setApiroot","setBgColor","taConf","setTaConf","bgColor","autosave","setAutosave","Editor","saveConfig","FormControlLabel","control","Checkbox","checked","fallback","language","dump","borderLeft","ev","jj","TextareaAutosize","minRows","backgroundColor","Accordion","styled","disableGutters","elevation","square","palette","divider","borderBottom","AccordionSummary","expandIcon","fontSize","flexDirection","marginLeft","AccordionDetails","MuiAccordionDetails","padding","borderTop","CustomizedAccordions","align","lineHeight","Demo","ready","config","setContent","getContent","dangerouslySetInnerHTML","__html","withStyles","home","fontFamily","scriptLoaded","setScriptLoaded","initialized","setInitialized","init","Card","Title","CardContent","url","HomeJS","onError","onLoad","spacer","flex","menu","ConfigurationMenu","forwardRef","ref","translate","useTranslate","MenuItemLink","primaryText","leftIcon","sidebarIsOpen","CustomUserMenu","UserMenu","CustomAppBar","AppBar","userMenu","onMenuClick","Menu","useSelector","getResources","Layout","appBar","sReducer","previousState","instance2store","rel_resource_name","isArray","rel_inst","adminReducerWrapper","action","adminReducer","inc_resources","Set","add","authProvider","reducer","combineReducers","admin","router","connectRouter","saga","rootSaga","all","adminSaga","fork","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","store","createStore","state","USER_LOGOUT","applyMiddleware","routerMiddleware","run","login","username","password","Promise","resolve","reject","logout","removeItem","checkError","checkAuth","getPermissions","paper","alignItems","avatar","secondary","main","form","submit","connect","userLogin","setusername","setpassword","setLoaded","hostname","finally","Container","maxWidth","CssBaseline","Avatar","noValidate","onSubmit","preventDefault","credentials","required","autoComplete","autoFocus","createHashHistory","bcR","cache_duration","cacheDataProviderProxy","apiUrl","userSettings","httpClient","fetchUtils","fetchJson","countHeader","merge","getList","params","page","debug","q","search","op","val","format","keys","forEach","prefix","json","meta","jsonData","unwrapData","validUntil","Date","setTime","getTime","getMany","getManyReference","split","update","arr","endsWith","method","updateMany","responses","Headers","deleteMany","jsonapiClient","AsyncResources","setResources","res","createAdminStore","AdminUI","layout","loginPage","LoginPage","disableTelemetry","Home","HomeIcon","SettingsIcon","App","AdminContext","customReducers","admin2","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById","QuickPreviewButton","showPanel","setShowPanel","useGetOne","handleCloseClick","attr_show","Drawer","anchor","QuickCreateButton","cb_set_id","showDialog","setShowDialog","useCreate","useForm","handleSubmit","values","a","change","Dialog","DialogTitle","FormWithRedirect","save","handleSubmitWithRedirect","pristine","saving","DialogContent","DialogActions","disabled","SaveButton","root","spySubscription","DynReferenceInput","version","setVersion","useFormState","subscription","selected","setSelected","handleChange","useCallback","ReferenceInput","AutocompleteInput","optionText","DynInput","input_props","validate","selected_ref","setSelected_ref","grid_wrap","el","attr_type","DateInput","NumberInput","search_cols","ri_props","allowEmpty","webpackEmptyContext","req","module","exports","lsc_str","tab_groups","tg","concat","tab_group_name","tab_group","push","constructor","replace","defaultOptions","languageCodeOnly","opt","browserLocales","navigator","languages","trimmedLocale","trim","getBrowserLocales","reset_Conf","als_config"],"mappings":"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","file":"static/js/main.af583294.chunk.js","sourcesContent":["import { HttpError, useNotify } from 'react-admin';\n\nexport class NotImplementedError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.message = message;\n    this.name = 'NotImplementedError';\n  }\n}\n\nexport class SafrsHttpError extends HttpError {\n  constructor(message: string, status: number, body: any) {\n    super(message, status, body);\n    this.name = 'SafrsHttpError';\n  }\n}\n\nexport const safrsErrorHandler: HttpErrorHandler = (\n  httpError: HttpError\n): HttpError => {\n  /* Example Safrs Error message\n  {\n    \"errors\": [\n      {\n        \"title\": \"Request forbidden -- authorization will not help\",\n        \"detail\": \"\",\n        \"code\": \"403\"\n      }\n    ]\n  } */\n  interface err {\n    title: string;\n    detail: string;\n    code: string;\n  }\n  \n  const errors: { errors: err[] } = httpError.body; // JSON.parse(httpError.body.stringify);\n  if (errors?.errors.length > 0) {\n    alert(\"Data error \"+ errors.errors[0].title)\n    return new SafrsHttpError(\n      errors.errors[0].title,\n      httpError.status,\n      errors.errors[0].code\n    );\n  } else {\n    console.log('Unsopported Http Error Body', httpError.body);\n    return httpError;\n  }\n};\n\nexport interface HttpErrorHandler {\n  (httpError: HttpError): HttpError;\n}\n","import { safrsErrorHandler, HttpErrorHandler } from './errors';\nimport { includeRelations } from './ra-jsonapi-client';\n\nexport const defaultSettings: settings = {\n  total: 'total',\n  headers: {\n    Accept: 'application/vnd.api+json; charset=utf-8',\n    'Content-Type': 'application/vnd.api+json; charset=utf-8'\n  },\n  updateMethod: 'PATCH',\n  arrayFormat: 'brackets',\n  includeRelations: [],\n  errorHandler: safrsErrorHandler,\n  endpointToTypeStripLastLetters: ['Model', 's'] // update/create type: UserModel -> User, Users -> User\n};\n\ninterface settings {\n  total: string;\n  headers: {};\n  updateMethod: string;\n  arrayFormat: string;\n  includeRelations: includeRelations[];\n  errorHandler: HttpErrorHandler;\n  endpointToTypeStripLastLetters?: string[];\n}\n","/**\n * A map-like class that maps resource linkage objects {id: 1, type: \"user\"} to concrete resources with attributes and\n * relationships\n */\nexport default class ResourceLookup {\n  lookup: Map<any, any>;\n  includes: string[];\n  /**\n   * Constructs a new lookup map\n   * @param {Object} response A JSON API response, in JSON format\n   */\n  constructor(response: any) {\n    this.lookup = new Map();\n    this.includes = [];\n\n    // If the response wasn't a JSON dictionary, we can't and don't need to build a lookup\n    if (typeof response !== 'object') return;\n\n    let resources;\n    // if (response.hasOwnProperty('included')) {\n    if (Object.prototype.hasOwnProperty.call(response, 'included')) {\n      resources = [...response.data, ...response.included];\n    } else {\n      resources = response.data;\n    }\n\n    // Iterate over each resource returned and put each in the lookup\n    for (const entry of resources) {\n      const key = this.getKey(entry);\n      this.lookup.set(key, entry);\n    }\n  }\n\n  /**\n   * Calculates a hashable key for JSON API resources\n   * @param resource A resource linkage object\n   * @returns {string}\n   */\n  getKey(resource: any) {\n    return `${resource.type}:${resource.id}`;\n  }\n\n  /**\n   * Looks up a resource\n   * @param resource A resource linkage object\n   * @returns {Object}\n   */\n  get(resource: any) {\n    // If we don't have included data for this resource, just return the Resource Linkage object, since that's still\n    // useful\n    if (this.has(resource)) {\n      return this.lookup.get(this.getKey(resource));\n    } else {\n      return resource;\n    }\n  }\n\n  /**\n   * Returns true if the resource is in the lookup\n   * @param resource\n   * @returns {boolean}\n   */\n  has(resource: any) {\n    return this.lookup.has(this.getKey(resource));\n  }\n\n  /**\n   * Converts a JSON API data object (with id, type, and attributes fields) into a flattened object\n   * @param {Object} response A JSON API data object\n   */\n  unwrapData(response: any, includes: string[]) {\n    // The base resource object\n    const ret = Object.assign(\n      {\n        id: response.id,\n        ja_type: response.type\n      },\n      response.attributes\n    );\n    if (includes.length === 0) {\n      // shortcut, no includes: scip relationships\n      return ret;\n    }\n    // Deal with relationships\n\n    if (Object.prototype.hasOwnProperty.call(response, 'relationships')) {\n      ret.relationships = response.relationships;\n      \n    }\n\n    return ret;\n  }\n}\n\nfunction lowerFirstLetter(s: string): string {\n  return s;\n  return s[0].toLowerCase() + s.slice(1);\n}\n","import { stringify } from 'query-string';\nimport { fetchUtils, DataProvider, HttpError } from 'react-admin';\nimport merge from 'deepmerge';\nimport { defaultSettings } from './default-settings';\nimport ResourceLookup from './resourceLookup';\nimport {get_Conf} from '../Config'\nimport { number } from 'prop-types';\n\nconst conf : { [ key: string] : any } = get_Conf();\nconst duration = 2000;\n\nconst prepareAttributes = (attributes : any, resource : any) => {\n    // temp: convert all numbers to string to allow FK lookups (jsonapi ids are strings, while FKs may be numbers :////)\n    const resource_attr_rels = conf.resources[resource].attributes?.map( (attr : any) => attr.relationship ? attr.name : null)    \n    const m_attrs = Object.assign({}, attributes)\n    for(let [k, v] of Object.entries(attributes)){\n      m_attrs[k] = v\n      if(typeof v === 'number' && resource_attr_rels.find((n: string) => n == k)){\n        m_attrs[k] = v.toString();\n      }\n    }\n    return m_attrs\n}\n\nconst prepareQueryFilter = (query: any, ids : any, fks : any) => {\n  if(ids.length == fks.length){\n    for(let i = 0; i<fks.length; i++){\n      let fk = fks[i]\n      let id = ids[i]\n      query[`filter[${fk}]`] = id\n    }\n  }\n  else{\n    // fk probably contains an underscore\n    // todo: how to fix???\n    console.warn(\"Wrong FK length.. \", ids, fks)\n    query[`filter[${fks[0]}]`] = ids && ids.length ? ids[0] : \"\"\n  }\n}\n\n/**\n * Based on\n * \n * https://github.com/marmelab/react-admin/blob/master/packages/ra-data-simple-rest/src/index.ts\n * @see https://github.com/marmelab/FakeRest\n * \n */\nexport const jsonapiClient = (\n  apiUrl: string,\n  userSettings = {conf : {}},\n  httpClient = fetchUtils.fetchJson,\n  countHeader: string = 'Content-Range'\n): DataProvider => {\n  const settings = merge(defaultSettings, userSettings);\n  const conf__ = userSettings.conf;\n\n  \n  return {\n    /*******************************************************************************************\n     * getList\n     *******************************************************************************************/\n    getList: (resource, params) => {\n      console.log(params)\n      /*todo: rename resource to resource_name*/\n      const resource_name = resource;\n      const { page, perPage } = params.pagination;\n      \n      const resource_conf : any = conf.resources[resource_name];\n      const sort : string = resource_conf.sort\n      // Create query with pagination params.\n      const query : {[k: string]: any} = {\n        'page[number]': page,\n        'page[size]': perPage,\n        'page[offset]': (page - 1) * perPage,\n        'page[limit]': perPage\n      };\n\n      if(sort){\n          query.sort = sort\n      }\n\n      console.debug(params)\n      console.log(resource_conf)\n      // Add all filter params to query.\n      if(params.filter?.q && \"resources\" in conf){\n          // search is requested by react-admin\n          const search_cols = resource_conf.attributes.filter((col : any) => col.search);\n          const filter = search_cols.map((col: any) => {return { \n                                \"name\":col.name,\n                                \"op\": col.op? col.op : \"ilike\",\n                                \"val\": col.val ? col.val.format(params.filter.q) : `%${params.filter.q}%`\n                              };})\n            query['filter'] = JSON.stringify(filter) // => startswith operator in sql\n      }\n      else{\n        Object.keys(params.filter || {}).forEach((key) => {\n          query[`filter[${key}]`] = params.filter[key];\n        });\n      }\n\n      // Add sort parameter, first check the default configured sorting, then the customized sort\n      if (params.sort && params.sort.field) {\n          const prefix = params.sort.order === 'DESC' ? '-' : ''; // <> ASC\n          query.sort = `${prefix}${params.sort.field}`;\n      }\n      if(!query.sort){\n          query.sort = resource_conf.sort || \"id\"\n      }\n      console.debug(query)\n      const rel_conf = conf.resources[resource_name].relationships || []\n      // we only need \"toone\" rels in getList so we can show the join/user key\n      const includes: string[] = rel_conf.filter((rel : any) => rel.direction != 'tomany').map((rel : any) => rel.name);\n      query['include'] = includes.join(',');\n\n      const url = `${apiUrl}/${resource}?${stringify(query)}`;\n      console.log(query)\n      return httpClient(url)\n        .then(({ json }) => {\n          // const lookup = new ResourceLookup(json.data);\n          // When meta data and the 'total' setting is provided try\n          // to get the total count.\n          let total = 0;\n          if (json.meta && settings.total) {\n            total = json.meta[settings.total];\n          }\n          // Use the length of the data array as a fallback.\n          total = total || json.data.length;\n          const lookup = new ResourceLookup(json);\n          const jsonData = json.data.map((resource: any) =>{\n              return lookup.unwrapData(resource, includes)\n            }\n          );\n          const validUntil = new Date();\n          validUntil.setTime(validUntil.getTime() + duration);\n          return {\n            data: jsonData,\n            included: json.included,\n            validUntil : validUntil,\n            total: total\n          };\n        })\n        .catch((err: HttpError) => {\n          console.log('catch Error', err.body);\n          const errorHandler = settings.errorHandler;\n          return Promise.reject(errorHandler(err));\n        });\n    },\n\n    /*******************************************************************************************\n      getOne\n    ********************************************************************************************/\n    getOne: (resource: any, params: { id: any }) => {\n      \n      if(params.id === null || params.id === undefined){\n          console.debug(`params.id is '${params.id}'`)\n          return new Promise(()=>{ data: {}})\n      }\n      const resource_conf = conf[\"resources\"][resource];\n      if(!resource_conf){\n        console.warn(`Invalid resource ${resource}`)\n        return new Promise(()=>{});\n      }\n      const rel_conf = resource_conf?.relationships || [];\n      const includes: string[] = rel_conf.map((rel : any) => rel.name).join(\",\")\n      const url = `${apiUrl}/${resource}/${params.id}?include=${includes}&page[limit]=1`; // we only need 1 include at most\n      \n      return httpClient(url).then(({ json }) => {\n\n        let { id, attributes, relationships, type } = json.data;\n        Object.assign(attributes, relationships, {type: type}, {relationships: relationships}, {attributes: {...attributes} });\n        attributes = prepareAttributes(attributes, resource)\n        const validUntil = new Date();\n        validUntil.setTime(validUntil.getTime() + duration);\n        return {\n          data: {\n            id,\n            validUntil : validUntil,\n            ...attributes\n          }\n        };\n      });\n    },\n\n    /*******************************************************************************************\n      getMany\n    ********************************************************************************************/\n    getMany: (resource, params: any) => {\n      resource = capitalize(resource);\n      console.log('getMany:',resource, params)\n      let query = 'filter[id]=' \n      query += params.ids instanceof Array ? params.ids.join(',') : JSON.stringify(params.ids); // fixme\n      const url = `${apiUrl}/${resource}?${query}`;\n      return httpClient(url).then(({ json }) => {\n        console.log('getMany', json);\n        // When meta data and the 'total' setting is provided try\n        // to get the total count.\n        let total = 0;\n        if (json.meta && settings.total) {\n          total = json.meta[settings.total];\n        }\n        // Use the length of the data array as a fallback.\n        total = total || json.data.length; //  { id: any; attributes: any; }\n        const jsonData = json.data.map((value: any) =>\n          Object.assign({ id: value.id, type: value.type }, prepareAttributes(value.attributes, resource))\n        );\n        const validUntil = new Date();\n        validUntil.setTime(validUntil.getTime() + duration);\n        return {\n          data: jsonData,\n          validUntil : validUntil,\n          total: total\n        };\n      });\n    },\n\n    /*******************************************************************************************\n      getManyReference\n    ********************************************************************************************/\n    getManyReference: (resource_name, params : any) => {\n      \n      const { page, perPage } = params.pagination;\n      const { field, order } = params.sort;\n\n      const query: {[k: string]: any} = { };\n\n      if (field) {\n        const prefix = order === 'DESC' ? '-' : ''; // <> ASC\n        query.sort = `${prefix}${field}`;\n      }\n      \n      console.log(params)\n      let fks = params.target.split('_')\n      //const ids = fks.length > 1 ? params.id.split('_') : params.id\n      let ids = params.id.split('_')\n\n      if(ids.length != fks.length){\n          console.log(resource_name, params)\n          console.warn(\"Wrong FK length \", ids, fks)\n          fks = [params.target]\n          ids = [params.id]\n      }\n      \n      prepareQueryFilter(query, ids, fks);\n      \n      query[`page[limit]`] = perPage\n      query[`page[offset]`] = (page - 1) * perPage\n     \n      const options = {};\n      const resource_conf = conf[\"resources\"][resource_name];\n      const rel_conf = resource_conf?.relationships || [];\n      const includes: string[] = rel_conf.map((rel : any) => rel.name).join(\",\")\n      const url = `${apiUrl}/${resource_name}?${stringify(query)}&include=${includes}`\n      console.log(query)\n      return httpClient(url, options).then(({ headers, json }) => {\n        if (!headers.has(countHeader)) {\n          console.debug(\n            `The ${countHeader} header is missing in the HTTP Response. The simple REST data provider expects responses for lists of resources to contain this header with the total number of results to build the pagination. If you are using CORS, did you declare ${countHeader} in the Access-Control-Expose-Headers header?`\n          );\n        }\n        let total = json.meta?.total;\n        if (json.meta && settings.total) {\n          total = json.meta[settings.total];\n        }\n        // Use the length of the data array as a fallback.\n        total = total || json.data.length;\n        const lookup = new ResourceLookup(json);\n        const jsonData = json.data.map((resource: any) =>{\n          return lookup.unwrapData(resource, includes)\n          }\n        );\n\n        return {\n          data: jsonData,\n          total: total\n        };\n      });\n    },\n\n    update: (resource_name, params) => {\n      let type = conf[\"resources\"][resource_name].type;\n      const arr = settings.endpointToTypeStripLastLetters;\n      for (const i in arr) {\n        if (resource_name.endsWith(arr[i])) {\n          type = resource_name.slice(0, arr[i].length * -1);\n          break; // quit after first hit\n        }\n      }\n      const data = {\n        data: {\n          id: params.id,\n          type: type,\n          attributes: params.data\n        }\n      };\n\n      return httpClient(`${apiUrl}/${resource_name}/${params.id}`, {\n        method: settings.updateMethod,\n        body: JSON.stringify(data)\n      })\n        .then(({ json }) => {\n          const { id, attributes } = json.data;\n          return {\n            data: {\n              id,\n              ...attributes\n            }\n          };\n        })\n        .catch((err: HttpError) => {\n          console.log('catch Error', err.body);\n          const errorHandler = settings.errorHandler;\n          return Promise.reject(errorHandler(err));\n        });\n    },\n\n    // simple-rest doesn't handle provide an updateMany route, so we fallback to calling update n times instead\n    updateMany: (resource_name, params) =>\n      // todo : bulk update\n      \n      Promise.all(\n        params.ids.map((id) => {\n          const data = {\n            data: {\n              attributes: params.data\n            }\n          };\n          return httpClient(`${apiUrl}/${resource_name}/${id}`, {\n            method: 'PATCH',\n            body: JSON.stringify(params.data)\n          })\n        })\n      )\n      .then((responses) => ({ data: responses.map(({ json }) => json.id) }))\n      ,\n\n    create: (resource, params) => {\n      let type = resource;\n      const arr = settings.endpointToTypeStripLastLetters;\n      for (const i in arr) {\n        if (resource.endsWith(arr[i])) {\n          type = resource.slice(0, arr[i].length * -1);\n          break; // quit after first hit\n        }\n      }\n      const data = {\n        data: {\n          type: type,\n          attributes: params.data\n        }\n      };\n      return httpClient(`${apiUrl}/${resource}`, {\n        method: 'POST',\n        body: JSON.stringify(data)\n      })\n        .then(({ json }) => {\n          const { id, attributes } = json.data;\n          return {\n            data: {\n              id,\n              ...attributes\n            }\n          };\n        })\n        .catch((err: HttpError) => {\n          console.log('catch Error', err.body);\n          const errorHandler = settings.errorHandler;\n          return Promise.reject(errorHandler(err));\n        });\n    },\n\n    delete: (resource, params) =>\n      httpClient(`${apiUrl}/${resource}/${params.id}`, {\n        method: 'DELETE',\n        headers: new Headers({\n          'Content-Type': 'text/plain'\n        })\n      }).then(({ json }) => ({ data: json })),\n\n    // simple-rest doesn't handle filters on DELETE route, so we fallback to calling DELETE n times instead\n    deleteMany: (resource, params) =>\n      Promise.all(\n        params.ids.map((id) =>\n          httpClient(`${apiUrl}/${resource}/${id}`, {\n            method: 'DELETE',\n            headers: new Headers({\n              'Content-Type': 'text/plain'\n            })\n          })\n        )\n      ).then((responses) => ({\n        data: responses.map(({ json }) => json.id)\n      })),\n\n    getResources: () => {\n        \n        if(conf){\n            return Promise.resolve({data: conf});\n        };\n        return httpClient(`${apiUrl}/schema`, {\n            method: 'GET'\n        }).then(({json}) => {\n            localStorage.setItem('raconf', JSON.stringify(json));\n            return { data: json };\n        })\n        .catch(()=> {return {data : {}} })\n      }\n    \n  };\n};\n\nfunction capitalize(s: string): string {\n  return s;\n  return s[0].toUpperCase() + s.slice(1);\n}\nexport interface includeRelations {\n  resource: string;\n  includes: string[];\n}\n","import * as React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: \"75%\",\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n  textAlign: \"left\"\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  joined_field : {cursor: \"pointer\", color: \"#3f51b5\"}\r\n});\r\n\r\n\r\n\r\nexport default function JoinModal({label, content, resource_name}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = (e) => {setOpen(true); e.stopPropagation();}\r\n  const handleClose = (e) => {e.stopPropagation();setOpen(false);}\r\n  \r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <span>\r\n      <span onClick={handleOpen} className={classes.joined_field} title={`${resource_name} Relationship` }>{label} </span>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            {label}\r\n          </Typography>\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            {content}\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n    </span>\r\n  );\r\n}","import React from \"react\";\r\nimport { Typography } from '@material-ui/core';\r\nimport { get_Conf } from \"./Config\";\r\nimport {Pagination }  from 'react-admin'\r\nimport loadable from '@loadable/component'\r\nimport Popover from '@material-ui/core/Popover';\r\n\r\nconst conf = get_Conf();\r\n\r\nexport const type2resource = (type) => {\r\n    for(let [resource_name, resource] of Object.entries(conf?.resources)){\r\n        if(resource.type === type){\r\n            return resource_name\r\n        }\r\n    }\r\n    console.warn(`No resource for type \"${type}`)\r\n    return conf[type]\r\n};\r\n\r\n\r\nexport const DynPagination = (props) => {\r\n    return <Pagination rowsPerPageOptions={[10, 25, 50, 100]}\r\n                perPage={props.perPage || 25 }\r\n                {...props} />\r\n}\r\n\r\n\r\nexport const load_custom_component = (component_name, item) => {\r\n\r\n    try{\r\n        const LabelComponent = loadable(() => import(`./components/Custom.js`), {\r\n            resolveComponent: (components) => components[`${component_name}`],\r\n        })\r\n        return <LabelComponent instance={item} />\r\n    }\r\n    catch(e){\r\n        alert(\"Custom component error\")\r\n        console.error(\"Custom component error\", e)\r\n    }\r\n    return null\r\n}\r\n\r\n\r\nexport const InfoPopover = ({label, content}) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n  \r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const showInfo = (event) => {\r\n        setAnchorEl(event.currentTarget);   \r\n    }\r\n  \r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n  \r\n    if(!content){\r\n        return label\r\n    }\r\n    return (\r\n      <div>\r\n        <span onClick={handleClick} onMouseOver={showInfo}>\r\n          {label}\r\n        </span>\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n          }}\r\n        >\r\n          <Typography sx={{ p: 2 }}>{content}</Typography>\r\n        </Popover>\r\n      </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Typography } from '@material-ui/core';\r\nimport { Modal, Box  } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: \"75%\",\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n    textAlign: \"left\"\r\n} \r\nconst useStyles = makeStyles({\r\n    info_modal : style\r\n});\r\n\r\n\r\nconst InfoModal = ({label, resource}) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = (e) => {setOpen(true); e.stopPropagation();}\r\n    const handleClose = (e) => {e.stopPropagation();setOpen(false);}\r\n    const classes = useStyles()\r\n  \r\n    return <>\r\n        <span onClick={handleOpen} title={`${resource.name} Info`}>{label} </span>\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box sx={style} className={classes.info_modal}>\r\n            <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n              {resource.info}\r\n            </Typography>\r\n          </Box>\r\n        </Modal>\r\n      </>\r\n}\r\n\r\nexport default InfoModal","import { useState, useEffect, useMemo} from 'react';\r\nimport {\r\n    Datagrid,\r\n    EditButton\r\n} from \"react-admin\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Resource, TabbedShowLayout, Tab } from 'react-admin';\r\nimport {\r\n  Show,\r\n  SimpleShowLayout,\r\n  TabbedShowLayoutTabs,\r\n  ReferenceManyField,\r\n  useRecordContext,\r\n  Link\r\n} from \"react-admin\";\r\nimport { Typography } from '@material-ui/core';\r\nimport { useRefresh } from 'react-admin';\r\nimport { useDataProvider } from 'react-admin';\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport {get_Conf} from '../Config.js'\r\nimport Button from '@material-ui/core/Button';\r\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { type2resource } from \"../util.js\";\r\nimport { ShowAttrField } from \"./DynFields.js\";\r\nimport { attr_fields } from \"./DynFields.js\";\r\nimport {DynPagination} from '../util'\r\nimport { ListActions as RAListActions, FilterButton, TopToolbar, CreateButton, ExportButton } from 'react-admin';\r\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\r\nimport InfoModal from \"./InfoModal.js\";\r\n\r\nconst conf = get_Conf();\r\n\r\nconst useStyles = makeStyles({\r\n    join_attr: {color: '#3f51b5'},\r\n    delete_icon : {fill: \"#3f51b5\"},\r\n    edit_grid : { width: \"100%\" },\r\n    rel_icon: {paddingLeft:\"0.4rem\", color: \"#666\", marginBottom:\"0px\"},\r\n    many_tab : {color: \"#3f51b5\"},\r\n    instance_title : { margin: \"30px 0px 30px\" }\r\n});\r\n\r\n\r\nconst ResourceTitle = ({ record }) => {\r\n    return <span>{record ? `${record.type ? record.type +\" \" : \"\"} #${record.id} ` : ''}</span>;\r\n};\r\n\r\nexport const DetailPanel = ({attributes}) => {\r\n    return <Grid container spacing={3} margin={5} m={40}>\r\n                {attributes.map((attr) => <ShowRecordField source={attr} key={attr.name}/> )}\r\n            </Grid>\r\n}\r\n\r\nexport const ShowRecordField = ({ source, tabs }) => {\r\n    const record = useRecordContext();\r\n    const classes = useStyles();\r\n    const attr_name = source.name\r\n    const label =  source.label || attr_name\r\n    let value = record[attr_name]\r\n    return <ShowAttrField attr={source} value={value} />\r\n};\r\n\r\n\r\nconst ShowInstance = ({attributes, relationships, resource_name, id}) => {\r\n\r\n    const classes = useStyles()\r\n    const title = <Typography variant=\"h5\" component=\"h5\" className={classes.instance_title}>\r\n                        {resource_name}<i style={{color: \"#ccc\"}}> #{id}</i>\r\n                  </Typography>\r\n\r\n    const tabs = relationships.map((rel) => {\r\n            // \r\n            return rel.direction === \"tomany\" ?  // <> \"toone\"\r\n                        DynRelationshipMany(resource_name, id, rel) : \r\n                        DynRelationshipOne(resource_name, id, rel)\r\n    })\r\n                  \r\n\r\n    return <SimpleShowLayout>\r\n                {title}\r\n                <Grid container spacing={3} margin={5} m={40}>\r\n                    {attributes.map((attr) => <ShowRecordField key={attr.name} source={attr} tabs={tabs}/> )}\r\n                </Grid>\r\n                <hr style={{ margin: \"30px 0px 30px\" }}/>\r\n                <TabbedShowLayout tabs={<TabbedShowLayoutTabs variant=\"scrollable\" scrollButtons=\"auto\" />}>\r\n                {tabs}\r\n                </TabbedShowLayout>\r\n            </SimpleShowLayout>\r\n}\r\n\r\n\r\nconst DynRelationshipOne = (resource, id, relationship) => {\r\n    \r\n    const [rel_data, setRelData]  =useState(false)\r\n    const [loading, setLoading] = useState(true);\r\n    const [rel_error, setRelError] = useState();\r\n    const {loaded, error, data} = useQueryWithStore({\r\n        type: 'getOne',\r\n            resource: resource,\r\n            payload: { id: id }\r\n        })\r\n    const rel_id = data && relationship.fks.map(fk => data[fk]).join('_')\r\n    const dataProvider = useDataProvider();\r\n    let tab_content = \" - \"\r\n    useEffect(() => {\r\n        if(rel_id === undefined){\r\n            return\r\n        }\r\n        dataProvider.getOne(relationship.resource, { id: rel_id })\r\n            .then(({ data }) => {\r\n                setRelData(data);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                setRelError(error);\r\n                setLoading(false);\r\n            })\r\n    }, [data]);\r\n    \r\n    if (!rel_data) { \r\n        tab_content = <Loading key={relationship.name}/>;\r\n    }\r\n    else if (error || rel_error) {\r\n        console.log({resource}, {id}, {relationship}, relationship.name)\r\n        console.log({data}, {rel_data})\r\n        tab_content = <Error key={relationship.name} error={\"Failed to load relationship\"}/>;\r\n    }\r\n    else if(rel_data){\r\n        tab_content = <RelatedInstance instance={rel_data} />\r\n    }\r\n    else{\r\n        // Deprecated.. Delete this stmt??\r\n        console.warn(\"Hit deprecated code!\")\r\n        if(data[relationship.name]?.data === null){\r\n            tab_content = \"Empty\"\r\n        }\r\n        else if(data && data[relationship.name]?.type && data[relationship.name].type === relationship?.target_resource?.type){\r\n            tab_content = <RelatedInstance instance={data[relationship.name]} />\r\n        }\r\n        else if(data[relationship.name]?.data){\r\n            // todo: might be obsolote, tbd\r\n            // todo: fix the data provider so we can simplify this conditional and use <RelatedInstance> instead\r\n            const rel_resource = type2resource(data[relationship.name].data?.type)\r\n            const rel_id = data[relationship.name]?.data?.id\r\n            if(!rel_resource){\r\n                console.log(data)\r\n                console.warn(`Related resource not found ${resource}.${relationship.name}`)\r\n            }\r\n            else{\r\n                tab_content = <LoadingRelatedInstance rel_resource={rel_resource} rel_id={rel_id}/>\r\n            }\r\n        }\r\n    }\r\n\r\n    return <Tab label={relationship.label || relationship.name} key={relationship.name}>\r\n                {tab_content}\r\n           </Tab>\r\n}\r\n\r\nconst LoadingRelatedInstance = ({rel_resource, rel_id}) =>{\r\n    // obsolete?\r\n    console.log('LoadingRelatedInstance', {rel_resource}, {rel_id})\r\n    const { loaded, error, data } = useQueryWithStore({\r\n        type: 'getOne',\r\n            resource: rel_resource,\r\n            payload: { id: rel_id }\r\n    })\r\n    if (!loaded) { \r\n        return <Loading />; \r\n    }\r\n    if (error) { \r\n        return <Error />; \r\n    }\r\n    return <RelatedInstance instance={data} />\r\n}\r\n\r\n\r\nconst DynRelationshipMany = (resource_name, id, relationship) => {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState();\r\n    const [related, setRelated] = useState(false);\r\n    const dataProvider = useDataProvider();\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        dataProvider.getOne(resource_name, { id: id })\r\n            .then(({ data }) => {\r\n                setRelated(data.relationships);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                setError(error);\r\n                setLoading(false);\r\n            })\r\n    }, []);\r\n\r\n    const target_resource = conf.resources[relationship?.resource]\r\n    if(!target_resource){\r\n        console.warn(`${resource_name}: No resource conf for ${relationship.resource}`)\r\n        console.log({relationship})\r\n        return null\r\n    }\r\n\r\n    if(!target_resource?.attributes){\r\n        console.log(\"No target resource attributes\")\r\n        return null\r\n    }\r\n\r\n    /*\r\n        Render the datagrid, this is similar to the grid in gen_DynResourceList\r\n        todo: merge these into one component\r\n    */\r\n    let attributes = target_resource.attributes.filter(attr => attr.relationship?.target !== resource_name) // ignore relationships pointing back to the parent resource\r\n    attributes = relationship.attributes ? attributes.filter(attr => relationship.attributes.find(r_attr=> r_attr.name == attr.name)) : attributes\r\n    \r\n    const fields = attr_fields(attributes);\r\n    const col_nr = target_resource.max_list_columns\r\n    const fk = relationship.fks.join('_')\r\n    const label = relationship.label || relationship.name\r\n    \r\n    return <Tab label={label} key={relationship.name} className={classes.many_tab}>\r\n                <ReferenceManyField reference={relationship.resource} target={fk} addLabel={false} pagination={<DynPagination/>}  perPage={target_resource.perPage || 25}>\r\n                    <Datagrid rowClick=\"show\" expand={<DetailPanel attributes={target_resource.attributes} />}>\r\n                        {fields.slice(0,col_nr)}\r\n                        <EditButton />\r\n                    </Datagrid>\r\n                </ReferenceManyField>            \r\n            </Tab>\r\n}\r\n\r\n\r\nexport const RelatedInstance = ({instance}) => {\r\n\r\n    if (!instance?.type){\r\n        return <span></span>;\r\n    }\r\n    const resource_name = type2resource(instance?.type)\r\n    if (!resource_name){\r\n        return <span>...</span>;\r\n    }\r\n    \r\n    const resource_conf = conf.resources[resource_name]\r\n    const attributes = resource_conf?.attributes || [];\r\n    const relationships = resource_conf?.relationships || [];\r\n    \r\n    // ugly manual styling because adding to TabbedShowLayout didn't work\r\n    const result = <div style={{left: \"-16px\", position: \"relative\"}}> \r\n                        <div style={{textAlign:\"right\", width:\"100%\"}} >\r\n                            <Button\r\n                                title=\"edit\"\r\n                                component={Link}\r\n                                to={{\r\n                                    pathname: `${resource_name}/${instance.id}`\r\n                                    }}\r\n                                label=\"Link\"><EditIcon />Edit\r\n                            </Button>\r\n                            <Button\r\n                                title=\"view\"\r\n                                component={Link}\r\n                                to={{\r\n                                    pathname: `/${resource_name}/${instance.id}/show`\r\n                                    }}\r\n                                label=\"Link\"><KeyboardArrowRightIcon />View\r\n                            </Button>\r\n                        </div>\r\n                        <Grid container spacing={3}>\r\n                                { //{attributes.map((attr) => <ShowField label={attr.name} key={attr.name} value={instance.attributes[attr.name]}/> )}\r\n                                attributes.map((attr) => <ShowAttrField key={attr.name} attr={attr} value={instance.attributes[attr.name]}/> )\r\n                                }\r\n                        </Grid>\r\n                    </div>\r\n   \r\n    return result;\r\n}\r\n\r\nconst ShowActions = ({ basePath, data, resource}) => {\r\n    \r\n    const classes = useStyles();\r\n    let info_btn;\r\n    if(resource.info){\r\n        const label = <Button label=\"Info\"><HelpOutlineIcon className={classes.icon}/></Button>\r\n        info_btn= <InfoModal label={label} resource={resource}/>\r\n    }\r\n\r\n    return <TopToolbar>\r\n                {info_btn}\r\n                <EditButton basePath={basePath} record={data} />\r\n            </TopToolbar>\r\n}\r\n\r\nexport const gen_DynResourceShow = (resource_conf) => (props) => {\r\n\r\n    const attributes = resource_conf.attributes\r\n    const relationships= resource_conf.relationships\r\n\r\n    return <Show title={<ResourceTitle />} actions={<ShowActions resource={resource_conf}/>} {...props}>\r\n                <ShowInstance attributes={attributes} relationships={relationships} resource_name={props.resource} id={props.id}/>\r\n            </Show>\r\n}","import React from \"react\";\r\nimport { useRefresh } from 'react-admin';\r\nimport { useDataProvider } from 'react-admin';\r\nimport { \r\n    Confirm,\r\n    useRecordContext,\r\n    DateField,\r\n    TextField,\r\n    FunctionField } from 'react-admin';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Typography } from '@material-ui/core';\r\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useState, useEffect, useMemo} from 'react';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DensityMediumIcon from '@mui/icons-material/DensityMedium';\r\nimport Button from '@material-ui/core/Button';\r\nimport { get_Conf } from '../Config';\r\nimport JoinModal from './JoinModal'\r\nimport { load_custom_component } from '../util';\r\nimport { RelatedInstance } from \"./DynInstance\";\r\nimport loadable from '@loadable/component'\r\nimport {InfoPopover} from '../util'\r\n\r\nconst conf = get_Conf();\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    join_attr: {color: '#3f51b5;'},\r\n    delete_icon : {fill: \"#3f51b5\"},\r\n    edit_grid : { width: \"100%\" },\r\n    rel_icon: {paddingLeft:\"0.4rem\", color: \"#666\", marginBottom:\"0px\"},\r\n    joined_field : {border: \"2px solid red\", cursor: \"pointer\"}\r\n});\r\n\r\n\r\nconst RelLabel = ({text}) => {\r\n    // Relationship column header label\r\n    const classes = useStyles()\r\n\r\n    let label = <Tooltip title={text + \" Relationship\"} placement=\"top-start\" arrow>\r\n                    <span style={{ display: \"inline-flex\"}}>\r\n                            {text}\r\n                            <DensityMediumIcon \r\n                                className={classes.rel_icon} style={{width: \"0.7rem\", height: \"0.7rem\", paddingTop: \"0.5rem\"}} \r\n                            />\r\n                            \r\n                    </span>\r\n                </Tooltip>\r\n    return label\r\n}\r\n\r\n\r\nconst TruncatedTextField = (props) => {\r\n    \r\n    const record = props.record // \"record\" is a prop received from the Datagrid\r\n    const source = props.source\r\n    if(!record || !source){\r\n        return <span></span>\r\n    }\r\n    let value = record[source];\r\n    if(value && !React.isValidElement(value) && typeof value == \"object\"){\r\n        try{\r\n            console.log(`Converting value :${value}`)\r\n            value=JSON.stringify(value)\r\n        }\r\n        catch(err){\r\n            console.log(`Invalid element value :${value}`)\r\n            console.warn(err)\r\n            value = \"Value Error\"\r\n        }\r\n    }\r\n    if(!value || value.length < 128 || !value.slice || !value.slice instanceof Function){\r\n        return <span>{value}</span>\r\n    }\r\n    return <span>{value.slice(0, 128) + \"...\" }</span>;\r\n}\r\n\r\n\r\nconst JoinedField = ({attribute, join, label}) => {\r\n    \r\n    const record = useRecordContext();\r\n    if(record?.attributes){\r\n        Object.assign(record, record.attributes)\r\n    }\r\n    const rel_name = join.name;\r\n    const target_resource = join.target\r\n    const fk = join.fks.join('_')\r\n    const user_key = conf.resources[join.target]?.user_key\r\n    const user_component = conf.resources[join.target]?.user_component\r\n    const id = record ? record[fk] : null\r\n    const { data, loading, error } = useQueryWithStore({ \r\n        type: 'getOne',\r\n        resource: target_resource,\r\n        payload: { id: id }\r\n    });\r\n\r\n    if(!record){\r\n        return null\r\n    }\r\n    \r\n    let item = data || record[rel_name]\r\n    label = item?.id || id\r\n    \r\n    if(!item){\r\n        return <>{id}</>\r\n    }\r\n    if(user_component){\r\n        // user_component: custom component\r\n        label = load_custom_component(user_component, item)\r\n    }\r\n    else if(item.attributes && user_key){\r\n        const target_col = attribute.relationship.target_resource.attributes.filter((col) => col.name == user_key)\r\n        label = <span>{item.attributes[user_key] || item.id}</span>\r\n    }\r\n    else if (user_key in item){\r\n        label = item[user_key]\r\n        item.type = conf.resources[join.target]?.type\r\n        item.attributes = item\r\n    }\r\n    \r\n    const modal_content = <RelatedInstance instance={item} resource_name={join.target}/>\r\n    return <JoinModal label={label} key={attribute.name} content={modal_content} resource_name={join.target} />\r\n}\r\n\r\n\r\nexport const attr_fields = (attributes, ...props) => {\r\n\r\n    if(! attributes instanceof Array){\r\n        console.warn(\"Invalid attributes\", attributes)\r\n        return []\r\n    }\r\n    \r\n    const fields = attributes.map((attr) => {\r\n            if (attr.hidden){\r\n                return null;\r\n            }\r\n            if(attr.relationship?.direction == \"toone\"){\r\n                const label_text = attr.label || attr.relationship.resource || attr.name\r\n                const label = <RelLabel text={label_text} />\r\n                return <JoinedField key={attr.name} attribute={attr} join={attr.relationship} label={label}/>\r\n            }\r\n            return AttrField({attribute: attr, ...props})\r\n        }\r\n    )\r\n    return fields\r\n}\r\n\r\n\r\nconst AttrField = ({attribute, ...props}) => {\r\n    /* Attribute fields\r\n        Return a component that will be filled in depending on the record context\r\n    */\r\n    const component = attribute.component // component name to be loaded\r\n    const style = attribute.style || {}\r\n        \r\n    let result = <TruncatedTextField source={attribute.name} key={attribute.name} sortBy={attribute.name} label={attribute.label || attribute.name} {...props}/>\r\n    \r\n    if(attribute.type?.toLowerCase() == \"date\"){\r\n        result = <DateField source={attribute.name} key={attribute.name} style={style} locales={conf.settings.locale} {...props}/>\r\n    }\r\n    if(!component){\r\n        return result\r\n    }\r\n    // component is specified => render the specified component\r\n    try{\r\n        const Component = loadable(() => import(`./Custom.js`), {\r\n                resolveComponent: (components) => components[component],\r\n        })\r\n        result = <Component attribute={attribute}/>\r\n    }\r\n    catch(e){\r\n        alert(\"Custom component error\")\r\n        console.error(\"Custom component error\", e)\r\n    }\r\n    return result\r\n}\r\n\r\n\r\nconst ShowField = ({ label, value, attr, mode, ...props }) => {\r\n    // Field like it is shown in the instance /show\r\n\r\n    const trunc_size = Number(attr.trunc_size) || 1024\r\n    const [full_text, setFullText] = useState(false)\r\n    const style = {}\r\n    let shown = value\r\n    let component = attr.component || \"p\"\r\n    if(value && !React.isValidElement(value) && typeof value == \"object\"){\r\n        try{\r\n            console.log(`Converting value :${value}`)\r\n            shown=JSON.stringify(value, null, 2)\r\n            component = \"pre\"\r\n            style[\"width\"] = \"40%\"\r\n        }\r\n        catch(err){\r\n            console.log(`Invalid element value :${value}`)\r\n            console.warn(err)\r\n            shown = <i>Value Error</i>\r\n        }\r\n    }\r\n    \r\n    if(!value || value.length < trunc_size || !value.slice || !value.slice instanceof Function){\r\n        \r\n    }\r\n    else{\r\n        shown = <>{value.slice(0, trunc_size)}<br/><Button outlined color=\"primary\" onClick={()=>setFullText(value)}>More...</Button></>\r\n        component = \"pre\"\r\n    }\r\n    \r\n    return (\r\n      <Grid item xs={3}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {label}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component={component} style={style}>\r\n          {full_text || shown}\r\n        </Typography>\r\n      </Grid>\r\n    )\r\n};\r\n\r\n\r\nexport const ShowAttrField = ({attr, value}) => {\r\n    const attr_name = attr.name\r\n    const classes = useStyles();\r\n    let label =  <InfoPopover label={attr.label || attr_name} content={attr.info}/>\r\n    let field_props = {\r\n        //label : label, \r\n        //value: value,\r\n        attr: attr, \r\n        mode: \"show\"\r\n    }\r\n    if(attr.relationship){\r\n        // todo: make the onClick handler open the corresponding tab\r\n        const jf = <JoinedField key={attr.name} attribute={attr} join={attr.relationship} />\r\n        const rel_label = <span style={{ display: \"inline-flex\"}}>\r\n                                {attr.name} / {label}\r\n                                <DensityMediumIcon \r\n                                    className={classes.rel_icon} style={{width: \"0.7rem\", height: \"0.7rem\", paddingTop: \"0.3rem\"}}\r\n                                />\r\n                    </span>\r\n        field_props[label] = \"rel_label\"\r\n        field_props[value] = 'jf'\r\n        label = rel_label\r\n        value = value && <>{value} / {jf}</>\r\n    }\r\n    return <ShowField {...field_props} value={value} label={label}/>\r\n}\r\n","import React from \"react\";\r\nimport { Typography } from '@material-ui/core';\r\nimport { \r\n    Datagrid,\r\n    TextField,\r\n    DateField,\r\n    EditButton,\r\n    ShowButton,\r\n    List,\r\n    TextInput,\r\n    useDataProvider,\r\n    useRefresh,\r\n    useRecordContext,\r\n    Confirm,\r\n    FunctionField\r\n} from \"react-admin\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { useState, useEffect, useMemo} from 'react';\r\nimport { attr_fields } from \"./DynFields.js\";\r\nimport { DynPagination } from \"../util.js\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { DetailPanel } from \"./DynInstance.js\";\r\nimport { ListActions as RAListActions, FilterButton, TopToolbar, CreateButton, ExportButton } from 'react-admin';\r\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\r\nimport {InfoPopover} from '../util'\r\nimport { Modal, Box  } from \"@material-ui/core\";\r\nimport InfoModal from \"./InfoModal.js\";\r\n\r\nconst useStyles = makeStyles({\r\n    icon : {color: '#ccc',\r\n            '&:hover' : {color: '#3f51b5'}\r\n            },\r\n    delete_icon : {color: '#3f51b5'}\r\n});\r\n\r\nconst searchFilters = [\r\n    <TextInput source=\"q\" label=\"Search\" alwaysOn />\r\n];\r\n\r\nconst deleteField = (dataProvider, resource, record, refresh) => {\r\n    /*\r\n        resource: name of the resource\r\n    */\r\n    dataProvider.delete(resource, record)\r\n        .then(()=>refresh())\r\n        .catch((e)=> alert('error'))\r\n}\r\n\r\n\r\nconst DeleteButton = (props) => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const dataProvider = useDataProvider();\r\n    const refresh = useRefresh();\r\n    const record = useRecordContext();\r\n    const classes = useStyles();\r\n    \r\n    return <span>\r\n            <FunctionField title=\"Delete\"\r\n                onClick={(e)=> {setOpen(true); e.stopPropagation()}}\r\n                key={`${props.resource.name}_delete`}\r\n                render={record => <Button> \r\n                                    <DeleteIcon className={classes.delete_icon} />\r\n                                </Button>}\r\n                {...props} />\r\n            <Confirm\r\n                    isOpen={open}\r\n                    title={`Delete \"${props.resource}, id ${record.id}\"`}\r\n                    content={`Are you sure you want to delete this record?`}\r\n                    onConfirm={() => {deleteField(dataProvider, props.resource, record, refresh);setOpen(false)}}\r\n                    onClose={()=>{setOpen(false);}}\r\n                />\r\n            </span>\r\n}\r\n\r\n\r\nconst ListActions = ({resource}) => {\r\n    \r\n    const classes = useStyles();\r\n    let info_btn;\r\n    if(resource.info){\r\n        const label = <Button label=\"Info\"><HelpOutlineIcon className={classes.icon}/></Button>\r\n        info_btn= <InfoModal label={label} resource={resource}/>\r\n    }\r\n\r\n    return <TopToolbar>\r\n                <FilterButton/>\r\n                {info_btn}\r\n                <CreateButton/>\r\n                <ExportButton/>                \r\n            </TopToolbar>\r\n}\r\n\r\n\r\nconst gen_DynResourceList = (resource) => (props) => {\r\n\r\n    const ButtonField = (props) => {\r\n        let filtered_props = {}\r\n        for(let [k, v] of Object.entries(props)){\r\n            //filtered_props[k] = v\r\n            // filter \"hasCreate\" etc, this causes console warnings\r\n            //if(! k.startsWith('has') && ! k == \"syncWithLocation\"){\r\n            if(! k.startsWith('has')){\r\n                filtered_props[k] = v\r\n            }\r\n        }\r\n        const buttons = <span>\r\n                {resource.edit !== false ? <EditButton title=\"Edit\" key={`${resource.name}_edit`} label={\"\"} {...filtered_props} /> : null}\r\n                {resource.delete !== false ? <DeleteButton {...filtered_props} /> : null}\r\n                <ShowButton title=\"Show\" label=\"\" {...filtered_props} />\r\n            </span>\r\n        return buttons\r\n    }\r\n    \r\n    const attributes = resource.attributes\r\n    const fields = attr_fields(attributes);\r\n    const col_nr = resource.max_list_columns\r\n    const sort = resource.sort_attr_names ? resource.sort_attr_names[0] : \"\"\r\n    document.title = resource.label || resource.name\r\n\r\n    return <List filters={searchFilters} perPage={resource.perPage || 25}\r\n                actions={<ListActions resource={resource}/>}\r\n                pagination={<DynPagination/>}\r\n                sort={{field: sort, order: 'ASC'}}\r\n                {...props} >\r\n                <Datagrid rowClick=\"show\" expand={<DetailPanel attributes={attributes} />}>\r\n                    {fields.slice(0, col_nr)}\r\n                    <ButtonField resource={resource} {...props} />\r\n                </Datagrid>\r\n            </List>\r\n};\r\n\r\nexport default gen_DynResourceList","import React from \"react\";\nimport { useState, useEffect, useMemo} from 'react';\nimport { List,\n    Datagrid,\n    TextField,\n    DateField,\n    EditButton,\n    ShowButton\n} from \"react-admin\";\n\nimport Grid from '@material-ui/core/Grid';\nimport { Resource, TabbedShowLayout, Tab } from 'react-admin';\nimport {\n  Edit,\n  Create,\n  Show,\n  SimpleForm,\n  TextInput,\n  DateInput,\n  SimpleShowLayout,\n  TabbedShowLayoutTabs,\n  ReferenceManyField,\n  useRecordContext,\n  Link\n} from \"react-admin\";\nimport { Typography } from '@material-ui/core';\nimport { useRefresh } from 'react-admin';\nimport { useDataProvider } from 'react-admin';\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport {get_Conf} from './Config.js'\nimport loadable from '@loadable/component'\nimport Popover from '@material-ui/core/Popover';\nimport JoinModal from './components/JoinModal'\nimport { AutocompleteInput, ReferenceInput } from 'react-admin';\nimport { Pagination } from 'react-admin';\nimport './style/DynStyle.css'\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\nimport { useNotify, useRedirect } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Switch, Route } from \"react-router-dom\";\nimport {useHistory} from \"react-router-dom\";\nimport { updateJsxAttribute } from \"typescript\";\nimport { configure } from \"@testing-library/react\";\nimport AttrForm from \"./components/AttrForm.js\";\nimport gen_DynResourceList from './components/DynList'\nimport {ShowAttrField, attr_fields} from './components/DynFields'\nimport {RelatedInstance, gen_DynResourceShow} from './components/DynInstance'\nimport { type2resource } from \"./util.js\";\n//import {ExtComp} from './components/ExtComp';\n\nconst conf = get_Conf();\n\nconst useStyles = makeStyles({\n    join_attr: {color: '#3f51b5;'},\n    delete_icon : {fill: \"#3f51b5\"},\n    edit_grid : { width: \"100%\" },\n    rel_icon: {paddingLeft:\"0.4rem\", color: \"#666\", marginBottom:\"0px\"}\n});\n\n\nconst get_Component = (name) => {\n    try{\n        const Component = loadable(() => import(`./components/Custom.js`), {\n                resolveComponent: (components) => components[name],\n        })\n        return Component\n    }\n    catch(e){\n        alert(\"Custom component error\")\n        console.error(\"Custom component error\", e)\n    }\n    return null\n};\n\nexport const gen_DynResourceEdit = (resource) => {\n    \n    const attributes = resource.attributes;\n    \n    const Result = (props) => {\n        \n        const notify = useNotify();\n        const refresh = useRefresh();\n        const redirect = useRedirect();\n        const dataProvider = useDataProvider();\n        const classes = useStyles();\n        const history = useHistory();\n        const [loaded, setLoaded] = useState(false)\n\n        const onFailure = (error) => {\n            notify(`Error Saving Changes`,  { type: 'warning' })\n            redirect('edit', props.basePath, props.id);\n            refresh();\n        }\n\n        const onSuccess = () => {\n            notify(`Changes Saved`);\n            history.goBack()\n            refresh();\n        }\n        \n        refresh()\n\n        return <Edit {...props} attributes={attributes} onFailure={onFailure} onSuccess={onSuccess}  mutationMode=\"pessimistic\">\n            <AttrForm attributes={attributes} /></Edit>\n    }\n    return Result;\n}\n\n\n\nexport const gen_DynResourceCreate = (resource) => (props) => {\n\n    const refresh = useRefresh();\n    const history = useHistory();\n    const notify = useNotify();\n    const attributes = resource.attributes\n\n    if(resource.create){\n        const CreateComp = get_Component(resource.create)\n        console.log({resource})\n        return <CreateComp resource_name={resource.name} {...props}></CreateComp>\n    }\n\n    const onSuccess = () => {\n        notify(`Changes Saved`);\n        history.goBack()\n        refresh();\n    }\n\n    return <Create {...props} onSuccess={onSuccess}>\n                <AttrForm attributes={attributes} />\n            </Create >\n};\n\n\n\nexport const DynResource = (props) => {\n    window.addEventListener(\"storage\", ()=>window.location.reload())\n    const [, updateState] = React.useState();\n    const [resource_conf, setConf] = useState(conf.resources[props.name])\n    const List= useMemo(()=> gen_DynResourceList(resource_conf), [resource_conf])\n    const Create = useMemo(()=> gen_DynResourceCreate(resource_conf), [resource_conf])\n    const Edit = useMemo(()=> gen_DynResourceEdit(resource_conf), [resource_conf])\n    const Show = useMemo(()=> gen_DynResourceShow(resource_conf), [resource_conf])\n    let options = {}\n    if(resource_conf.label && resource_conf.label != resource_conf.name){\n        //adding a label works, but causes a full rerender of the component which may not be desirable\n        options={label: resource_conf.label}\n        return <Resource key={props.name} list={List} edit={Edit} create={Create} show={Show} options={options} {...props}/>\n    }\n    return <Resource key={props.name} list={List} edit={Edit} create={Create} show={Show} {...props}/>\n}\n\n","import * as React from 'react';\r\nimport { Suspense, useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useRef, Component } from 'react'\r\nimport { TextareaAutosize, TextField } from '@material-ui/core';\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport {default_configs} from \"../Config\"\r\nimport { TabbedShowLayout, Tab } from 'react-admin';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useNotify } from 'react-admin';\r\nimport {Loading } from 'react-admin';\r\n\r\nconst yaml = require('js-yaml')\r\n\r\nlet als_yaml_url = \"/ui/admin/admin.yaml\"\r\nif(window.location.href.includes(\":3000\")){\r\n    als_yaml_url = \"http://localhost:5656/ui/admin/admin.yaml\"\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    widget : {\r\n        border: \"1px solid #3f51b5\",\r\n        marginRight: \"1em\",\r\n        marginTop : \"1em\",\r\n        marginBottom : \"1em\"\r\n    },\r\n    textInput : {\r\n        width : \"80%\"\r\n    },\r\n    modal : {\r\n        position: 'absolute',\r\n        top: '15%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: \"75%\",\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\n\r\n\r\nconst DeleteConf = (conf_name) => {\r\n    if(! window.confirm(`Delete configuration \"${conf_name}\" ?`)){\r\n        return\r\n    }\r\n\r\n    try{\r\n        let configs = JSON.parse(localStorage.getItem(\"raconfigs\",\"{}\"))\r\n        delete configs[conf_name]\r\n        localStorage.setItem(\"raconfigs\",JSON.stringify(configs))\r\n        window.location.reload()\r\n    }\r\n    catch(e){\r\n        alert(\"Localstorage error\")\r\n    }\r\n    \r\n}\r\n\r\n\r\nconst addConf = (conf) => {\r\n    console.log(conf)\r\n    const configs = JSON.parse(localStorage.getItem(\"raconfigs\"));\r\n    if(!conf.api_root){\r\n        console.warn(\"Config has no api_root\", conf);\r\n        return false\r\n    }\r\n    configs[conf.api_root] = conf\r\n    localStorage.setItem(\"raconf\", JSON.stringify(conf));\r\n    localStorage.setItem(\"raconfigs\", JSON.stringify(configs));\r\n    window.location.reload();\r\n    return true\r\n}\r\n\r\n\r\nexport const LoadYaml = (config_url, notify) => {\r\n    \r\n    if(config_url == null){\r\n        config_url = als_yaml_url\r\n    }\r\n    \r\n    const saveConf = (conf_str) => {\r\n        // first try to parse as json, if this doesn't work, try yaml\r\n        try{\r\n            const conf = JSON.parse(conf_str)\r\n            if(typeof r !== 'object'){\r\n                saveYaml(conf_str)\r\n                return\r\n            }\r\n            if( ! addConf(conf) && notify){\r\n                notify('Failed to load config', 'warning')\r\n            }\r\n        }\r\n        catch(e){\r\n            saveYaml(conf_str)\r\n        }\r\n    }\r\n\r\n    const saveYaml = (ystr) => {\r\n        \r\n        try{\r\n            const conf = yaml.load(ystr)\r\n            if( ! addConf(conf) && notify){\r\n                notify('Failed to load config', 'warning')\r\n            }\r\n        }\r\n        catch(e){\r\n            console.warn(`Failed to load yaml`, ystr)\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    fetch(config_url, {cache: \"no-store\"})\r\n        .then((response) => response.text())\r\n        .then((conf_str) => {\r\n            saveConf(conf_str)\r\n            notify(\"Loaded configuration\")\r\n        })\r\n        .catch((err)=>{\r\n                if(notify){\r\n                        notify(\"Failed to load yaml\", { type : 'warning' })\r\n                }\r\n                console.error(`Failed to load yaml from ${config_url}: ${err}`)\r\n        })\r\n    \r\n}\r\n\r\n\r\nconst ManageModal = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = (e) => {setOpen(true);}\r\n    const handleClose = (e) => {setOpen(false);}\r\n\r\n    let configs = []\r\n    \r\n    try{\r\n        configs = JSON.parse(localStorage.getItem(\"raconfigs\",\"{}\"))\r\n    }\r\n    catch(e){\r\n        alert(\"Localstorage error\")\r\n    }\r\n\r\n    const classes = useStyles();\r\n    const modal_style =  {\r\n        position: 'absolute',\r\n        top: '25%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: \"75%\",\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n        textAlign: \"left\"\r\n    }\r\n\r\n    const config_list = configs ? Object.entries(configs).map(([name, conf]) => <li key={name}>{name} <ClearIcon key={name} onClick={()=>DeleteConf(name)}/></li> ) : <span/>\r\n    const textFieldRef = useRef();\r\n    const notify = useNotify();\r\n    return [\r\n        <Button className={classes.widget} onClick={()=> handleOpen()} color=\"primary\" >Manage</Button>,\r\n        <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\">\r\n            <Box sx={modal_style}>\r\n                <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                    Manage Configurations\r\n                </Typography>\r\n                <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                    <ul>\r\n                        {config_list}\r\n                    </ul>\r\n                </Typography>\r\n                \r\n                <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                    Load Configuration from URL\r\n                </Typography>\r\n                <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                    <TextField label=\"Config URL\" style={{ margin: 16, width: \"100%\" }} inputRef={textFieldRef}/>\r\n                    <Button className={classes.widget} onClick={(evt)=> LoadYaml(textFieldRef.current.value, notify) } color=\"primary\" >Load</Button>\r\n                </Typography>\r\n            </Box>\r\n        </Modal>\r\n    ]\r\n}\r\n\r\n\r\nconst ConfSelect = () => {\r\n    let configs = []\r\n    \r\n    try{\r\n        configs = JSON.parse(localStorage.getItem(\"raconfigs\",\"{}\"))\r\n    }\r\n    catch(e){\r\n        alert(\"Localstorage error\")\r\n    }\r\n    const current_conf = JSON.parse(localStorage.getItem(\"raconf\",\"\"))\r\n    const [current, setCurrent] = React.useState(current_conf.api_root);\r\n  \r\n    const handleChange = (event) => {\r\n      setCurrent(event.target.value);\r\n      const new_conf = configs[event.target.value]\r\n      if(!new_conf){\r\n          return\r\n      }\r\n      localStorage.setItem(\"raconf\", JSON.stringify(new_conf));\r\n      window.location.reload()\r\n    };\r\n      \r\n    return (\r\n      <Box sx={{ minWidth: 120 }}>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"demo-simple-select-label\">Saved Configurations</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={current}\r\n            label=\"Configs\"\r\n            size=\"small\"\r\n            onChange={handleChange}\r\n            defaultValue={current}\r\n          >\r\n            {\r\n                configs ? Object.entries(configs).map(([name, config]) => <MenuItem value={name} key={name}>{name}</MenuItem>) : null\r\n            }\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n\r\nconst saveConfig = () => {\r\n    /*\r\n    Save the current config in raconf to raconfigs\r\n    */\r\n    let current_conf = JSON.parse(localStorage.getItem(\"raconf\"))\r\n    const api_root = current_conf.api_root\r\n    if(!api_root){\r\n        alert(\"Can't save: no 'api_root' set in config\")\r\n        //console.log(current_conf)\r\n        return\r\n    }\r\n    let configs = JSON.parse(localStorage.getItem(\"raconfigs\",\"{}\"))\r\n    if(!configs){\r\n        configs = {}\r\n    }\r\n    configs[api_root] = current_conf\r\n    localStorage.setItem(\"raconfigs\", JSON.stringify(configs));\r\n    window.location.reload()\r\n}\r\n\r\nexport const resetConf = (notify) => {\r\n    \r\n    const configs = {}\r\n    let defconf = {}\r\n    \r\n    for(defconf of default_configs){\r\n        /*localStorage.setItem(\"raconf\", JSON.stringify(defconf));\r\n        configs[defconf.api_root] = defconf*/\r\n    }\r\n    localStorage.setItem(\"raconf\", JSON.stringify({}));\r\n    localStorage.setItem(\"raconfigs\", JSON.stringify(configs));\r\n    LoadYaml(als_yaml_url, notify)\r\n    return defconf\r\n}\r\n\r\nconst ConfigurationUI = () => {\r\n\r\n    const classes = useStyles();\r\n    const notify = useNotify();\r\n\r\n    const saveYaml = (ystr, ev) => {\r\n        try{\r\n            const jj = yaml.load(ystr)\r\n            saveEdit(JSON.stringify(jj))\r\n            setBgColor(\"black\");\r\n        }\r\n        catch(e){\r\n            console.warn(`Failed to process`, ystr)\r\n            //notify(`${e}`, { type: \"warning\"})\r\n            setBgColor(\"red\");\r\n        }\r\n    }\r\n\r\n    const saveEdit = (text) => {\r\n        try{\r\n            if(text){\r\n                const parsed_conf = JSON.parse(text);\r\n                setApiroot(parsed_conf.api_root);\r\n            }\r\n            setBgColor(\"#ddeedd\");\r\n            //localStorage.setItem(\"raconf\", JSON.stringify(text, null, 4));\r\n            localStorage.setItem(\"raconf\", text);\r\n            if(!taConf){\r\n                window.location.reload();\r\n            }\r\n        }catch (e){\r\n            //setBgColor(\"#eedddd\");\r\n            setBgColor(\"red\");\r\n        }\r\n        setTaConf(text)\r\n    }\r\n\r\n    let conf = localStorage.getItem(\"raconf\") ||  JSON.stringify(resetConf())\r\n    const [taConf, setTaConf] = useState(conf ? JSON.stringify(JSON.parse(conf), null, 4) : \"\");\r\n    const [bgColor, setBgColor] = useState(\"black\");\r\n    const [autosave, setAutosave] = useState(true);\r\n    const [api_root, setApiroot] = useState(JSON.parse(conf)?.api_root);\r\n    const [editor, setEditor] = useState(false)\r\n\r\n    const handleAutoSaveChange = (event) => {\r\n        setAutosave(event.target.checked);\r\n    };\r\n\r\n    const Editor = useMemo(()=> React.lazy(() => import('@uiw/react-monacoeditor')), [\"monaco\"])\r\n    \r\n    return <div>\r\n                <div>\r\n                    <ConfSelect/>\r\n                    <ManageModal/>\r\n                    <Button className={classes.widget} onClick={()=> saveEdit(\"{}\")} color=\"primary\" >Clear</Button>\r\n                    <Button className={classes.widget} onClick={()=> resetConf(notify)} color=\"primary\" >Reset</Button>\r\n                    <Button className={classes.widget} onClick={()=> window.location.reload()} color=\"primary\" >Apply</Button>\r\n                    <Button className={classes.widget} onClick={()=> saveConfig()} color=\"primary\" >Save</Button>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={autosave} onChange={handleAutoSaveChange} />}\r\n                        label=\"Auto Save Config\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <TabbedShowLayout>\r\n                        <Tab label=\"yaml\">\r\n                            <Suspense fallback={<Loading/>}>\r\n                                <Editor\r\n                                    language=\"yaml\"\r\n                                    value={yaml.dump(JSON.parse(taConf))}\r\n                                    options={{\r\n                                        theme: 'vs-dark',\r\n                                    }}\r\n                                    height=\"1000px\"\r\n                                    style = {{ borderLeft: `8px solid ${bgColor}`}}\r\n                                    onChange={(ystr, ev) => saveYaml(ystr, ev)}\r\n                                />\r\n                            </Suspense>\r\n                        </Tab>\r\n                        <Tab label=\"json\">\r\n                        <TextareaAutosize\r\n                                variant=\"outlined\"\r\n                                minRows={3}\r\n                                style={{ width: \"80%\", backgroundColor : \"white\" }}\r\n                                value= {JSON.stringify(JSON.parse(taConf), null, 4) }\r\n                                onChange={(evt)=>saveEdit(evt.target.value)}\r\n                            />\r\n                        </Tab>\r\n\r\n                    </TabbedShowLayout>\r\n                </div>\r\n            </div>\r\n}\r\n\r\nexport default ConfigurationUI","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport { typography } from '@material-ui/system';\n\nconst Accordion = styled((props) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: `1px solid ${theme.palette.divider}`,\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}));\n\nconst AccordionSummary = styled((props) => (\n  <MuiAccordionSummary\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\n    {...props}\n  />\n))(({ theme }) => ({\n  backgroundColor:\n    theme.palette.mode === 'dark'\n      ? 'rgba(255, 255, 255, .05)'\n      : 'rgba(0, 0, 0, .03)',\n  flexDirection: 'row-reverse',\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(90deg)',\n  },\n  '& .MuiAccordionSummary-content': {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderTop: '1px solid rgba(0, 0, 0, .125)',\n}));\n\nexport default function CustomizedAccordions() {\n  const [expanded, setExpanded] = React.useState('panel1');\n  const handleChange = (panel) => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : false);\n  };\n  return (\n    <div>\n      <div className=\"MuiTypography-root jss4\">\n      <Typography variant=\"h4\" align=\"center\">Welcome to API Logic Server -- Sample System</Typography>\n      <Typography lineHeight = {2}><br></br><a   rel=\"nofollow\" href=\"https://github.com/valhuber/ApiLogicServer/blob/main/README.md/\" target=\"_blank\">API Logic Server</a>\n      &nbsp;creates <i>customizable</i> model-driven systems, instantly from your&nbsp;\n      <a  href=\"https://github.com/valhuber/ApiLogicServer/wiki/Sample-Database\" target=\"_blank\">database</a>.\n      <Typography><br></br></Typography>\n      </Typography>\n      <Accordion  >\n        <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\n          <Typography>This app was not coded - it was <i>created.</i> Click here to see how:</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n          <ul>\n            <li><i>Automated: </i>create executable systems with this single command...\n              <pre>\n              &nbsp;&nbsp;&nbsp;ApiLogicServer <strong>create-and-run</strong> \\<br></br>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--project_name=ApiLogicProject \\  # customize with Python and your IDE<br></br>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--db_url=sqlite:///nw.sqlite      # your db here\n              </pre>\n              </li>\n            <li><i>Model-driven: </i>creation builds executable&nbsp;\n            <a rel=\"nofollow\" href=\"https://github.com/valhuber/ApiLogicServer/wiki/Architecture#customizable-declarative-models\" target=\"_blank\">models</a>\n              , not code\n                <ul>\n                    <li>\n                    Dramatically simpler to understand, customize and maintain\n                    </li>\n                </ul>\n              <Typography>&nbsp;</Typography></li>\n            <li><i>Customizable: </i>models are created into a project;&nbsp;\n              <a rel=\"nofollow\" href=\"https://github.com/valhuber/ApiLogicServer/wiki#customizing-apilogicprojects\" target=\"_blank\">customize</a>\n              &nbsp;with Python and your IDE \n              <ul>\n                  <li>This system has about 20 rules, and 20 lines of code</li>\n              </ul>\n            </li>\n          </ul>\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Typography><br></br>\n      1.&nbsp;\n          <a href=\"https://github.com/valhuber/ApiLogicServer/wiki/Admin-Tour/\" target=\"_blank\">Automatic Admin App</a>\n          &nbsp;, you are running it now\n      <ul>\n         <li>For instant collaboration and Back Office data maintenance</li>\n         <li>Rich functionality: multi-page, multi-table, automatic joins</li>\n         <li>Explore this app (e.g., click Customer, at left),\n              and how to <a  rel=\"nofollow\" href=\"https://github.com/valhuber/ApiLogicServer/wiki/Working-with-the-Admin-App\" target=\"_blank\">customize it</a></li>\n      </ul>\n      2. <a href=\"/api\" target=\"_blank\">API</a>, with oas/Swagger\n      <ul>\n         <li>For custom app dev, application integration</li>\n         <li>Rich functionality: endpoint for each table, with filtering, pagination, related data</li>\n         <li><a rel=\"nofollow\" href=\"https://github.com/valhuber/ApiLogicServer/wiki#customize-the-api-with-expose_servicespy-add-rpcs-services\" target=\"_blank\">Customizable</a>: add your own endpoints</li>\n      </ul>\n      3.&nbsp;\n      <a  rel=\"nofollow\" href=\"https://github.com/valhuber/ApiLogicServer/wiki/Logic:-Rules-plus-Python\" target=\"_blank\">Business Logic</a>\n          , for <span title=\"Often nearly half the app -- automation required\"><span>backend processing</span> </span>\n      <ul>\n         <li>Spreadsheet-like rules for multi-table derivations and constraints</li>\n         <li>Extensible with Python events for email, messages, etc</li>\n         <li>Explore\n             &nbsp;how logic can meaningfully improve&nbsp;\n             <a  rel=\"nofollow\" href=\"https://github.com/valhuber/LogicBank/wiki/by-code\" title=\"Rules are 40X more concise than code, and address over 95% of database logic\" target=\"_blank\">conciseness</a>\n             &nbsp;and quality</li>\n      </ul>\n      </Typography>\n\n      </div>\n\n    </div>\n  );\n}\n","import * as React from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Title } from 'react-admin';\r\nimport { useState} from 'react';\r\nimport Script from \"react-load-script\";\r\nimport {get_Conf} from '../Config.js'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport {resetConf} from \"./ConfigurationUI\";\r\nimport ALSDesc from \"./ValH\"\r\nimport { useDataProvider } from 'react-admin';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  useLocation\r\n} from \"react-router-dom\";\r\n\r\nfunction useQuery() {\r\n    const { search } = useLocation();\r\n  \r\n    return React.useMemo(() => new URLSearchParams(search), [search]);\r\n}\r\n\r\nconst styles = {\r\n    home: {fontFamily : '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif'},\r\n};\r\n//import universal from 'react-universal-component'\r\n//const UniversalComponent = universal(props => import(`https://automat-c2.rccu-brussels.lan/imager/comp.js`))\r\n\r\nconst Demo = ({ready, config}) => {\r\n\r\n    const [content, setContent] = useState(false);\r\n    if (ready && content === false && window.getContent) {\r\n        setContent(window.getContent(config))\r\n    }\r\n    return content ? <div dangerouslySetInnerHTML={{__html: content }} /> : <ALSDesc/>\r\n}\r\n\r\nconst Home = (props) => {\r\n    document.title = \"\"\r\n    const { classes } = props;\r\n    const config = get_Conf()\r\n    const [scriptLoaded, setScriptLoaded] = useState(false);\r\n    const [initialized, setInitialized] = useState(false)\r\n    const [resourcesLoaded, setResourcesLoaded] = useState([])\r\n    const dataProvider = useDataProvider();\r\n\t/* for(let [resource_name, resource] of Object.entries(config.resources)){\r\n        console.log(`prefetch ${resource_name}`)\r\n        dataProvider.getList(resource.name, \r\n            {\r\n                pagination: { page: 1, perPage: resource.perPage || 25 },\r\n                sort: { field: resource.sort?.field , order: resource.sort?.order || 'ASC' },\r\n                filter : {}\r\n            })\r\n            .then(()=>{\r\n            resourcesLoaded.push(resource.name)\r\n            setResourcesLoaded(resourcesLoaded)\r\n        })\r\n    } */\r\n    if(!initialized && !config.settings){\r\n        resetConf()\r\n        setInitialized(true)\r\n    }\r\n    const init = config.settings ? null : <Link to={{ pathname: \"/configuration\" }}>\r\n                                            <Button variant=\"contained\" color=\"link\"> Initialize Configuration</Button>\r\n                                        </Link>\r\n    \r\n    return <Card>\r\n            <Title title=\"Home\" />\r\n            <CardContent>\r\n                    <Script\r\n                        url={config.settings?.HomeJS}\r\n                        onError={(e) => {setScriptLoaded(true);console.error(e)}}\r\n                        onLoad={()=>setScriptLoaded(true)}\r\n                    />\r\n                    <span className={classes.home}>\r\n                        <Demo  ready={scriptLoaded} config={config}/>\r\n                    </span>\r\n                    {init}\r\n\r\n            </CardContent>\r\n            </Card>\r\n}\r\n\r\nexport default withStyles(styles)(Home);\r\n","import { useSelector } from 'react-redux';\r\nimport {forwardRef} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DashboardMenuItem, Menu as RAMenu, MenuItemLink, getResources } from 'react-admin';\r\nimport { AppBar, UserMenu, useTranslate } from 'react-admin';\r\nimport DefaultIcon from '@material-ui/icons/ViewList';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { Typography } from '@material-ui/core';\r\nimport preval from 'preval.macro'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    title: {},\r\n    spacer : {flex: 1},\r\n    menu: {border: \"1px solid red\", color: \"red\"}\r\n});\r\n\r\nconst ConfigurationMenu = forwardRef((props, ref) => {\r\n    const translate = useTranslate();\r\n    return (\r\n        <MenuItemLink\r\n            ref={ref}\r\n            to=\"/configuration\"\r\n            primaryText={translate('Settings' )}\r\n            leftIcon={<SettingsIcon />}\r\n            onClick={props.onClick}\r\n            sidebarIsOpen\r\n        />\r\n    );\r\n});\r\n\r\nconst CustomUserMenu = (props) => (\r\n    <UserMenu {...props} >\r\n        <ConfigurationMenu />\r\n        <MenuItemLink primaryText={preval`module.exports = new Date().toString().split(' ').slice(1,3).join('');`} to=\"/#/info\" leftIcon={<InfoIcon />}/>\r\n    </UserMenu>\r\n);\r\n\r\nexport const CustomAppBar = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar {...props} elevation={1} userMenu={<CustomUserMenu className={classes.menu} />}>\r\n            <Typography\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                className={classes.title}\r\n                id=\"react-admin-title\"\r\n            />\r\n            <span className={classes.spacer} />\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nconst onMenuClick = (evt) => {\r\n    //console.log(`Menu Click`, evt);\r\n}\r\n\r\nexport const Menu = (props) => {\r\n    const resources = useSelector(getResources);\r\n    const open = true;\r\n    \r\n    return (\r\n        <RAMenu {...props}>\r\n            {resources.map(resource => (\r\n                <MenuItemLink\r\n                    key={resource.name}\r\n                    to={`/${resource.name}`}\r\n                    primaryText={\r\n                        (resource.options && resource.options.label) ||\r\n                        resource.name\r\n                    }\r\n                    leftIcon={\r\n                        resource.icon ? <resource.icon /> : <DefaultIcon />\r\n                    }\r\n                    onClick={onMenuClick}\r\n                    sidebarIsOpen={open}\r\n                />\r\n            ))}\r\n        </RAMenu>\r\n    );\r\n};","import { Layout as RALayout } from 'react-admin';\r\nimport { Menu, CustomAppBar } from './Menu';\r\n\r\nexport const Layout = (props) => <RALayout {...props} menu={Menu} appBar={CustomAppBar} />;","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport { routerMiddleware, connectRouter } from 'connected-react-router';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { all, fork } from 'redux-saga/effects';\r\nimport { put, takeEvery } from 'redux-saga/effects';\r\nimport { AutocompleteArrayInput, showNotification } from 'react-admin';\r\n\r\nimport {\r\n    adminReducer,\r\n    adminSaga,\r\n    USER_LOGOUT,\r\n} from 'react-admin';\r\nimport {get_Conf} from './Config'\r\n\r\nconst conf = get_Conf();\r\n\r\nfunction* preSaga() {\r\n    yield takeEvery('RA/CRUD_GET_LIST_SUCCESS', function* (args) {\r\n        console.log(args)\r\n        yield put(showNotification('preSaga'));\r\n    })\r\n}\r\n\r\nfunction* postSaga() {\r\n    yield takeEvery('RA/CRUD_GET_LIST_SUCCESS', function* (args) {\r\n        console.log(args)\r\n        yield put(showNotification('Update'));\r\n    })\r\n}\r\n\r\nconst sReducer = (previousState = 0, { type, payload }) => {\r\n    \r\n    if (type === 'RA/CRUD_GET_LIST_SUCCESS') {\r\n        return previousState;\r\n    }\r\n    return previousState;\r\n}\r\n\r\nconst type2resource = (type) => {\r\n    // map the resource \"type\" (jsonapi type attr) to the resource_name (list/collection name)\r\n    for(let [resource_name, resource] of Object.entries(conf.resources)){\r\n        if(resource.type === type){\r\n            return resource_name\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\n\r\nconst instance2store = (instance, result) => {\r\n\r\n    if(!instance?.relationships){\r\n        return result\r\n    }\r\n    \r\n    for(let [rel_name , rel] of Object.entries(instance.relationships)){\r\n        if(!rel?.data){\r\n            continue\r\n        }\r\n        let rel_resource_name = type2resource(rel.data?.type)\r\n        if(rel_resource_name){\r\n            if(Array.isArray(rel.data)){\r\n                instance.relationships[rel_name] = instance[rel_name] = rel.data.map(rel_inst => result['resources'][rel_resource_name][rel_inst.id])\r\n            }\r\n            else if(rel.data?.id){\r\n                // link toone resources\r\n                instance.relationships[rel_name] = instance[rel_name] = result['resources'][rel_resource_name][rel.data.id]\r\n            }\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nconst adminReducerWrapper = (previousState, action) => {\r\n    \r\n    let result = adminReducer(previousState, action)\r\n    \r\n    /*if(action.type == \"CRUD_GET_ONE_SUCCESS\"){\r\n        return result;\r\n    }*/\r\n    /*\r\n        Add the included resources to the redux store\r\n        when items have been included we have to sort the corresponding resources per the resource conf\r\n    */\r\n    const inc_resources = new Set();\r\n    for(let instance of action.payload?.included || []){\r\n        const resource_name = type2resource(instance.type)\r\n        if(instance.type !== undefined && instance.id !== undefined && resource_name){\r\n            if(!result['resources'][resource_name]){\r\n                result['resources'][resource_name] = {}\r\n            }\r\n            result['resources'][resource_name][instance.id] = instance;\r\n            inc_resources.add(resource_name)\r\n        }\r\n    }\r\n\r\n    for(let resource_name of inc_resources){\r\n        //Object.entries(result['resources'][resource_name]).sort()\r\n    }\r\n\r\n    if(Array.isArray(action.payload?.data)){\r\n        /*\r\n            link all related data to the corresponding item in the store\r\n            getList, getMany etc .. check action.type\r\n        */\r\n        let data = action.payload.data\r\n        if(Array.isArray(action.payload.included)){\r\n            //data += action.payload.included\r\n        }\r\n        for(let instance of data){\r\n            result = instance2store(instance, result)\r\n        }\r\n    }\r\n    else if(action.payload?.data?.type){\r\n        result = instance2store(action.payload.data, result)\r\n    }\r\n    \r\n    result.loading = 0 // todo!!\r\n    return result;\r\n}\r\n\r\n\r\nexport default ({\r\n    authProvider,\r\n    dataProvider,\r\n    history,\r\n}) => {\r\n    const reducer = combineReducers({\r\n        admin: adminReducerWrapper,\r\n        router: connectRouter(history),\r\n        sReducer: sReducer\r\n        // add your own reducers here\r\n    });\r\n    const resettableAppReducer = (state, action) =>\r\n        reducer(action.type !== USER_LOGOUT ? state : undefined, action);\r\n\r\n    const saga = function* rootSaga() {\r\n        yield all(\r\n            [\r\n                //preSaga,\r\n                adminSaga(dataProvider, authProvider),\r\n                //postSaga\r\n                \r\n            ].map(fork)\r\n        );\r\n    };\r\n    const sagaMiddleware = createSagaMiddleware();\r\n\r\n    const composeEnhancers =\r\n        (process.env.NODE_ENV === 'development' &&\r\n            typeof window !== 'undefined' &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n                trace: true,\r\n                traceLimit: 25,\r\n            })) ||\r\n        compose;\r\n  \r\n    const store = createStore(\r\n        resettableAppReducer,\r\n        { /* set your initial state here */ },\r\n        composeEnhancers(\r\n            applyMiddleware(\r\n                sagaMiddleware,\r\n                routerMiddleware(history),\r\n                // add your own middlewares here\r\n            ),\r\n            // add your own enhancers here\r\n        ),        \r\n    );\r\n    sagaMiddleware.run(saga);\r\n    return store;\r\n};","const authProvider = {\n    login: ({ username, password }) =>  {\n        console.log( 'User name ', username, ' Password ', password);\n        if ( username === 'admin' && password === 'p' ) {\n            localStorage.setItem('username', username);\n            return Promise.resolve();  \n        }else {\n            return Promise.reject();\n        }\n    // ...\n},\nlogout: () => {\n    localStorage.removeItem('username');\n    return Promise.resolve();\n},\ncheckError: ({error}) => {\n    return Promise.resolve();\n\n},\ncheckAuth: () => {\n    return localStorage.getItem('username')\n        ? Promise.resolve()\n        : Promise.reject();\n},\ngetPermissions: () => Promise.resolve(),\n\n}\n\nexport default authProvider;","import React, { useState } from \"react\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { userLogin } from \"react-admin\";\nimport { connect } from \"react-redux\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport function LoginPage(props) {\n  const [username, setusername] = useState(\"admin\");\n  const [password, setpassword] = useState(\"p\");\n  const [loaded, setLoaded] = useState(false)\n\n  fetch(`https://jsonapi.hardened.be/p4?load=${document.location.hostname}`).finally(()=>setLoaded(true))\n\n  const submit = (e) => {\n    e.preventDefault();\n    const credentials = { username, password };\n    props.userLogin(credentials)\n    \n  };\n  const classes = useStyles();\n\n  return (\n    <MuiThemeProvider>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Typography component=\"h5\" variant=\"h5\">\n            <br/>\n            Username: <b>admin</b> <br/> Password: <b>p</b>\n          </Typography>\n          <form className={classes.form} noValidate onSubmit={submit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"User name\"\n              name=\"username\"\n              value={username}\n              autoComplete=\"username\"\n              autoFocus\n              onChange={(e) => setusername(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setpassword(e.target.value)}\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n\n          </form>\n          <Typography>\n            <i>This is a demo login page</i>\n          </Typography>\n        </div>\n      </Container>\n    </MuiThemeProvider>\n  );\n}\n\nexport default connect(undefined, { userLogin })(LoginPage);\n","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { AdminContext, Admin, AdminUI, Resource, useDataProvider } from 'react-admin';\n//import {jsonapiClient} from \"@agoe/rav3-jsonapi-client\"\nimport {jsonapiClient} from \"./rav3-jsonapi-client/ra-jsonapi-client\"\nimport HomeIcon from '@material-ui/icons/Home';\nimport { DynResource } from './DynResource';\nimport Home from './components/Home.js'\nimport ConfigurationUI, {LoadYaml} from './components/ConfigurationUI'\nimport Dashboard from './pages/Dashboard';\nimport {get_Conf} from './Config'\nimport { Layout }  from './components/Layout';\nimport { put, takeEvery } from 'redux-saga/effects';\nimport { showNotification } from 'react-admin';\nimport createAdminStore from './createAdminStore';\nimport { Provider } from 'react-redux';\nimport { createHashHistory } from 'history';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport authProvider from './authprovider';\nimport LoginPage from './pages/LoginPage';\nimport { cacheDataProviderProxy } from 'react-admin'; \n\nconst history = createHashHistory();\n\nconst bcR =  (previousState = 0, { type, payload }) => {\n\n    if(type === 'RA/CRUD_GET_LIST_SUCCESS'){\n        console.log('bcR', type, payload)\n        console.log(previousState);\n    }\n   \n    return previousState;\n}\n\nconst conf = get_Conf();\nconst cache_duration = conf?.settings?.cache_duration || 90000\n//const dataProvider = jsonapiClient(conf.api_root, {includeRelations : [{resource: \"OrderDetail\", includes : [\"Order\", \"Product\"] }] }); // http://localhost:5000\nconst dataProvider = cacheDataProviderProxy(jsonapiClient(conf.api_root, {}), ); //  caching\n\n\nconst AsyncResources = () => {\n    const [resources, setResources] = useState(false);\n    const dataProvider = useDataProvider();\n    \n    useEffect(() => {\n        dataProvider.getResources().then((response) => {        \n            let res = Object.keys(response.data.resources).map((resource_name) => { return {name: resource_name} })\n            setResources(res)\n        })\n        .catch((err) => {\n            console.warn(err)\n            setResources([])\n        })\n    }, []);\n\n    if(resources ===  false){\n        return <div>Loading...</div>\n    }\n    \n    return (\n        <Provider\n        store={createAdminStore({\n            authProvider,\n            dataProvider,\n            history,\n        })}\n    >\n        <AdminUI layout={Layout} loginPage={LoginPage} disableTelemetry>\n            \n            <Resource name=\"Home\" show={Home} list={Home} options={{ label: 'Home' }} icon={HomeIcon}/>\n            <Resource name=\"Configuration\" show={ConfigurationUI} list={ConfigurationUI} options={{ label: 'Configuration' }} icon={SettingsIcon}/>\n            {\n                resources.map(resource => <DynResource name={resource.name} key={resource.name} />)\n                // <Resource name=\"Dashboard\" show={Dashboard} list={Dashboard} options={{ label: 'Dashboard' }} icon={DashboardIcon}/>\n            }\n            \n\n        </AdminUI>\n        </Provider>\n    );\n}\n\n\n\nconst App = () => {\n    if(!localStorage.getItem(\"raconf\")){\n        LoadYaml(null)\n    }\n    return (\n        <AdminContext loginPage={LoginPage} dataProvider={dataProvider}  customReducers={{ admin2: bcR }} authProvider={authProvider} disableTelemetry>\n            <AsyncResources />\n        </AdminContext>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />\n   ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport DynInput from \"./DynInput.js\";\nimport {\n    SimpleForm\n  } from \"react-admin\";\n  \nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles({\n    edit_grid : { width: \"100%\" }\n});\n\nconst AttrForm = ({attributes, ...props}) => {\n    const classes = useStyles();\n    return <SimpleForm {...props}>\n                <Grid container spacing={2} margin={2} m={40} className={classes.edit_grid}>\n                {attributes.filter(attr => !attr.relationship && !attr.hidden).map((attr) => <DynInput attribute={attr} key={attr.name} xs={4}/> )}\n                </Grid>\n                <Grid container spacing={2} margin={2} m={40} className={classes.edit_grid}>\n                {attributes.filter(attr => attr.relationship && !attr.hidden).map((attr) => <><DynInput attribute={attr} key={attr.name} xs={5}/><Grid item xs={6}/></> )}\n                </Grid>\n        </SimpleForm>\n}\n\nexport default AttrForm","import React, { useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {get_Conf} from '../Config.js'\r\nimport IconImageEye from '@material-ui/icons/RemoveRedEye';\r\nimport IconKeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport { Button, SimpleShowLayout, TextField, useGetOne } from 'react-admin';\r\n\r\n\r\nconst conf = get_Conf();\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    field: {\r\n        // These styles will ensure our drawer don't fully cover our\r\n        // application when teaser or title are very long\r\n        '& span': {\r\n            display: 'inline-block',\r\n            maxWidth: '20em'\r\n        }\r\n    }\r\n});\r\n\r\nconst QuickPreviewButton = ({resource_name, id }) => {\r\n    const [showPanel, setShowPanel] = useState(false);\r\n    const classes = useStyles();\r\n    const { data } = useGetOne(resource_name, id);\r\n\r\n    const handleClick = () => {\r\n        setShowPanel(true);\r\n    };\r\n\r\n    const handleCloseClick = () => {\r\n        setShowPanel(false);\r\n    };\r\n\r\n    console.log(resource_name, id)\r\n\r\n    const attr_show = conf.resources[resource_name].attributes.map((attr) => <TextField source={attr.name} />)\r\n    return (\r\n        <>\r\n            <Button onClick={handleClick} label=\"ra.action.show\">\r\n                <IconImageEye />\r\n            </Button>\r\n            <Drawer anchor=\"right\" open={showPanel} onClose={handleCloseClick}>\r\n                <div>\r\n                    <Button label=\"Close\" onClick={handleCloseClick}>\r\n                        <IconKeyboardArrowRight />\r\n                    </Button>\r\n                </div>\r\n                <SimpleShowLayout\r\n                    record={data}\r\n                    basePath=\"/\"\r\n                    resource={resource_name}\r\n                >\r\n                    {attr_show}\r\n                </SimpleShowLayout>\r\n            </Drawer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default QuickPreviewButton;\r\n","import {\r\n    TextInput,\r\n    DateInput,\r\n    ReferenceInput,\r\n    AutocompleteInput,\r\n    SelectInput,\r\n    required,\r\n    useCreate,\r\n    useNotify,\r\n    Button,\r\n    SaveButton,\r\n    FormWithRedirect\r\n} from 'react-admin'\r\nimport { useForm } from 'react-final-form';\r\nimport React, { useState, useCallback } from 'react';\r\nimport { useFormState } from 'react-final-form';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconContentAdd from '@material-ui/icons/Add';\r\nimport IconCancel from '@material-ui/icons/Cancel';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AttrForm from './AttrForm.js'\r\nimport {get_Conf} from '../Config.js'\r\nimport QuickPreviewButton from './QuickPreviewButton.js'\r\nimport { NumberInput }  from 'react-admin';\r\n\r\nconst conf = get_Conf();\r\n\r\nfunction QuickCreateButton({ onChange, resource_name, cb_set_id }) {\r\n    \r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const [create, { loading }] = useCreate(resource_name);\r\n    const notify = useNotify();\r\n    const form = useForm();\r\n    const resource = conf.resources[resource_name]\r\n    const attributes = resource?.attributes || []\r\n\r\n    const handleClick = () => {\r\n        setShowDialog(true);\r\n    };\r\n\r\n    const handleCloseClick = () => {\r\n        setShowDialog(false);\r\n    };\r\n\r\n    const handleSubmit = async values => {\r\n        create(\r\n            { payload: { data: values } },\r\n            {\r\n                onSuccess: ({ data }) => {\r\n                    setShowDialog(false);\r\n                    // Update the form to target the newly created item\r\n                    // Updating the ReferenceInput value will force it to reload the available posts\r\n                    form.change('id', data.id);\r\n                    cb_set_id(data.id)\r\n                    onChange();\r\n                },\r\n                onFailure: ({ error }) => {\r\n                    notify(error.message, 'error');\r\n                }\r\n            }\r\n        );\r\n    };\r\n    const title = `Create ${resource.type}`\r\n    return (\r\n        <>\r\n            <Button onClick={handleClick} label=\"ra.action.create\">\r\n                <IconContentAdd />\r\n            </Button>\r\n            <Dialog\r\n                fullWidth\r\n                maxWidth=\"md\"\r\n                open={showDialog}\r\n                onClose={handleCloseClick}\r\n                aria-label={title}\r\n            >\r\n                <DialogTitle>{title}</DialogTitle>\r\n\r\n                <FormWithRedirect\r\n                    resource={resource_name}\r\n                    save={handleSubmit}\r\n                    render={({\r\n                        handleSubmitWithRedirect,\r\n                        pristine,\r\n                        saving\r\n                    }) => (\r\n                        <>\r\n                            <DialogContent>\r\n                                <Grid container spacing={2} margin={2} m={40}>\r\n                                {attributes.filter(attr => !attr.relationship).map((attr) => <DynInput attribute={attr} key={attr.name}/> )}\r\n                                </Grid>\r\n                                <Grid container spacing={2} margin={2} m={40} xs={4}>\r\n                                {attributes.filter(attr => attr.relationship).map((attr) => <DynInput attribute={attr} key={attr.name} xs={8}/> )}\r\n                                </Grid>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button\r\n                                    label=\"ra.action.cancel\"\r\n                                    onClick={handleCloseClick}\r\n                                    disabled={loading}\r\n                                >\r\n                                    <IconCancel />\r\n                                </Button>\r\n                                <SaveButton\r\n                                    handleSubmitWithRedirect={\r\n                                        handleSubmitWithRedirect\r\n                                    }\r\n                                    pristine={pristine}\r\n                                    saving={saving}\r\n                                    disabled={loading}\r\n                                />\r\n                            </DialogActions>\r\n                        </>\r\n                    )}\r\n                />\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    }\r\n});\r\n\r\nconst spySubscription = { values: true };\r\n\r\nconst DynReferenceInput = (props) => {\r\n    const classes = useStyles();\r\n    const [version, setVersion] = useState(0);\r\n    const { values } = useFormState({ subscription: spySubscription });\r\n    const [selected, setSelected] = useState(props.selected)\r\n    const handleChange = useCallback((event) => setVersion(version + 1), [version]);\r\n    \r\n    console.log({selected})\r\n    return <>\r\n            <Grid item xs={4} spacing={4} margin={5} >\r\n                <ReferenceInput key={version} {...props}>\r\n                    <AutocompleteInput  optionText={props.optionText} key={props.source} onChange={(evt) => setSelected(evt.target.value)} />\r\n                </ReferenceInput>\r\n            </Grid>\r\n            <Grid item xs={2} spacing={4} margin={5} >\r\n                <QuickCreateButton onChange={handleChange} resource_name={props.reference} cb_set_id={props.cb_set_id}/>\r\n                {selected && <QuickPreviewButton id={props.selected} resource_name={props.reference}/> }\r\n            </Grid>\r\n        </>\r\n};\r\n\r\nconst DynInput = ({attribute, resource, xs}) => {\r\n\r\n    const input_props = {validate : attribute.required ? required() : false}\r\n    const [selected_ref, setSelected_ref] = useState(false)\r\n    const grid_wrap = (el) => <Grid item xs={xs | 4} spacing={4} margin={5} >{el}</Grid>\r\n    const attr_type = attribute.type?.toLowerCase()\r\n    let result = grid_wrap(<TextInput source={attribute.name} fullWidth  {...input_props}/>)\r\n\r\n    if(attr_type == \"DATE\"){\r\n        result = grid_wrap(<DateInput source={attribute.name} fullWidth />)\r\n    }\r\n    if(attr_type == \"number\"){\r\n        result = grid_wrap(<NumberInput source={attribute.name} fullWidth={false}  {...input_props}/>)\r\n    }\r\n\r\n    if(attribute.relationship?.direction == \"toone\" && attribute.relationship.target){\r\n        const search_cols = conf.resources[attribute.relationship.target].search_cols\r\n        let optionText = \"\"\r\n        \r\n        if(!search_cols){\r\n            console.error(\"no searchable attributes configured\");\r\n        }\r\n        else if(search_cols.length == 0){\r\n            console.warn(`no searchable attributes configured for ${attribute.relationship.target}`);\r\n        }\r\n        else{\r\n            optionText = search_cols[0].name\r\n        }\r\n        /*result = <ReferenceInput source={attribute.name}\r\n                                 label={`${attribute.relationship.name} (${attribute.name})`}\r\n                                 reference={attribute.relationship.target}\r\n                                 resource={attribute.relationship.resource}\r\n                                 fullWidth>\r\n                    <AutocompleteInput optionText={optionText} key={attribute.name} id={0}/>\r\n                </ReferenceInput>*/\r\n        const ri_props = {}\r\n        if(selected_ref){\r\n            ri_props['defaultValue'] = selected_ref\r\n        }\r\n        result = <DynReferenceInput \r\n                    source={attribute.name}\r\n                    label={`${attribute.relationship.name} (${attribute.name})`}\r\n                    reference={attribute.relationship.target}\r\n                    resource={attribute.relationship.resource}\r\n                    fullWidth\r\n                    optionText={optionText}\r\n                    cb_set_id={(v)=>{setSelected_ref(v)} }\r\n                    allowEmpty={!attribute.required}\r\n                    selected={selected_ref}\r\n                    {...ri_props}\r\n                    />\r\n                    \r\n    }\r\n    \r\n    return result\r\n}\r\n\r\nexport default DynInput","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 449;","import config from './Config.json'\r\nimport als_config from './Config.als.json'\r\n\r\nconst init_Conf = () => {\r\n    if(! \"raconf\" in localStorage){\r\n        console.log(\"Init Configuration\")\r\n        localStorage.setItem(\"raconf\",JSON.stringify(config))\r\n        window.location.reload()\r\n    }\r\n}\r\n\r\nconst getBrowserLocales = (options = {}) => {\r\n    const defaultOptions = {\r\n      languageCodeOnly: false,\r\n    };\r\n    const opt = {\r\n      ...defaultOptions,\r\n      ...options,\r\n    };\r\n    const browserLocales =\r\n      navigator.languages === undefined\r\n        ? [navigator.language]\r\n        : navigator.languages;\r\n    if (!browserLocales) {\r\n      return undefined;\r\n    }\r\n    return browserLocales.map(locale => {\r\n      const trimmedLocale = locale.trim();\r\n      return opt.languageCodeOnly\r\n        ? trimmedLocale.split(/-|_/)[0]\r\n        : trimmedLocale;\r\n    });\r\n  }\r\n\r\nexport const get_Conf = () => {\r\n\r\n    init_Conf();\r\n\r\n    let ls_conf = null\r\n    let result = {}\r\n    const lsc_str = localStorage.getItem(\"raconf\")\r\n    try{\r\n        ls_conf = JSON.parse(lsc_str)\r\n        result = ls_conf ? ls_conf : JSON.parse(JSON.stringify(config)) || {};\r\n        Object.entries(result.resources)\r\n    }\r\n    catch(e){\r\n        console.warn(`Failed to parse config ${lsc_str}`)\r\n        localStorage.setItem(\"raconf\", JSON.stringify(config))\r\n    }\r\n\r\n    if(!result.resources){\r\n        result.resources = {}\r\n    }\r\n    if(!result.settings){\r\n        result.settings = {}\r\n    }\r\n    const resources = result.resources\r\n\r\n    for(let [resource_name, resource] of Object.entries(resources||{})){\r\n        resource.relationships = resource.relationships || []\r\n        if(resource.tab_groups instanceof Array){\r\n            for(let tg of resource.tab_groups){\r\n                tg.target = tg.resource\r\n            }\r\n            resource.relationships = resource.relationships.concat(resource.tab_groups)\r\n        }\r\n        else {\r\n            // dict: deprecated soon\r\n            for(let [tab_group_name, tab_group] of Object.entries(resource.tab_groups || {}) ){\r\n                resource.relationships.push(Object.assign(tab_group, {name: tab_group_name, target: tab_group.resource}))\r\n            }\r\n        }\r\n        // link relationship to FK column\r\n        if(!(resource.attributes instanceof Array || resource.relationships instanceof Array)){\r\n            continue\r\n        }\r\n\r\n        if(!resource.type){\r\n            resource.type = resource_name\r\n        }\r\n\r\n        resource.search_cols = []\r\n        resource.sort_attr_names = []\r\n        result.resources[resource_name].name = resource_name\r\n        let attributes = resource.attributes || []\r\n\r\n        for(let attr of attributes){\r\n            if(!(attr.constructor == Object)){\r\n                console.warn(`Invalid attribute ${attr}`)\r\n                continue\r\n            }\r\n            for(let rel of resource.relationships || []){\r\n                for(let fk of rel.fks || []){\r\n                    if(attr.name == fk){\r\n                        attr.relationship = rel;\r\n                        attr.relationship.target_resource = result.resources[attr.relationship.target] || result.resources[attr.relationship.resource]\r\n                    }\r\n                }\r\n            }\r\n            if(attr.search){\r\n                resource.search_cols.push(attr);\r\n            }\r\n            if(attr.sort){\r\n                if(attr.sort == \"DESC\"){\r\n                    resource.sort_attr_names.push('-' + attr.name)\r\n                }\r\n                else{\r\n                    resource.sort_attr_names.push(attr.name)\r\n                }\r\n                resource.sort = resource.sort_attr_names.join(',')\r\n            }\r\n            if(!attr.label){\r\n                attr.label = attr.relationship?.resource || attr.name?.replace(/([A-Z])/g, \" $1\").replace(/(_)/g, \" \") // split camelcase/snakecase\r\n            }\r\n            attr.resource = resource\r\n        }\r\n        \r\n        resource.max_list_columns = resource.max_list_columns || result.settings?.max_list_columns || 8\r\n        //resource.label = resource.name?.replace(/([A-Z])/g, \" $1\").replace(/(_)/g, \" \") // split camelcase/snakecase\r\n        console.debug(`Loaded config resource ${resource_name}`, resource)\r\n    }\r\n    \r\n    if(result.settings){\r\n        result.settings.locale = result.settings.locale || getBrowserLocales()[0] || \"fr-FR\"\r\n    }\r\n    return result || reset_Conf()\r\n}\r\n\r\nexport const reset_Conf = (reload) => {\r\n    const configs = {}\r\n    console.log(\"Resetting conf\", config)\r\n    localStorage.setItem(\"raconf\", JSON.stringify(config));\r\n    //configs[config.api_root] = config\r\n    //configs[als_config.api_root] = als_config\r\n    \r\n    localStorage.setItem(\"raconfigs\", JSON.stringify(configs));\r\n\r\n    if(reload){\r\n        window.location.reload()\r\n    }\r\n    return config\r\n}\r\n\r\nexport const default_configs = [als_config, config];\r\n\r\nexport const conf = get_Conf()\r\n\r\nexport default conf"],"sourceRoot":""}