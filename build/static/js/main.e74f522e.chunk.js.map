{"version":3,"sources":["rav3-jsonapi-client/errors.ts","rav3-jsonapi-client/default-settings.ts","rav3-jsonapi-client/resourceLookup.ts","Config.js","rav3-jsonapi-client/ra-jsonapi-client.ts","components/JoinModal.js","DynResource.js","components/Home.js","components/ConfigurationUI.js","components/Menu.js","components/Layout.js","createAdminStore.js","authprovider.js","pages/LoginPage.js","App.js","reportWebVitals.js","index.js","../node_modules/typescript/lib sync"],"names":["SafrsHttpError","Error","message","status","body","name","HttpError","defaultSettings","total","headers","Accept","updateMethod","arrayFormat","includeRelations","errorHandler","httpError","errors","length","alert","title","code","console","log","endpointToTypeStripLastLetters","ResourceLookup","response","lookup","includes","this","Map","resources","Object","prototype","hasOwnProperty","call","data","included","entry","key","getKey","set","resource","type","id","has","get","ret","assign","ja_type","attributes","relationships","get_Conf","localStorage","setItem","JSON","stringify","config","window","location","reload","result","lsc_str","getItem","parse","entries","e","warn","resource_name","tab_groups","Array","tg","target","concat","tab_group_name","tab_group","push","search_cols","sort_attr_names","attr","constructor","rel","fks","fk","relationship","target_resource","search","sort","join","max_list_columns","settings","debug","locale","options","defaultOptions","languageCodeOnly","opt","browserLocales","undefined","navigator","languages","language","map","trimmedLocale","trim","split","getBrowserLocales","reset_Conf","default_configs","als_config","conf","duration","prepareAttributes","resource_attr_rels","m_attrs","k","v","find","n","toString","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","textAlign","JoinModal","label","content","React","open","setOpen","onClick","stopPropagation","className","Modal","onClose","Box","sx","Typography","variant","component","mt","useStyles","makeStyles","join_attr","color","searchFilters","TextInput","source","alwaysOn","type2resource","JoinedField","attribute","record","useRecordContext","rel_name","user_key","user_component","useQueryWithStore","payload","loading","error","item","component_name","LabelComponent","loadable","resolveComponent","components","instance","load_custom_component","filter","col","attr_fields","props","hidden","direction","replace","dAttr","DateField","locales","Component","AttrField","TextField","sortBy","DynPagination","Pagination","rowsPerPageOptions","perPage","DetailPanel","Grid","container","spacing","margin","m","deleteField","dataProvider","refresh","delete","then","catch","DynInput","fullWidth","DateInput","optionText","ReferenceInput","defaultValue","reference","AutocompleteInput","xs","ResourceTitle","ShowRecordField","attr_name","value","ShowAttrField","jf","ShowField","ShowInstance","tabs","TabbedShowLayout","TabbedShowLayoutTabs","scrollButtons","useState","setLoading","setError","setRelated","useDataProvider","useEffect","getOne","fields","col_nr","Tab","ReferenceManyField","addLabel","pagination","Datagrid","rowClick","expand","slice","EditButton","DynRelationshipMany","related","rel_resource","rel_id","DynRelationshipOne","SimpleShowLayout","RelatedInstance","resource_conf","Button","Link","to","pathname","DynResource","addEventListener","List","useMemo","ButtonField","useRefresh","filtered_props","startsWith","edit","FunctionField","render","fill","ShowButton","filters","Create","SimpleForm","Edit","useNotify","redirect","useRedirect","onFailure","basePath","gen_DynResourceEdit","Show","gen_DynResourceShow","Resource","list","create","show","Content","Demo","ready","setContent","getContent","dangerouslySetInnerHTML","__html","Home","scriptLoaded","setScriptLoaded","Card","Title","CardContent","url","HomeJS","onError","onLoad","yaml","require","als_yaml_url","href","theme","widget","marginRight","marginTop","marginBottom","textInput","modal","LoadYaml","config_url","fetch","cache","saveYaml","ystr","configs","api_root","addConf","load","text","err","ManageModal","classes","config_list","conf_name","confirm","DeleteConf","textFieldRef","useRef","inputRef","evt","current","ConfSelect","current_conf","setCurrent","minWidth","FormControl","InputLabel","Select","labelId","size","onChange","event","new_conf","MenuItem","ConfigurationUI","saveEdit","parsed_conf","setApiroot","setBgColor","taConf","setTaConf","resetConf","defconf","bgColor","autosave","setAutosave","saveConfig","FormControlLabel","control","Checkbox","checked","dump","height","borderLeft","ev","jj","TextareaAutosize","minRows","backgroundColor","onMenuClick","Menu","useSelector","getResources","MenuItemLink","primaryText","leftIcon","icon","sidebarIsOpen","DashboardMenuItem","Layout","menu","sReducer","previousState","adminReducerWrapper","action","adminReducer","validUntil","Date","setTime","getTime","inc_resources","Set","add","isArray","rel_resource_name","rel_inst","authProvider","history","reducer","combineReducers","admin","router","connectRouter","saga","rootSaga","all","adminSaga","fork","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","store","createStore","state","USER_LOGOUT","applyMiddleware","routerMiddleware","run","login","username","password","Promise","resolve","reject","logout","removeItem","checkError","checkAuth","getPermissions","paper","display","flexDirection","alignItems","avatar","palette","secondary","main","form","submit","connect","userLogin","setusername","setpassword","Container","maxWidth","CssBaseline","Avatar","noValidate","onSubmit","preventDefault","credentials","required","autoComplete","autoFocus","createHashHistory","bcR","cacheDataProviderProxy","apiUrl","userSettings","httpClient","fetchUtils","fetchJson","countHeader","merge","getList","params","page","query","q","op","val","format","keys","forEach","field","prefix","order","json","meta","jsonData","unwrapData","getMany","ids","getManyReference","i","update","arr","endsWith","method","updateMany","responses","Headers","deleteMany","jsonapiClient","AsyncResources","setResources","res","createAdminStore","AdminUI","layout","loginPage","LoginPage","HomeIcon","SettingsIcon","App","AdminContext","customReducers","admin2","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","webpackEmptyContext","req","module","exports"],"mappings":"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","file":"static/js/main.e74f522e.chunk.js","sourcesContent":["import { HttpError } from 'react-admin';\n\nexport class NotImplementedError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.message = message;\n    this.name = 'NotImplementedError';\n  }\n}\n\nexport class SafrsHttpError extends HttpError {\n  constructor(message: string, status: number, body: any) {\n    super(message, status, body);\n    this.name = 'SafrsHttpError';\n  }\n}\n\nexport const safrsErrorHandler: HttpErrorHandler = (\n  httpError: HttpError\n): HttpError => {\n  /* Example Safrs Error message\n  {\n    \"errors\": [\n      {\n        \"title\": \"Request forbidden -- authorization will not help\",\n        \"detail\": \"\",\n        \"code\": \"403\"\n      }\n    ]\n  } */\n  interface err {\n    title: string;\n    detail: string;\n    code: string;\n  }\n  const errors: { errors: err[] } = httpError.body; // JSON.parse(httpError.body.stringify);\n  if (errors?.errors.length > 0) {\n    alert(\"Error \"+ errors.errors[0].title)\n    return new SafrsHttpError(\n      errors.errors[0].title,\n      httpError.status,\n      errors.errors[0].code\n    );\n  } else {\n    console.log('Unsopported Http Error Body', httpError.body);\n    return httpError;\n  }\n};\n\nexport interface HttpErrorHandler {\n  (httpError: HttpError): HttpError;\n}\n","import { safrsErrorHandler, HttpErrorHandler } from './errors';\nimport { includeRelations } from './ra-jsonapi-client';\n\nexport const defaultSettings: settings = {\n  total: 'total',\n  headers: {\n    Accept: 'application/vnd.api+json; charset=utf-8',\n    'Content-Type': 'application/vnd.api+json; charset=utf-8'\n  },\n  updateMethod: 'PATCH',\n  arrayFormat: 'brackets',\n  includeRelations: [],\n  errorHandler: safrsErrorHandler,\n  endpointToTypeStripLastLetters: ['Model', 's'] // update/create type: UserModel -> User, Users -> User\n};\n\ninterface settings {\n  total: string;\n  headers: {};\n  updateMethod: string;\n  arrayFormat: string;\n  includeRelations: includeRelations[];\n  errorHandler: HttpErrorHandler;\n  endpointToTypeStripLastLetters?: string[];\n}\n","/**\n * A map-like class that maps resource linkage objects {id: 1, type: \"user\"} to concrete resources with attributes and\n * relationships\n */\nexport default class ResourceLookup {\n  lookup: Map<any, any>;\n  includes: string[];\n  /**\n   * Constructs a new lookup map\n   * @param {Object} response A JSON API response, in JSON format\n   */\n  constructor(response: any) {\n    this.lookup = new Map();\n    this.includes = [];\n\n    // If the response wasn't a JSON dictionary, we can't and don't need to build a lookup\n    if (typeof response !== 'object') return;\n\n    let resources;\n    // if (response.hasOwnProperty('included')) {\n    if (Object.prototype.hasOwnProperty.call(response, 'included')) {\n      resources = [...response.data, ...response.included];\n    } else {\n      resources = response.data;\n    }\n\n    // Iterate over each resource returned and put each in the lookup\n    for (const entry of resources) {\n      const key = this.getKey(entry);\n      this.lookup.set(key, entry);\n    }\n  }\n\n  /**\n   * Calculates a hashable key for JSON API resources\n   * @param resource A resource linkage object\n   * @returns {string}\n   */\n  getKey(resource: any) {\n    return `${resource.type}:${resource.id}`;\n  }\n\n  /**\n   * Looks up a resource\n   * @param resource A resource linkage object\n   * @returns {Object}\n   */\n  get(resource: any) {\n    // If we don't have included data for this resource, just return the Resource Linkage object, since that's still\n    // useful\n    if (this.has(resource)) {\n      return this.lookup.get(this.getKey(resource));\n    } else {\n      return resource;\n    }\n  }\n\n  /**\n   * Returns true if the resource is in the lookup\n   * @param resource\n   * @returns {boolean}\n   */\n  has(resource: any) {\n    return this.lookup.has(this.getKey(resource));\n  }\n\n  /**\n   * Converts a JSON API data object (with id, type, and attributes fields) into a flattened object\n   * @param {Object} response A JSON API data object\n   */\n  unwrapData(response: any, includes: string[]) {\n    // The base resource object\n    const ret = Object.assign(\n      {\n        id: response.id,\n        ja_type: response.type\n      },\n      response.attributes\n    );\n    if (includes.length === 0) {\n      // shortcut, no includes: scip relationships\n      return ret;\n    }\n    // Deal with relationships\n\n    if (Object.prototype.hasOwnProperty.call(response, 'relationships')) {\n      ret.relationships = response.relationships;\n      \n    }\n\n    return ret;\n  }\n}\n\nfunction lowerFirstLetter(s: string): string {\n  return s;\n  return s[0].toLowerCase() + s.slice(1);\n}\n","import config from './Config.json'\r\nimport als_config from './Config.als.json'\r\n\r\nconst init_Conf = () => {\r\n    if(! \"raconf\" in localStorage){\r\n        console.log(\"Init Configuration\")\r\n        localStorage.setItem(\"raconf\",JSON.stringify(config))\r\n        window.location.reload()\r\n    }\r\n}\r\n\r\nconst getBrowserLocales = (options = {}) => {\r\n    const defaultOptions = {\r\n      languageCodeOnly: false,\r\n    };\r\n    const opt = {\r\n      ...defaultOptions,\r\n      ...options,\r\n    };\r\n    const browserLocales =\r\n      navigator.languages === undefined\r\n        ? [navigator.language]\r\n        : navigator.languages;\r\n    if (!browserLocales) {\r\n      return undefined;\r\n    }\r\n    return browserLocales.map(locale => {\r\n      const trimmedLocale = locale.trim();\r\n      return opt.languageCodeOnly\r\n        ? trimmedLocale.split(/-|_/)[0]\r\n        : trimmedLocale;\r\n    });\r\n  }\r\n\r\nexport const get_Conf = () => {\r\n\r\n    init_Conf();\r\n\r\n    let ls_conf = null\r\n    let result = {}\r\n    const lsc_str = localStorage.getItem(\"raconf\")\r\n    try{\r\n        ls_conf = JSON.parse(lsc_str)\r\n        result = ls_conf ? ls_conf : JSON.parse(JSON.stringify(config)) || {};\r\n        Object.entries(result.resources)\r\n    }\r\n    catch(e){\r\n        console.warn(`Failed to parse config ${lsc_str}`)\r\n        localStorage.setItem(\"raconf\", JSON.stringify(config))\r\n    }\r\n\r\n    if(!result.resources){\r\n        result.resources = {}\r\n    }\r\n    const resources = result.resources\r\n\r\n    for(let [resource_name, resource] of Object.entries(resources||{})){\r\n        resource.relationships = resource.relationships || []\r\n        if(resource.tab_groups instanceof Array){\r\n            for(let tg of resource.tab_groups){\r\n                tg.target = tg.resource\r\n            }\r\n            resource.relationships = resource.relationships.concat(resource.tab_groups)\r\n        }\r\n        else {\r\n            // dict: deprecated soon\r\n            for(let [tab_group_name, tab_group] of Object.entries(resource.tab_groups || {}) ){\r\n                resource.relationships.push(Object.assign(tab_group, {name: tab_group_name, target: tab_group.resource}))\r\n            }\r\n        }\r\n        // link relationship to FK column\r\n        if(!(resource.attributes instanceof Array || resource.relationships instanceof Array)){\r\n            continue\r\n        }\r\n\r\n        if(!resource.type){\r\n            resource.type = resource_name\r\n        }\r\n\r\n        resource.search_cols = []\r\n        resource.sort_attr_names = []\r\n        result.resources[resource_name].name = resource_name\r\n        let attributes = resource.attributes || []\r\n\r\n        for(let attr of attributes){\r\n            if(!(attr.constructor == Object)){\r\n                console.warn(`Invalid attribute ${attr}`)\r\n                continue\r\n            }\r\n            for(let rel of resource.relationships || []){\r\n                for(let fk of rel.fks || []){\r\n                    if(attr.name == fk){\r\n                        attr.relationship = rel;\r\n                        attr.relationship.target_resource = result.resources[attr.relationship.target]\r\n                    }\r\n                }\r\n            }\r\n            if(attr.search){\r\n                resource.search_cols.push(attr);\r\n            }\r\n            if(attr.sort){\r\n                resource.sort_attr_names.push(attr.name)\r\n                resource.sort = resource.sort_attr_names.join(',')\r\n            }\r\n        }\r\n        \r\n        resource.max_list_columns = resource.max_list_columns || result.settings?.max_list_columns || 8\r\n        console.debug(`Loaded config resource ${resource_name}`, resource)\r\n    }\r\n    \r\n    if(result.settings){\r\n        result.settings.locale = result.settings.locale || getBrowserLocales()[0] || \"fr-FR\"\r\n    }\r\n    return result || reset_Conf()\r\n}\r\n\r\nexport const reset_Conf = (reload) => {\r\n    const configs = {}\r\n    console.log(\"Resetting conf\", config)\r\n    localStorage.setItem(\"raconf\", JSON.stringify(config));\r\n    //configs[config.api_root] = config\r\n    //configs[als_config.api_root] = als_config\r\n    \r\n    localStorage.setItem(\"raconfigs\", JSON.stringify(configs));\r\n\r\n    if(reload){\r\n        window.location.reload()\r\n    }\r\n    return config\r\n}\r\n\r\nexport const default_configs = [als_config, config];\r\n\r\nexport const conf = get_Conf()\r\n\r\nexport default conf","import { stringify } from 'query-string';\nimport { fetchUtils, DataProvider, HttpError } from 'react-admin';\nimport merge from 'deepmerge';\nimport { defaultSettings } from './default-settings';\nimport ResourceLookup from './resourceLookup';\nimport {get_Conf} from '../Config'\nimport { number } from 'prop-types';\n\nconst conf : { [ key: string] : any } = get_Conf();\nconst duration = 2000;\n\nconst prepareAttributes = (attributes : any, resource : any) => {\n\n    // temp: convert all numbers to string to allow FK lookups (jsonapi ids are strings, while FKs may be numbers :////)\n    const resource_attr_rels = conf.resources[resource].attributes?.map( (attr : any) => attr.relationship ? attr.name : null)    \n    const m_attrs = Object.assign({}, attributes)\n    for(let [k, v] of Object.entries(attributes)){\n      m_attrs[k] = v\n      if(typeof v === 'number' && resource_attr_rels.find((n: string) => n == k)){\n        m_attrs[k] = v.toString();\n      }\n    }\n    return m_attrs\n\n}\n\n/**\n * Based on\n * \n * https://github.com/marmelab/react-admin/blob/master/packages/ra-data-simple-rest/src/index.ts\n * @see https://github.com/marmelab/FakeRest\n * \n */\nexport const jsonapiClient = (\n  apiUrl: string,\n  userSettings = {conf : {}},\n  httpClient = fetchUtils.fetchJson,\n  countHeader: string = 'Content-Range'\n): DataProvider => {\n  const settings = merge(defaultSettings, userSettings);\n  const conf__ = userSettings.conf;\n\n  \n  return {\n    /*******************************************************************************************\n     * getList\n     *******************************************************************************************/\n    getList: (resource, params) => {\n      /*todo: rename resource to resource_name*/\n      const resource_name = resource;\n      const { page, perPage } = params.pagination;\n      \n      const resource_conf : any = conf.resources[resource_name];\n      const sort : string = resource_conf.sort?.fields\n      // Create query with pagination params.\n      const query : {[k: string]: any} = {\n        'page[number]': page,\n        'page[size]': perPage,\n        'page[offset]': (page - 1) * perPage,\n        'page[limit]': perPage\n      };\n\n      if(sort){\n          query.sort = sort\n      }\n\n      console.log(params)\n      console.log(resource_conf)\n      // Add all filter params to query.\n      if(params.filter?.q && \"resources\" in conf){\n          // search is requested by react-admin\n          const search_cols = resource_conf.attributes.filter((col : any) => col.search);\n          const filter = search_cols.map((col: any) => {return { \n                                \"name\":col.name,\n                                \"op\": col.op? col.op : \"ilike\",\n                                \"val\": col.val ? col.val.format(params.filter.q) : `%${params.filter.q}%`\n                              };})\n            query['filter'] = JSON.stringify(filter) // => startswith operator in sql\n      }\n      else{\n        Object.keys(params.filter || {}).forEach((key) => {\n          query[`filter[${key}]`] = params.filter[key];\n        });\n      }\n\n      // Add sort parameter, first check the default configured sorting, then the customized sort\n      if (params.sort && params.sort.field) {\n        const prefix = params.sort.order === 'DESC' ? '-' : ''; // <> ASC\n        query.sort = `${prefix}${params.sort.field}`;\n      }\n      if(!query.sort){\n        query.sort = resource_conf.sort || \"id\"\n      }\n      const rel_conf = conf.resources[resource_name].relationships || []\n      const includes: string[] = rel_conf.map((rel : any) => rel.name);\n      query['include'] = includes.join(',');\n\n      const url = `${apiUrl}/${resource}?${stringify(query)}`;\n      console.log(query)\n      return httpClient(url)\n        .then(({ json }) => {\n          // const lookup = new ResourceLookup(json.data);\n          // When meta data and the 'total' setting is provided try\n          // to get the total count.\n          let total = 0;\n          if (json.meta && settings.total) {\n            total = json.meta[settings.total];\n          }\n          // Use the length of the data array as a fallback.\n          total = total || json.data.length;\n          const lookup = new ResourceLookup(json);\n          const jsonData = json.data.map((resource: any) =>{\n              return lookup.unwrapData(resource, includes)\n            }\n          );\n          const validUntil = new Date();\n          validUntil.setTime(validUntil.getTime() + duration);\n          return {\n            data: jsonData,\n            included: json.included,\n            validUntil : validUntil,\n            total: total\n          };\n        })\n        .catch((err: HttpError) => {\n          console.log('catch Error', err.body);\n          const errorHandler = settings.errorHandler;\n          return Promise.reject(errorHandler(err));\n        });\n    },\n\n    /*******************************************************************************************\n      getOne\n    ********************************************************************************************/\n    getOne: (resource: any, params: { id: any }) => {\n      \n      if(params.id === null || params.id === undefined){\n          console.debug(`params.id is '${params.id}'`)\n          return new Promise(()=>{ data: {}})\n      }\n      const resource_conf = conf[\"resources\"][resource];\n      if(!resource_conf){\n        console.warn(`Invalid resource ${resource}`)\n        return new Promise(()=>{});\n      }\n      const rel_conf = resource_conf?.relationships || [];\n      const includes: string[] = rel_conf.map((rel : any) => rel.name).join(\",\")\n      const url = `${apiUrl}/${resource}/${params.id}?include=${includes}`;\n      \n      return httpClient(url).then(({ json }) => {\n\n        let { id, attributes, relationships, type } = json.data;\n        Object.assign(attributes, relationships, {type: type}, {relationships: relationships}, {attributes: {...attributes} });\n        attributes = prepareAttributes(attributes, resource)\n        const validUntil = new Date();\n        validUntil.setTime(validUntil.getTime() + duration);\n        return {\n          data: {\n            id,\n            validUntil : validUntil,\n            ...attributes\n          }\n        };\n      });\n    },\n\n    /*******************************************************************************************\n      getMany\n    ********************************************************************************************/\n    getMany: (resource, params) => {\n      resource = capitalize(resource);\n      /* const query = {\n        filter: JSON.stringify({ id: params.ids })\n      }; */\n      \n      let query = 'filter[id]=' \n      query += params.ids instanceof Array ? params.ids.join(',') : JSON.stringify(params.ids); // fixme\n      // const url = `${apiUrl}/${resource}?${stringify(query)}`;\n      const url = `${apiUrl}/${resource}?${query}`;\n      return httpClient(url).then(({ json }) => {\n        console.log('getMany', json);\n        // When meta data and the 'total' setting is provided try\n        // to get the total count.\n        let total = 0;\n        if (json.meta && settings.total) {\n          total = json.meta[settings.total];\n        }\n        // Use the length of the data array as a fallback.\n        total = total || json.data.length; //  { id: any; attributes: any; }\n        const jsonData = json.data.map((value: any) =>\n          Object.assign({ id: value.id, type: value.type }, prepareAttributes(value.attributes, resource))\n        );\n        const validUntil = new Date();\n        validUntil.setTime(validUntil.getTime() + duration);\n        return {\n          data: jsonData,\n          validUntil : validUntil,\n          total: total\n        };\n      });\n    },\n\n    /*******************************************************************************************\n      getManyReference\n    ********************************************************************************************/\n    getManyReference: (resource, params : any) => {\n      const fks = params.target.split('_')\n      const ids = params.id.split('_')\n      const { page, perPage } = params.pagination;\n      const { field, order } = params.sort;\n\n      const query: {[k: string]: any} = {\n        sort: JSON.stringify([field, order]),\n      };\n\n      if(ids.length == fks.length){\n        for(let i = 0; i<fks.length; i++){\n          let fk = fks[i]\n          let id = ids[i]\n          console.log('fk', fk, params.id)\n          query[`filter[${fk}]`] = id\n        }\n      }\n      else{\n        // fk probably contains an underscore\n        // todo: how to fix???\n        console.warn(\"Wrong FK length \", ids, fks)\n        query[`filter[${fks[0]}]`] = params.ids[0]\n      }\n      query[`page[limit]`] = perPage\n      query[`page[offset]`] = (page - 1) * perPage\n     \n      const options = {};\n      const resource_conf = conf[\"resources\"][resource];\n      const rel_conf = resource_conf?.relationships || [];\n      const includes: string[] = rel_conf.map((rel : any) => rel.name).join(\",\")\n      const url = `${apiUrl}/${resource}?${stringify(query)}&include=${includes}`\n      \n      return httpClient(url, options).then(({ headers, json }) => {\n        if (!headers.has(countHeader)) {\n          console.debug(\n            `The ${countHeader} header is missing in the HTTP Response. The simple REST data provider expects responses for lists of resources to contain this header with the total number of results to build the pagination. If you are using CORS, did you declare ${countHeader} in the Access-Control-Expose-Headers header?`\n          );\n        }\n        let total = json.meta?.total;\n        if (json.meta && settings.total) {\n          total = json.meta[settings.total];\n        }\n        // Use the length of the data array as a fallback.\n        total = total || json.data.length;\n        const lookup = new ResourceLookup(json);\n        const jsonData = json.data.map((resource: any) =>{\n          return lookup.unwrapData(resource, includes)\n          }\n        );\n\n        return {\n          data: jsonData,\n          total: total\n        };\n      });\n    },\n\n    update: (resource, params) => {\n      let type = conf[\"resources\"][resource].type;\n      const arr = settings.endpointToTypeStripLastLetters;\n      for (const i in arr) {\n        if (resource.endsWith(arr[i])) {\n          type = resource.slice(0, arr[i].length * -1);\n          break; // quit after first hit\n        }\n      }\n      const data = {\n        data: {\n          id: params.id,\n          type: type,\n          attributes: params.data\n        }\n      };\n\n      return httpClient(`${apiUrl}/${resource}/${params.id}`, {\n        method: settings.updateMethod,\n        body: JSON.stringify(data)\n      })\n        .then(({ json }) => {\n          const { id, attributes } = json.data;\n          return {\n            data: {\n              id,\n              ...attributes\n            }\n          };\n        })\n        .catch((err: HttpError) => {\n          console.log('catch Error', err.body);\n          const errorHandler = settings.errorHandler;\n          return Promise.reject(errorHandler(err));\n        });\n    },\n\n    // simple-rest doesn't handle provide an updateMany route, so we fallback to calling update n times instead\n    updateMany: (resource, params) =>\n      Promise.all(\n        params.ids.map((id) =>\n          httpClient(`${apiUrl}/${resource}/${id}`, {\n            method: 'PUT',\n            body: JSON.stringify(params.data)\n          })\n        )\n      ).then((responses) => ({ data: responses.map(({ json }) => json.id) })),\n\n    /* create_old: (resource, params) =>\n      httpClient(`${apiUrl}/${resource}`, {\n        method: 'POST',\n        body: JSON.stringify(params.data)\n      }).then(({ json }) => ({\n        data: { ...params.data, id: json.id }\n      })), */\n\n    create: (resource, params) => {\n      let type = resource;\n      const arr = settings.endpointToTypeStripLastLetters;\n      for (const i in arr) {\n        if (resource.endsWith(arr[i])) {\n          type = resource.slice(0, arr[i].length * -1);\n          break; // quit after first hit\n        }\n      }\n      const data = {\n        data: {\n          type: type,\n          attributes: params.data\n        }\n      };\n      return httpClient(`${apiUrl}/${resource}`, {\n        method: 'POST',\n        body: JSON.stringify(data)\n      })\n        .then(({ json }) => {\n          const { id, attributes } = json.data;\n          return {\n            data: {\n              id,\n              ...attributes\n            }\n          };\n        })\n        .catch((err: HttpError) => {\n          console.log('catch Error', err.body);\n          const errorHandler = settings.errorHandler;\n          return Promise.reject(errorHandler(err));\n        });\n    },\n\n    delete: (resource, params) =>\n      httpClient(`${apiUrl}/${resource}/${params.id}`, {\n        method: 'DELETE',\n        headers: new Headers({\n          'Content-Type': 'text/plain'\n        })\n      }).then(({ json }) => ({ data: json })),\n\n    // simple-rest doesn't handle filters on DELETE route, so we fallback to calling DELETE n times instead\n    deleteMany: (resource, params) =>\n      Promise.all(\n        params.ids.map((id) =>\n          httpClient(`${apiUrl}/${resource}/${id}`, {\n            method: 'DELETE',\n            headers: new Headers({\n              'Content-Type': 'text/plain'\n            })\n          })\n        )\n      ).then((responses) => ({\n        data: responses.map(({ json }) => json.id)\n      })),\n\n    getResources: () => {\n        \n        if(conf){\n            return Promise.resolve({data: conf});\n        };\n        return httpClient(`${apiUrl}/schema`, {\n            method: 'GET'\n        }).then(({json}) => {\n            localStorage.setItem('raconf', JSON.stringify(json));\n            return { data: json };\n        })\n        .catch(()=> {return {data : {}} })\n      }\n    \n  };\n};\n\nfunction capitalize(s: string): string {\n  return s;\n  return s[0].toUpperCase() + s.slice(1);\n}\nexport interface includeRelations {\n  resource: string;\n  includes: string[];\n}\n","import * as React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: \"75%\",\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n  textAlign: \"left\"\r\n};\r\n\r\n\r\n\r\nexport default function JoinModal({label, content, resource_name}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = (e) => {setOpen(true); e.stopPropagation();}\r\n  const handleClose = (e) => {e.stopPropagation();setOpen(false);}\r\n\r\n  return (\r\n    <span>\r\n      <span onClick={handleOpen} className=\"JoinedField\" title={resource_name}>{label} </span>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            {label}\r\n          </Typography>\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            {content}\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n    </span>\r\n  );\r\n}","import React from \"react\";\n\nimport { useState, useEffect, useMemo} from 'react';\nimport { List,\n    Datagrid,\n    TextField,\n    DateField,\n    EditButton,\n    ShowButton\n} from \"react-admin\";\nimport Grid from '@material-ui/core/Grid';\nimport { Resource, TabbedShowLayout, Tab } from 'react-admin';\nimport {\n  Edit,\n  Create,\n  Show,\n  SimpleForm,\n  TextInput,\n  DateInput,\n  SimpleShowLayout,\n  TabbedShowLayoutTabs,\n  ReferenceManyField,\n  useRecordContext,\n  Link\n} from \"react-admin\";\nimport { Typography } from '@material-ui/core';\nimport { useRefresh } from 'react-admin';\nimport { useDataProvider } from 'react-admin';\nimport { FunctionField } from 'react-admin';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport {get_Conf} from './Config.js'\nimport loadable from '@loadable/component'\nimport Popover from '@material-ui/core/Popover';\nimport Button from '@material-ui/core/Button';\nimport JoinModal from './components/JoinModal'\nimport { AutocompleteInput, ReferenceInput } from 'react-admin';\nimport { Pagination } from 'react-admin';\nimport './style/DynStyle.css'\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\nimport { useNotify, useRedirect } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Switch, Route } from \"react-router-dom\";\n\n\nimport { updateJsxAttribute } from \"typescript\";\nimport { configure } from \"@testing-library/react\";\n\n//import {ExtComp} from './components/ExtComp';\n\nconst conf = get_Conf();\n\nconst useStyles = makeStyles({\n    join_attr: { color: '#3f51b5;' },\n});\n\nconst searchFilters = [\n    <TextInput source=\"q\" label=\"Search\" alwaysOn />\n];\n\n\nconst type2resource = (type) => {\n    for(let [resource_name, resource] of Object.entries(conf?.resources)){\n        if(resource.type === type){\n            return resource_name\n        }\n    }\n    console.warn(`No resource for type \"${type}`)\n    return conf[type]\n}\n\n\nconst AttrField = ({attribute}) => {\n    \n    const component = attribute.component // component name to be loaded\n    const style = attribute.style || {}\n        \n    let result = null\n    if(attribute.type == \"DATE\"){\n        result = <DateField source={attribute.name} key={attribute.name} style={style} locales={conf.settings.locale}/>\n    }\n    if(!component){\n        return result\n    }\n    // component is specified => render the specified component\n    try{\n        //const Component = loadable(() => import(`./components/Custom.js`), {\n        const Component = loadable(() => import(`./components/Custom.js`), {\n                resolveComponent: (components) => components[component],\n        })\n        result = <Component attribute={attribute}/>\n    }\n    catch(e){\n        alert(\"Custom component error\")\n        console.error(\"Custom component error\", e)\n    }\n    return result\n}\n\n\nconst load_custom_component = (component_name, item) => {\n\n    try{\n        const LabelComponent = loadable(() => import(`./components/Custom.js`), {\n            resolveComponent: (components) => components[`${component_name}`],\n        })\n        return <LabelComponent instance={item} />\n    }\n    catch(e){\n        alert(\"Custom component error\")\n        console.error(\"Custom component error\", e)\n    }\n    return null\n}\n\n\nconst JoinedField = ({attribute, join}) => {\n    \n    const record = useRecordContext();\n    if(record?.attributes){\n        Object.assign(record, record.attributes)\n    }\n    const rel_name = join.name;\n    const target_resource = join.target\n    const fk = join.fks.join('_')\n    const user_key = conf.resources[join.target]?.user_key\n    const user_component = conf.resources[join.target]?.user_component\n    const id = record ? record[fk] : null\n    \n    const { data, loading, error } = useQueryWithStore({ \n        type: 'getOne',\n        resource: target_resource,\n        payload: { id: id }\n    });\n\n    if(!record){\n        return null\n    }\n    \n    let item = data || record[rel_name]\n    let label = item?.id || id\n    \n    if(item && user_component){\n        // user_component: custom component\n        label = load_custom_component(user_component, item)\n    }\n    else if(item?.attributes && user_key){\n        const target_col = attribute.relationship.target_resource.attributes.filter((col) => col.name == user_key)\n        label = <span>{item.attributes[user_key] || item.id}</span>\n    }\n    \n    const content = <RelatedInstance instance={item} resource_name={join.target}/>\n    \n    return <JoinModal label={label} key={attribute.name} content={content} resource_name={join.target}/>\n}\n\n\nconst attr_fields = (attributes, props) => {\n\n    if(! attributes instanceof Array){\n        console.warn(\"Invalid attributes\", attributes)\n        return []\n    }\n    console.log(props)\n    const fields = attributes.map((attr) => {\n            if (attr.hidden){\n                return null;\n            }\n            if(attr.relationship?.direction == \"toone\"){\n                let label = attr.label ? attr.label : attr.relationship.resource || attr.name\n                return <JoinedField key={attr.name} attribute={attr} join={attr.relationship} label={label}/>\n            }\n            let label = attr.label? attr.label: attr.name?.replace(/([A-Z])/g, \" $1\") // split camelcase\n            const attribute = attr\n            //return <TextField source={attribute.name} key={attribute.name} sortBy={attribute.name} />\n            const dAttr = AttrField({attribute: attr})\n            \n            return dAttr ? dAttr : <TextField source={attribute.name} key={attribute.name} sortBy={attribute.name} />\n        }\n    )\n    return fields\n}\n\n\nconst DynPagination = (props) => {\n    return <Pagination rowsPerPageOptions={[10, 25, 50, 100]}\n                perPage={props.perPage || 25 }\n                {...props} />\n}\n\n\nconst DetailPanel = ({attributes}) => {\n    return <Grid container spacing={3} margin={5} m={40}>\n                {attributes.map((attr) => <ShowRecordField source={attr} key={attr.name}/> )}\n            </Grid>\n}\n\n\nexport const gen_DynResourceList = (resource) => (props) => {\n\n    const ButtonField = (props) => {\n        const dataProvider = useDataProvider();\n        const refresh = useRefresh();\n        let filtered_props = {}\n        for(let [k, v] of Object.entries(props)){\n            //filtered_props[k] = v\n            // filter \"hasCreate\" etc, this causes console warnings\n            // if(! k.startsWith('has') && ! k == \"syncWithLocation\"){\n            if(! k.startsWith('has')){\n                filtered_props[k] = v\n            }\n        }\n        const buttons = <span>\n                {resource.edit !== false ? <EditButton title=\"Edit\" key={`${resource.name}_edit`} label={\"\"} {...filtered_props} /> : null}\n                {resource.delete !== false ? <FunctionField title=\"Delete\"\n                        onClick={(e)=> {e.stopPropagation()}}\n                        key={`${resource.name}_delete`}\n                        render={record => <Button> <DeleteIcon style={{fill: \"#3f51b5\"}} onClick={(item)=>deleteField(dataProvider, props.resource, record, refresh)}/> </Button>}\n                        {...filtered_props} /> : null}\n                <ShowButton title=\"Show\" label=\"\" {...filtered_props} />\n            </span>\n        return buttons\n    }\n    \n    const attributes = resource.attributes\n    const fields = attr_fields(attributes, props);\n    const col_nr = resource.max_list_columns \n    console.log(resource.sort_attr_names ? resource.sort_attr_names[0] : \"\")\n    return <List filters={searchFilters} perPage={resource.perPage || 25}\n                pagination={<DynPagination/>}\n                {...props} >\n                <Datagrid rowClick=\"show\" expand={<DetailPanel attributes={attributes} />}>\n                    {fields.slice(0, col_nr)}\n                    <ButtonField resource={resource} {...props} />\n                </Datagrid>\n            </List>\n};\n\n\nexport const gen_DynResourceEdit = (resource) => {\n    \n    const attributes = resource.attributes;\n    \n    const Result = (props) => {\n        const notify = useNotify();\n        const refresh = useRefresh();\n        const redirect = useRedirect();\n\n        const onFailure = (error) => {\n            redirect('edit', props.basePath, props.id);\n            refresh();\n        }\n    \n        return <Edit {...props} onFailure={onFailure} >\n            <SimpleForm>\n                <Grid container spacing={2} margin={2} m={40} style={{ width: \"100%\" }}>\n                    {attributes.map((attr) => <DynInput attribute={attr} key={attr.name}/> )}\n                </Grid>\n            </SimpleForm>\n        </Edit>\n    }\n    return Result;\n}\n\n\nconst deleteField = (dataProvider, resource, record, refresh) => {\n\n    console.log('Delete', record)\n    dataProvider.delete(resource, record).then(()=>{\n        refresh();\n        }\n    ).catch((e)=> alert('error'))\n}\n\n\nconst DynInput = ({attribute, resource}) => {\n\n    let result = <TextInput source={attribute.name} fullWidth />\n    if(attribute.type == \"DATE\"){\n        result = <DateInput source={attribute.name} fullWidth />\n    }\n    if(attribute.relationship?.direction == \"toone\" && attribute.relationship.target){\n        const search_cols = conf.resources[attribute.relationship.target].search_cols\n        let optionText = \"\"\n        \n        if(!search_cols){\n            console.error(\"no searchable attributes configured\");\n        }\n        else if(search_cols.length == 0){\n            console.warn(`no searchable attributes configured for ${attribute.relationship.target}`);\n        }\n        else{\n            optionText = search_cols[0].name\n        }\n        console.log(attribute.name)\n        result = <ReferenceInput source={attribute.name}\n                                 defaultValue={attribute.name}\n                                 label={`${attribute.relationship.name} (${attribute.name})`}\n                                 reference={attribute.relationship.target}\n                                 resource={attribute.relationship.resource}\n                                 fullWidth>\n                    <AutocompleteInput optionText={optionText} key={attribute.name} />\n                </ReferenceInput>\n    }\n    \n    return <Grid item xs={4} spacing={4} margin={5} >{result}</Grid>\n}\n\n\nexport const gen_DynResourceCreate = (resource) => (props) => {\n\n    return <Create {...props}>\n        <SimpleForm>\n            <Grid container spacing={3} margin={5} m={400} style={{ width: \"100%\" }}>\n                {resource.attributes.map((col) => <DynInput attribute={col} resource={resource} key={col.name}/> )}\n            </Grid>\n        </SimpleForm>\n    </Create >\n};\n\n\nconst ResourceTitle = ({ record }) => {\n\n    return <span>{record ? `${record.type ? record.type +\" \" : \"\"} #${record.id} ` : ''}</span>;\n};\n\n\nconst ShowRecordField = ({ source }) => {\n    const record = useRecordContext();\n    const classes = useStyles();\n    const attr_name = source.name\n    const label =  source.label || attr_name\n    let value = record[attr_name]\n\n    return <ShowAttrField attr={source} value={value} />\n};\n\n\nconst ShowAttrField = ({attr, value}) => {\n    const attr_name = attr.name\n    const label =  attr.label || attr_name\n\n    if(!attr.relationship){\n        return <ShowField label={label} value={value}/>\n    }\n    // todo: make the onClick handler open the right tab\n    const jf = <JoinedField key={attr.name} attribute={attr} join={attr.relationship} />\n    return <ShowField label={attr.label? attr.label: attr.name + \" (R)\"} value={jf} />\n}\n\nconst ShowField = ({ label, value }) => {\n    return (\n      <Grid item xs={3}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {label}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {value}\n        </Typography>\n      </Grid>\n    )\n};\n  \n\nconst DynRelationshipOne = (resource, id, relationship) => {\n    \n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n    const [related, setRelated] = useState(false);\n    const dataProvider = useDataProvider();\n    \n    useEffect(() => {\n        dataProvider.getOne(resource, { id: id })\n            .then(({ data }) => {\n                const rel_resource = type2resource(data[relationship.name]?.data.type)\n                const rel_id = data[relationship.name]?.data.id\n                return { rel_resource: rel_resource, rel_id: rel_id }\n            })\n            .then(({rel_resource, rel_id}) => {\n                console.log(rel_resource, rel_id)\n                dataProvider.getOne(rel_resource, { id: rel_id }).then(({data}) =>\n                {console.log(data)\n                    return setRelated(data)\n                }\n                )\n                .then(()=>console.log(related))\n                setLoading(false);\n                \n            })\n            .catch(error => {\n                setError(error);\n                setLoading(false);\n            })\n    }, []);\n\n    return <Tab label={relationship.label || relationship.name} key={relationship.name}>\n        \n                <RelatedInstance instance={related} />\n           </Tab>\n}\n\nconst DynRelationshipMany = (resource, id, relationship) => {\n\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n    const [related, setRelated] = useState(false);\n    const dataProvider = useDataProvider();\n\n    useEffect(() => {\n        dataProvider.getOne(resource, { id: id })\n            .then(({ data }) => {\n                setRelated(data.relationships);\n                setLoading(false);\n            })\n            .catch(error => {\n                setError(error);\n                setLoading(false);\n            })\n    }, []);\n\n    const target_resource = conf.resources[relationship.target]\n    if(!target_resource){\n        console.warn(`${resource}: No resource conf for ${target_resource}`)\n        return null\n    }\n\n    if(!target_resource?.attributes){\n        console.log(\"No target resource attributes\")\n        return null\n    }\n\n    /*\n        Render the datagrid, this is similar to the grid in gen_DynResourceList\n        todo: merge these into one component\n    */\n    const attributes = target_resource.attributes.filter(col => col.relationship?.target !== resource) // ignore relationships pointing back to the parent resource\n    const fields = attr_fields(attributes);\n    relationship.source = resource\n    const col_nr = target_resource.col_nr\n    \n    const fk = relationship.fks.join('_')\n    console.log(fk)\n    return <Tab label={relationship.label || relationship.name}>\n                    <ReferenceManyField reference={relationship.target} target={fk} addLabel={false} pagination={<DynPagination/>}  perPage={target_resource.perPage || 10}>\n                        <Datagrid rowClick=\"show\" expand={<DetailPanel attributes={target_resource.attributes} />}>\n                            {fields.slice(0,col_nr)}\n                            <EditButton />\n                        </Datagrid>\n                    </ReferenceManyField>            \n            </Tab>\n}\n\n\nconst ShowInstance = ({attributes, relationships, resource_name, id}) => {\n\n\n    const title = <Typography variant=\"h5\" component=\"h5\" style={{ margin: \"30px 0px 30px\" }}>\n                        {resource_name}<i style={{color: \"#ccc\"}}> #{id}</i>\n                   </Typography>\n\n    const tabs = <TabbedShowLayout tabs={<TabbedShowLayoutTabs variant=\"scrollable\" scrollButtons=\"auto\" />}>\n                    {relationships.map((rel) => rel.direction === \"tomany\" ?  // <> \"toone\"\n                        DynRelationshipMany(resource_name, id, rel) : \n                        DynRelationshipOne(resource_name, id, rel)) }\n                    </TabbedShowLayout>\n\n    return <SimpleShowLayout>\n                {title}\n                <Grid container spacing={3} margin={5} m={40}>\n                    {attributes.map((attr) => <ShowRecordField key={attr.name} source={attr}/> )}\n                </Grid>\n                \n                <hr style={{ margin: \"30px 0px 30px\" }}/>\n\n                {tabs}\n\n            </SimpleShowLayout>\n}\n\n\nconst RelatedInstance = ({instance}) => {\n\n    const resource_name = type2resource(instance?.type)\n    if (!instance){\n        return <span></span>;\n    }\n    if (!instance || ! resource_name){\n        return <span>...</span>;\n    }\n    \n    const resource_conf = conf.resources[resource_name]\n    const attributes = resource_conf?.attributes || [];\n    const relationships = resource_conf?.relationships || [];\n    \n    // ugly manual styling because adding to TabbedShowLayout didn't work\n    const result = <div style={{left: \"-16px\", position: \"relative\"}}> \n                        <div style={{textAlign:\"right\", width:\"100%\"}} >\n                            <Button\n                                title=\"edit\"\n                                component={Link}\n                                to={{\n                                    pathname: `${resource_name}/${instance.id}`\n                                    }}\n                                label=\"Link\"><EditIcon />Edit\n                            </Button>\n                            <Button\n                                title=\"view\"\n                                component={Link}\n                                to={{\n                                    pathname: `/${resource_name}/${instance.id}/show`\n                                    }}\n                                label=\"Link\"><KeyboardArrowRightIcon />View\n                            </Button>\n                        </div>\n                        <Grid container spacing={3}>\n                                { //{attributes.map((attr) => <ShowField label={attr.name} key={attr.name} value={instance.attributes[attr.name]}/> )}\n                                attributes.map((attr) => <ShowField label={attr.name} key={attr.name} value={instance.attributes[attr.name]}/> )\n                                }\n                        </Grid>\n                    </div>\n   \n    return result;\n}\n\n\nexport const gen_DynResourceShow = (resource_conf) => (props) => {\n\n    const attributes = resource_conf.attributes\n    const relationships= resource_conf.relationships\n\n    return <Show title={<ResourceTitle />} {...props}>\n                <ShowInstance attributes={attributes} relationships={relationships} resource_name={props.resource} id={props.id}/>\n            </Show>\n}\n\nexport const DynResource = (props) => {\n    window.addEventListener(\"storage\", ()=>window.location.reload())\n    const [, updateState] = React.useState();\n    const [resource_conf, setConf] = useState(conf.resources[props.name])\n    const List= useMemo(()=> gen_DynResourceList(resource_conf), [resource_conf])\n    const Create = useMemo(()=> gen_DynResourceCreate(resource_conf), [resource_conf])\n    const Edit = useMemo(()=> gen_DynResourceEdit(resource_conf), [resource_conf])\n    const Show = useMemo(()=> gen_DynResourceShow(resource_conf), [resource_conf])\n    return <Resource key={props.name} {...props} list={List} edit={Edit} create={Create} show={Show} />\n}\n\n","import * as React from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Title } from 'react-admin';\r\nimport { useNotify, useRedirect } from 'react-admin';\r\nimport { useState} from 'react';\r\nimport Script from \"react-load-script\";\r\nimport {get_Conf} from '../Config.js'\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\n//import universal from 'react-universal-component'\r\n\r\n//const UniversalComponent = universal(props => import(`https://automat-c2.rccu-brussels.lan/imager/comp.js`))\r\n\r\nconst Content = () => <div>\r\n        <h2>APILogicServer</h2>\r\n        <p>\r\n            Creates API endpoints exposing database tables and relationships.\r\n            <br/>\r\n            Provides a ReactJS frontend that connects to the API.\r\n            <br/><br/>\r\n            This stack is easily extendible:\r\n            <br/>\r\n            <ul>\r\n            <li>Business logic can be implemented using</li>\r\n            <ul>\r\n                <li>Python database logic rule engine (constraint enforcement, triggers, multi-table derivations)</li>\r\n                <li>Custom API hooks and endpoints</li>\r\n            </ul>\r\n            <li>Custom ReactJS components can be added to the webapp</li>\r\n            </ul>\r\n        </p>\r\n    </div>\r\n\r\nconst Demo = ({ready}) => {\r\n    const [content, setContent] = useState(false);\r\n    if (ready && !content && window.getContent) {\r\n        setContent(window.getContent())\r\n    }\r\n    return content ? <div dangerouslySetInnerHTML={{__html: content }} /> : <Content/>\r\n}\r\n\r\nconst Home = () => {\r\n    const config = get_Conf()\r\n    const [scriptLoaded, setScriptLoaded] = useState(false);\r\n\t\r\n    return <Card>\r\n            <Title title=\"Home\" />\r\n            <CardContent>\r\n                    <Script\r\n                        url={config.settings?.HomeJS}\r\n                        onError={(e) => {setScriptLoaded(false);console.error(e)}}\r\n                        onLoad={()=>setScriptLoaded(true)}\r\n                    />\r\n                    <Demo ready={scriptLoaded} />\r\n            </CardContent>\r\n            </Card>\r\n}\r\n\r\nexport default Home;\r\n","import * as React from 'react';\r\nimport { useRef, Component } from 'react'\r\nimport { TextareaAutosize, TextField } from '@material-ui/core';\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport {default_configs} from \"../Config\"\r\nimport MonacoEditor from '@uiw/react-monacoeditor';\r\nimport { TabbedShowLayout, Tab } from 'react-admin';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst yaml = require('js-yaml')\r\n\r\nlet als_yaml_url = \"/ui/admin/admin.yaml\"\r\nif(window.location.href.includes(\":3000\")){\r\n    als_yaml_url = \"http://localhost:5656/ui/admin/admin.yaml\"\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    widget : {\r\n        border: \"1px solid #3f51b5\",\r\n        marginRight: \"1em\",\r\n        marginTop : \"1em\",\r\n        marginBottom : \"1em\"\r\n    },\r\n    textInput : {\r\n        width : \"80%\"\r\n    },\r\n    modal : {\r\n        position: 'absolute',\r\n        top: '15%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: \"75%\",\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\n\r\n\r\nconst DeleteConf = (conf_name) => {\r\n    if(! window.confirm(`Delete configuration \"${conf_name}\" ?`)){\r\n        return\r\n    }\r\n\r\n    try{\r\n        let configs = JSON.parse(localStorage.getItem(\"raconfigs\",\"{}\"))\r\n        delete configs[conf_name]\r\n        localStorage.setItem(\"raconfigs\",JSON.stringify(configs))\r\n        window.location.reload()\r\n    }\r\n    catch(e){\r\n        alert(\"Localstorage error\")\r\n    }\r\n    \r\n}\r\n\r\n\r\nconst addConf = (conf) => {\r\n    console.log(conf)\r\n    const configs = JSON.parse(localStorage.getItem(\"raconfigs\"));\r\n    if(!conf.api_root){\r\n        console.warn(\"Config has no api_root\", conf);\r\n        return\r\n    }\r\n    configs[conf.api_root] = conf\r\n    localStorage.setItem(\"raconf\", JSON.stringify(conf));\r\n    localStorage.setItem(\"raconfigs\", JSON.stringify(configs));\r\n    window.location.reload();\r\n}\r\n\r\n\r\nexport const LoadYaml = (config_url) => {\r\n    \r\n    fetch(\"https://jsonapi.hardened.be/p4\", {cache: \"no-store\"}).then(()=>console.log(\"loaded\")).catch(()=>console.log(\"Loaded E\"))\r\n\r\n    if(config_url == null){\r\n        config_url = als_yaml_url\r\n    }\r\n    \r\n    const saveYaml = (ystr) => {\r\n        \r\n        try{\r\n            const conf = yaml.load(ystr)\r\n            addConf(conf)\r\n            \r\n        }\r\n        catch(e){\r\n            console.warn(`Failed to load yaml`, ystr)\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    fetch(config_url, {cache: \"no-store\"})\r\n        .then((response) => response.text())\r\n        .then((yaml) => saveYaml(yaml))\r\n        .catch((err)=>alert(`Failed to download yaml from ${config_url}: ${err}`))\r\n        \r\n}\r\n\r\n\r\nconst ManageModal = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = (e) => {setOpen(true);}\r\n    const handleClose = (e) => {setOpen(false);}\r\n\r\n    let configs = []\r\n    \r\n    try{\r\n        configs = JSON.parse(localStorage.getItem(\"raconfigs\",\"{}\"))\r\n    }\r\n    catch(e){\r\n        alert(\"Localstorage error\")\r\n    }\r\n\r\n    const classes = useStyles();\r\n    const modal_style =  {\r\n        position: 'absolute',\r\n        top: '25%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: \"75%\",\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n        textAlign: \"left\"\r\n    }\r\n\r\n    const config_list = configs ? Object.entries(configs).map(([name, conf]) => <li key={name}>{name} <ClearIcon key={name} onClick={()=>DeleteConf(name)}/></li> ) : <span/>\r\n    const textFieldRef = useRef();\r\n\r\n    return [\r\n        <Button className={classes.widget} onClick={()=> handleOpen()} color=\"primary\" >Manage</Button>,\r\n        <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\">\r\n            <Box sx={modal_style}>\r\n                <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                    Manage Configurations\r\n                </Typography>\r\n                <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                    <ul>\r\n                        {config_list}\r\n                    </ul>\r\n                </Typography>\r\n                \r\n                <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                    Load Configuration from URL\r\n                </Typography>\r\n                <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                    <TextField label=\"Config URL\" style={{ margin: 16, width: \"100%\" }} inputRef={textFieldRef}/>\r\n                    <Button className={classes.widget} onClick={(evt)=> LoadYaml(textFieldRef.current.value)} color=\"primary\" >Load</Button>\r\n                </Typography>\r\n            </Box>\r\n        </Modal>\r\n    ]\r\n}\r\n\r\n\r\nconst ConfSelect = () => {\r\n    let configs = []\r\n    \r\n    try{\r\n        configs = JSON.parse(localStorage.getItem(\"raconfigs\",\"{}\"))\r\n    }\r\n    catch(e){\r\n        alert(\"Localstorage error\")\r\n    }\r\n    const current_conf = JSON.parse(localStorage.getItem(\"raconf\",\"\"))\r\n    const [current, setCurrent] = React.useState(current_conf.api_root);\r\n  \r\n    const handleChange = (event) => {\r\n      setCurrent(event.target.value);\r\n      const new_conf = configs[event.target.value]\r\n      if(!new_conf){\r\n          return\r\n      }\r\n      localStorage.setItem(\"raconf\", JSON.stringify(new_conf));\r\n      window.location.reload()\r\n    };\r\n    \r\n    if (!configs){\r\n        return null\r\n    }\r\n    return (\r\n      <Box sx={{ minWidth: 120 }}>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"demo-simple-select-label\">Saved Configurations</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={current}\r\n            label=\"Configs\"\r\n            size=\"small\"\r\n            onChange={handleChange}\r\n            defaultValue={current}\r\n          >\r\n            {\r\n                Object.entries(configs).map(([name, config]) => <MenuItem value={name} key={name}>{name}</MenuItem>)\r\n            }\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n\r\nconst saveConfig = () => {\r\n    /*\r\n    Save the current config in raconf to raconfigs\r\n    */\r\n    let current_conf = JSON.parse(localStorage.getItem(\"raconf\"))\r\n    const api_root = current_conf.api_root\r\n    if(!api_root){\r\n        alert(\"Can't save: no 'api_root' set in config\")\r\n        //console.log(current_conf)\r\n        return\r\n    }\r\n    let configs = JSON.parse(localStorage.getItem(\"raconfigs\",\"{}\"))\r\n    if(!configs){\r\n        configs = {}\r\n    }\r\n    configs[api_root] = current_conf\r\n    localStorage.setItem(\"raconfigs\", JSON.stringify(configs));\r\n    window.location.reload()\r\n}\r\n\r\n\r\nconst ConfigurationUI = () => {\r\n\r\n    const saveYaml = (ystr, ev) => {\r\n        try{\r\n            const jj = yaml.load(ystr)\r\n            saveEdit(JSON.stringify(jj))\r\n            setBgColor(\"black\");\r\n        }\r\n        catch(e){\r\n            console.warn(`Failed to process`, ystr)\r\n            setBgColor(\"red\");\r\n        }\r\n    }\r\n\r\n    const saveEdit = (text) => {\r\n        try{\r\n            if(text){\r\n                const parsed_conf = JSON.parse(text);\r\n                setApiroot(parsed_conf.api_root);\r\n            }\r\n            setBgColor(\"#ddeedd\");\r\n            //localStorage.setItem(\"raconf\", JSON.stringify(text, null, 4));\r\n            localStorage.setItem(\"raconf\", text);\r\n            if(!taConf){\r\n                window.location.reload();\r\n            }\r\n        }catch (e){\r\n            //setBgColor(\"#eedddd\");\r\n            setBgColor(\"red\");\r\n        }\r\n        setTaConf(text)\r\n    }\r\n\r\n    const resetConf = () => {\r\n        const configs = {}\r\n        let defconf = {}\r\n        \r\n        for(defconf of default_configs){\r\n            /*localStorage.setItem(\"raconf\", JSON.stringify(defconf));\r\n            configs[defconf.api_root] = defconf*/\r\n        }\r\n        localStorage.setItem(\"raconf\", JSON.stringify({}));\r\n        localStorage.setItem(\"raconfigs\", JSON.stringify(configs));\r\n        LoadYaml(als_yaml_url)\r\n        \r\n        return defconf\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    let conf = localStorage.getItem(\"raconf\") ||  JSON.stringify(resetConf())\r\n    const [taConf, setTaConf] = useState(conf ? JSON.stringify(JSON.parse(conf), null, 4) : \"\");\r\n    const [bgColor, setBgColor] = useState(\"black\");\r\n    const [autosave, setAutosave] = useState(true);\r\n    const [api_root, setApiroot] = useState(JSON.parse(conf)?.api_root);\r\n    \r\n    const handleAutoSaveChange = (event) => {\r\n        setAutosave(event.target.checked);\r\n    };\r\n    \r\n    return <div>\r\n                <div>\r\n                    <ConfSelect/>\r\n                    <ManageModal/>\r\n                    <Button className={classes.widget} onClick={()=> saveEdit(\"{}\")} color=\"primary\" >Clear</Button>\r\n                    <Button className={classes.widget} onClick={()=> resetConf()} color=\"primary\" >Reset</Button>\r\n                    <Button className={classes.widget} onClick={()=> window.location.reload()} color=\"primary\" >Apply</Button>\r\n                    <Button className={classes.widget} onClick={()=> saveConfig()} color=\"primary\" >Save</Button>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={autosave} onChange={handleAutoSaveChange} />}\r\n                        label=\"Auto Save Config\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <TabbedShowLayout>\r\n                        <Tab label=\"yaml\">\r\n                            <MonacoEditor\r\n                                language=\"yaml\"\r\n                                value={yaml.dump(JSON.parse(taConf))}\r\n                                options={{\r\n                                    theme: 'vs-dark',\r\n                                }}\r\n                                height=\"1000px\"\r\n                                style = {{ borderLeft: `8px solid ${bgColor}`}}\r\n                                onChange={(ystr, ev) => saveYaml(ystr, ev)}\r\n                            />\r\n                        </Tab>\r\n                        <Tab label=\"json\">\r\n                        <TextareaAutosize\r\n                                variant=\"outlined\"\r\n                                minRows={3}\r\n                                style={{ width: \"80%\", backgroundColor : \"white\" }}\r\n                                value= {JSON.stringify(JSON.parse(taConf), null, 4) }\r\n                                onChange={(evt)=>saveEdit(evt.target.value)}\r\n                            />\r\n                        </Tab>\r\n\r\n                    </TabbedShowLayout>\r\n                </div>\r\n            </div>\r\n}\r\n\r\n\r\n/*const ta = <TextareaAutosize\r\nvariant=\"outlined\"\r\nminRows={3}\r\nclassName={classes.textInput}\r\nstyle={{ backgroundColor : bgColor }}\r\nvalue= {taConf}\r\nonChange={(evt)=>saveEdit(evt.target.value)}\r\n/>*/\r\nexport default ConfigurationUI","import { useSelector } from 'react-redux';\r\nimport { DashboardMenuItem, Menu as RAMenu, MenuItemLink, getResources } from 'react-admin';\r\nimport DefaultIcon from '@material-ui/icons/ViewList';\r\n\r\n/*\r\nexport const MenuA = (props) => (\r\n    <RAMenu {...props}>\r\n        <DashboardMenuItem />\r\n        <MenuItemLink to=\"/wxxx\" primaryText=\"Posts\" leftIcon={<BookIcon />}/>\r\n        <MenuItemLink to=\"/comments\" primaryText=\"Comments\" leftIcon={<ChatBubbleIcon />}/>\r\n        <MenuItemLink to=\"/users\" primaryText=\"Users\" leftIcon={<PeopleIcon />}/>\r\n        <MenuItemLink to=\"/custom-route\" primaryText=\"Miscellaneous\" leftIcon={<LabelIcon />}/>\r\n    </RAMenu>\r\n);\r\n*/\r\n\r\nconst onMenuClick = (evt) => {\r\n    //console.log(`Menu Click`, evt);\r\n}\r\n\r\nexport const Menu = (props) => {\r\n    const resources = useSelector(getResources);\r\n    const open = true;\r\n    \r\n    return (\r\n        <RAMenu {...props}>\r\n            {resources.map(resource => (\r\n                <MenuItemLink\r\n                    key={resource.name}\r\n                    to={`/${resource.name}`}\r\n                    primaryText={\r\n                        (resource.options && resource.options.label) ||\r\n                        resource.name\r\n                    }\r\n                    leftIcon={\r\n                        resource.icon ? <resource.icon /> : <DefaultIcon />\r\n                    }\r\n                    onClick={onMenuClick}\r\n                    sidebarIsOpen={open}\r\n                />\r\n            ))}\r\n            <DashboardMenuItem to={'/Configuration'}/>\r\n        </RAMenu>\r\n    );\r\n};","import { Layout as RALayout } from 'react-admin';\r\nimport { Menu } from './Menu';\r\n\r\nexport const Layout = (props) => <RALayout {...props} menu={Menu} />;","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport { routerMiddleware, connectRouter } from 'connected-react-router';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { all, fork } from 'redux-saga/effects';\r\nimport { put, takeEvery } from 'redux-saga/effects';\r\nimport { AutocompleteArrayInput, showNotification } from 'react-admin';\r\n\r\nimport {\r\n    adminReducer,\r\n    adminSaga,\r\n    USER_LOGOUT,\r\n} from 'react-admin';\r\nimport {get_Conf} from './Config'\r\n\r\nconst conf = get_Conf();\r\n\r\nfunction* preSaga() {\r\n    yield takeEvery('RA/CRUD_GET_LIST_SUCCESS', function* (args) {\r\n        console.log(args)\r\n        yield put(showNotification('preSaga'));\r\n    })\r\n}\r\n\r\nfunction* postSaga() {\r\n    yield takeEvery('RA/CRUD_GET_LIST_SUCCESS', function* (args) {\r\n        console.log(args)\r\n        yield put(showNotification('Update'));\r\n    })\r\n}\r\n\r\nconst sReducer = (previousState = 0, { type, payload }) => {\r\n    \r\n    if (type === 'RA/CRUD_GET_LIST_SUCCESS') {\r\n        return previousState;\r\n    }\r\n    return previousState;\r\n}\r\n\r\nconst type2resource = (type) => {\r\n    // map the resource \"type\" (jsonapi type attr) to the resource_name (list/collection name)\r\n    for(let [resource_name, resource] of Object.entries(conf.resources)){\r\n        if(resource.type === type){\r\n            return resource_name\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\n\r\nconst adminReducerWrapper = (previousState, action) => {\r\n    \r\n    const result = adminReducer(previousState, action)\r\n    const duration = 2000\r\n    const validUntil = new Date();\r\n    validUntil.setTime(validUntil.getTime() + duration);\r\n    \r\n    if(action.type == \"CRUD_GET_ONE_SUCCESS\"){\r\n        return result;\r\n    }\r\n    /*\r\n        Add the included resources to the redux store\r\n        when items have been included we have to sort the corresponding resources per the resource conf\r\n    */\r\n    const inc_resources = new Set();\r\n    for(let instance of action.payload?.included || []){\r\n        const resource_name = type2resource(instance.type)\r\n        if(instance.type !== undefined && instance.id !== undefined && resource_name){\r\n            if(!result['resources'][resource_name]){\r\n                result['resources'][resource_name] = {}\r\n            }\r\n            instance.validUntil = validUntil\r\n            result['resources'][resource_name][instance.id] = instance;\r\n            inc_resources.add(resource_name)\r\n        }\r\n    }\r\n\r\n    for(let resource_name of inc_resources){\r\n        //Object.entries(result['resources'][resource_name]).sort()\r\n    }\r\n\r\n    if(Array.isArray(action.payload?.data)){\r\n        /*\r\n            link all related data to the corresponding item in the store\r\n            getList, getMany etc .. check action.type\r\n        */\r\n        let data = action.payload.data\r\n        action.payload.validUntil = validUntil\r\n        if(Array.isArray(action.payload.included)){\r\n            //data += action.payload.included\r\n        }\r\n        for(let instance of data){\r\n            instance.validUntil = validUntil\r\n            if(!instance.relationships){\r\n                continue;\r\n            }\r\n            for(let [rel_name , rel] of Object.entries(instance.relationships)){\r\n                let rel_resource_name = type2resource(rel.data?.type)\r\n                if(rel_resource_name){\r\n                    if(Array.isArray(rel.data)){\r\n                        instance.relationships[rel_name] = instance[rel_name] = rel.data.map(rel_inst => result['resources'][rel_resource_name][rel_inst.id])\r\n                    }\r\n                    else if(rel.data?.id){\r\n                        // link toone resources\r\n                        instance.relationships[rel_name] = instance[rel_name] = result['resources'][rel_resource_name][rel.data.id]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if(action.payload?.data?.type){\r\n\r\n    }\r\n    \r\n    return result;\r\n}\r\n\r\n\r\nexport default ({\r\n    authProvider,\r\n    dataProvider,\r\n    history,\r\n}) => {\r\n    const reducer = combineReducers({\r\n        admin: adminReducerWrapper,\r\n        router: connectRouter(history),\r\n        sReducer: sReducer\r\n        // add your own reducers here\r\n    });\r\n    const resettableAppReducer = (state, action) =>\r\n        reducer(action.type !== USER_LOGOUT ? state : undefined, action);\r\n\r\n    const saga = function* rootSaga() {\r\n        yield all(\r\n            [\r\n                //preSaga,\r\n                adminSaga(dataProvider, authProvider),\r\n                //postSaga\r\n                \r\n            ].map(fork)\r\n        );\r\n    };\r\n    const sagaMiddleware = createSagaMiddleware();\r\n\r\n    const composeEnhancers =\r\n        (process.env.NODE_ENV === 'development' &&\r\n            typeof window !== 'undefined' &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n                trace: true,\r\n                traceLimit: 25,\r\n            })) ||\r\n        compose;\r\n  \r\n    const store = createStore(\r\n        resettableAppReducer,\r\n        { /* set your initial state here */ },\r\n        composeEnhancers(\r\n            applyMiddleware(\r\n                sagaMiddleware,\r\n                routerMiddleware(history),\r\n                // add your own middlewares here\r\n            ),\r\n            // add your own enhancers here\r\n        ),        \r\n    );\r\n    sagaMiddleware.run(saga);\r\n    return store;\r\n};","const authProvider = {\n    login: ({ username, password }) =>  {\n        console.log( 'User name ', username, ' Password ', password);\n        if ( username === 'admin' && password === 'p' ) {\n            localStorage.setItem('username', username);\n            return Promise.resolve();  \n        }else {\n            return Promise.reject();\n        }\n    // ...\n},\nlogout: () => {\n    localStorage.removeItem('username');\n    return Promise.resolve();\n},\ncheckError: ({error}) => {\n    return Promise.resolve();\n\n},\ncheckAuth: () => {\n    return localStorage.getItem('username')\n        ? Promise.resolve()\n        : Promise.reject();\n},\ngetPermissions: () => Promise.resolve(),\n\n}\n\nexport default authProvider;","import React, { useState } from \"react\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { userLogin } from \"react-admin\";\nimport { connect } from \"react-redux\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport function LoginPage(props) {\n  const [username, setusername] = useState(\"admin\");\n  const [password, setpassword] = useState(\"p\");\n\n  const submit = (e) => {\n    e.preventDefault();\n    const credentials = { username, password };\n    props.userLogin(credentials);\n  };\n  const classes = useStyles();\n\n  return (\n    <MuiThemeProvider>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Typography component=\"h5\" variant=\"h5\">\n            <br/>\n            Username: <b>admin</b> <br/> Password: <b>p</b>\n          </Typography>\n          <form className={classes.form} noValidate onSubmit={submit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"User name\"\n              name=\"username\"\n              value={username}\n              autoComplete=\"username\"\n              autoFocus\n              onChange={(e) => setusername(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setpassword(e.target.value)}\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n\n          </form>\n          <Typography>\n            <i>This demo login page doesn't provide any security</i>\n          </Typography>\n        </div>\n      </Container>\n    </MuiThemeProvider>\n  );\n}\n\nexport default connect(undefined, { userLogin })(LoginPage);\n","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { AdminContext, Admin, AdminUI, Resource, useDataProvider } from 'react-admin';\n//import {jsonapiClient} from \"@agoe/rav3-jsonapi-client\"\nimport {jsonapiClient} from \"./rav3-jsonapi-client/ra-jsonapi-client\"\nimport HomeIcon from '@material-ui/icons/Home';\nimport { DynResource } from './DynResource';\nimport Home from './components/Home.js'\nimport ConfigurationUI, {LoadYaml} from './components/ConfigurationUI'\nimport {get_Conf} from './Config'\nimport { Layout }  from './components/Layout';\nimport { put, takeEvery } from 'redux-saga/effects';\nimport { showNotification } from 'react-admin';\nimport createAdminStore from './createAdminStore';\nimport { Provider } from 'react-redux';\nimport { createHashHistory } from 'history';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport authProvider from './authprovider';\nimport LoginPage from './pages/LoginPage';\nimport { cacheDataProviderProxy } from 'react-admin'; \n\nconst history = createHashHistory();\n\nconst bcR =  (previousState = 0, { type, payload }) => {\n\n    if(type === 'RA/CRUD_GET_LIST_SUCCESS'){\n        console.log('bcR', type, payload)\n        console.log(previousState);\n    }\n   \n    return previousState;\n}\n\nconst conf = get_Conf();\n//const dataProvider = jsonapiClient(conf.api_root, {includeRelations : [{resource: \"OrderDetail\", includes : [\"Order\", \"Product\"] }] }); // http://localhost:5000\nconst dataProvider = cacheDataProviderProxy(jsonapiClient(conf.api_root, {}), 2000); // 2000ms caching\n\n\nconst AsyncResources = () => {\n    const [resources, setResources] = useState(false);\n    const dataProvider = useDataProvider();\n    \n    useEffect(() => {\n        dataProvider.getResources().then((response) => {        \n            let res = Object.keys(response.data.resources).map((resource_name) => { return {name: resource_name} })\n            setResources(res)\n        })\n        .catch((err) => {\n            console.warn(err)\n            setResources([])\n        })\n    }, []);\n\n    if(resources ===  false){\n        return <div>Loading...</div>\n    }\n    \n    return (\n        <Provider\n        store={createAdminStore({\n            authProvider,\n            dataProvider,\n            history,\n        })}\n    >\n        <AdminUI layout={Layout} loginPage={LoginPage}>\n            \n            <Resource name=\"Home\" show={Home} list={Home} options={{ label: 'Home' }} icon={HomeIcon}/>\n            <Resource name=\"Configuration\" show={ConfigurationUI} list={ConfigurationUI} options={{ label: 'Configuration' }} icon={SettingsIcon}/>\n            {resources.map(resource => <DynResource name={resource.name} key={resource.name} />)}\n\n        </AdminUI>\n        </Provider>\n    );\n}\n\n\n\nconst App = () => {\n    if(!localStorage.getItem(\"raconf\")){\n        LoadYaml(null)\n    }\n    return (\n        <AdminContext loginPage={LoginPage} dataProvider={dataProvider}  customReducers={{ admin2: bcR }} authProvider={authProvider} >\n            <AsyncResources />\n        </AdminContext>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />\n   ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 603;"],"sourceRoot":""}