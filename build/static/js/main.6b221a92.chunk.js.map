{"version":3,"sources":["rav3-jsonapi-client/errors.ts","rav3-jsonapi-client/default-settings.ts","rav3-jsonapi-client/resourceLookup.ts","Config.js","rav3-jsonapi-client/ra-jsonapi-client.ts","components/JoinModal.js","DynResource.js","components/Home.js","components/ConfigurationUI.js","components/Menu.js","components/Layout.js","createAdminStore.js","App.js","reportWebVitals.js","index.js"],"names":["SafrsHttpError","Error","message","status","body","name","HttpError","defaultSettings","total","headers","Accept","updateMethod","arrayFormat","includeRelations","errorHandler","httpError","errors","length","alert","title","code","console","log","endpointToTypeStripLastLetters","ResourceLookup","response","lookup","includes","this","Map","resources","Object","prototype","hasOwnProperty","call","data","included","entry","key","getKey","set","resource","type","id","has","get","ret","assign","ja_type","attributes","relationships","get_Conf","localStorage","setItem","JSON","stringify","config","window","location","reload","result","lsc_str","getItem","parse","entries","e","warn","resource_name","columns","Array","search_cols","col","rel","fks","fk","relationship","target_resource","target","search","push","reset_Conf","conf","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","textAlign","JoinModal","label","content","React","open","setOpen","onClick","stopPropagation","className","Modal","onClose","Box","sx","Typography","variant","component","mt","searchFilters","TextInput","source","alwaysOn","ColumnField","column","default_comp","TextField","Component","loadable","resolveComponent","components","error","JoinedField","join","record","useRecordContext","rel_name","useDataProvider","user_key","useQueryWithStore","payload","item","loading","user_component","component_name","LabelComponent","instance","load_custom_component","filter","column_fields","joins","direction","map","hidden","header_style","DynPagination","props","Pagination","rowsPerPageOptions","perPage","deleteField","dataProvider","refresh","delete","then","catch","DynInput","input","AutocompleteInput","optionText","ReferenceInput","reference","ResourceTitle","ShowRecordField","value","ShowField","Grid","xs","color","ShowInstance","margin","SimpleShowLayout","container","spacing","m","TabbedShowLayout","tabs","TabbedShowLayoutTabs","scrollButtons","useState","setLoading","setError","setRelated","useEffect","getOne","fields","Tab","pagination","ReferenceManyField","addLabel","Datagrid","rowClick","sort","EditButton","DynRelationshipMany","related","rel_resource","rel_id","DynRelationshipOne","RelatedInstance","type2resource","resource_conf","Button","Link","to","pathname","DynResource","addEventListener","List","useMemo","useRefresh","buttons","edit","FunctionField","render","fill","filters","Create","SimpleForm","Edit","useNotify","redirect","useRedirect","onFailure","basePath","gen_DynResourceEdit","Show","gen_DynResourceShow","Resource","list","create","show","Home","Card","Title","CardContent","yaml","require","useStyles","makeStyles","theme","widget","marginRight","marginTop","marginBottom","textInput","ConfSelect","configs","current","setCurrent","minWidth","FormControl","fullWidth","InputLabel","Select","labelId","size","onChange","event","defaultValue","MenuItem","ConfigurationUI","classes","saveEdit","text","parsed_conf","setApiroot","api_root","setBgColor","taConf","setTaConf","bgColor","autosave","setAutosave","FormControlLabel","control","Checkbox","checked","language","dump","options","height","borderLeft","ystr","ev","jj","load","save_yaml","TextareaAutosize","minRows","backgroundColor","evt","onMenuClick","Menu","useSelector","getResources","MenuItemLink","primaryText","leftIcon","icon","sidebarIsOpen","DashboardMenuItem","Layout","menu","sReducer","previousState","adminReducerWrapper","action","adminReducer","inc_resources","Set","undefined","add","isArray","rel_resource_name","rel_inst","authProvider","history","reducer","combineReducers","admin","router","connectRouter","saga","rootSaga","all","adminSaga","fork","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","store","createStore","state","USER_LOGOUT","applyMiddleware","routerMiddleware","run","createHashHistory","bcR","apiUrl","userSettings","httpClient","fetchUtils","fetchJson","countHeader","settings","merge","getList","params","page","query","q","col_name","keys","forEach","field","prefix","order","url","json","meta","unwrapData","err","Promise","reject","getMany","ids","getManyReference","range","filter_","relationship_name","debug","update","arr","i","endsWith","slice","method","updateMany","responses","Headers","deleteMany","resolve","jsonapiClient","AsyncResources","setResources","res","createAdminStore","AdminUI","layout","HomeIcon","SettingsIcon","App","AdminContext","customReducers","admin2","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6b221a92.chunk.js","sourcesContent":["import { HttpError } from 'react-admin';\n\nexport class NotImplementedError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.message = message;\n    this.name = 'NotImplementedError';\n  }\n}\n\nexport class SafrsHttpError extends HttpError {\n  constructor(message: string, status: number, body: any) {\n    super(message, status, body);\n    this.name = 'SafrsHttpError';\n  }\n}\n\nexport const safrsErrorHandler: HttpErrorHandler = (\n  httpError: HttpError\n): HttpError => {\n  /* Example Safrs Error message\n  {\n    \"errors\": [\n      {\n        \"title\": \"Request forbidden -- authorization will not help\",\n        \"detail\": \"\",\n        \"code\": \"403\"\n      }\n    ]\n  } */\n  interface err {\n    title: string;\n    detail: string;\n    code: string;\n  }\n  const errors: { errors: err[] } = httpError.body; // JSON.parse(httpError.body.stringify);\n  if (errors?.errors.length > 0) {\n    alert(\"Error \"+ errors.errors[0].title)\n    return new SafrsHttpError(\n      errors.errors[0].title,\n      httpError.status,\n      errors.errors[0].code\n    );\n  } else {\n    console.log('Unsopported Http Error Body', httpError.body);\n    return httpError;\n  }\n};\n\nexport interface HttpErrorHandler {\n  (httpError: HttpError): HttpError;\n}\n","import { safrsErrorHandler, HttpErrorHandler } from './errors';\nimport { includeRelations } from './ra-jsonapi-client';\n\nexport const defaultSettings: settings = {\n  total: 'total',\n  headers: {\n    Accept: 'application/vnd.api+json; charset=utf-8',\n    'Content-Type': 'application/vnd.api+json; charset=utf-8'\n  },\n  updateMethod: 'PATCH',\n  arrayFormat: 'brackets',\n  includeRelations: [],\n  errorHandler: safrsErrorHandler,\n  endpointToTypeStripLastLetters: ['Model', 's'] // update/create type: UserModel -> User, Users -> User\n};\n\ninterface settings {\n  total: string;\n  headers: {};\n  updateMethod: string;\n  arrayFormat: string;\n  includeRelations: includeRelations[];\n  errorHandler: HttpErrorHandler;\n  endpointToTypeStripLastLetters?: string[];\n}\n","/**\n * A map-like class that maps resource linkage objects {id: 1, type: \"user\"} to concrete resources with attributes and\n * relationships\n */\nexport default class ResourceLookup {\n  lookup: Map<any, any>;\n  includes: string[];\n  /**\n   * Constructs a new lookup map\n   * @param {Object} response A JSON API response, in JSON format\n   */\n  constructor(response: any) {\n    this.lookup = new Map();\n    this.includes = [];\n\n    // If the response wasn't a JSON dictionary, we can't and don't need to build a lookup\n    if (typeof response !== 'object') return;\n\n    let resources;\n    // if (response.hasOwnProperty('included')) {\n    if (Object.prototype.hasOwnProperty.call(response, 'included')) {\n      resources = [...response.data, ...response.included];\n    } else {\n      resources = response.data;\n    }\n\n    // Iterate over each resource returned and put each in the lookup\n    for (const entry of resources) {\n      const key = this.getKey(entry);\n      this.lookup.set(key, entry);\n    }\n  }\n\n  /**\n   * Calculates a hashable key for JSON API resources\n   * @param resource A resource linkage object\n   * @returns {string}\n   */\n  getKey(resource: any) {\n    return `${resource.type}:${resource.id}`;\n  }\n\n  /**\n   * Looks up a resource\n   * @param resource A resource linkage object\n   * @returns {Object}\n   */\n  get(resource: any) {\n    // If we don't have included data for this resource, just return the Resource Linkage object, since that's still\n    // useful\n    if (this.has(resource)) {\n      return this.lookup.get(this.getKey(resource));\n    } else {\n      return resource;\n    }\n  }\n\n  /**\n   * Returns true if the resource is in the lookup\n   * @param resource\n   * @returns {boolean}\n   */\n  has(resource: any) {\n    return this.lookup.has(this.getKey(resource));\n  }\n\n  /**\n   * Converts a JSON API data object (with id, type, and attributes fields) into a flattened object\n   * @param {Object} response A JSON API data object\n   */\n  unwrapData(response: any, includes: string[]) {\n    // The base resource object\n    const ret = Object.assign(\n      {\n        id: response.id,\n        ja_type: response.type\n      },\n      response.attributes\n    );\n    if (includes.length === 0) {\n      // shortcut, no includes: scip relationships\n      return ret;\n    }\n    // Deal with relationships\n\n    if (Object.prototype.hasOwnProperty.call(response, 'relationships')) {\n      ret.relationships = response.relationships;\n      \n    }\n\n    return ret;\n  }\n}\n\nfunction lowerFirstLetter(s: string): string {\n  return s;\n  return s[0].toLowerCase() + s.slice(1);\n}\n","import config from './Config.json'\r\n\r\nconst init_Conf = () => {\r\n    if(! \"raconf\" in localStorage){\r\n        console.log(\"Init Configuration\")\r\n        localStorage.setItem(\"raconf\",JSON.stringify(config))\r\n        window.location.reload()\r\n    }\r\n}\r\n\r\nexport const get_Conf = () => {\r\n\r\n    init_Conf();\r\n\r\n    let ls_conf = null\r\n    let result = {}\r\n    const lsc_str = localStorage.getItem(\"raconf\")\r\n    try{\r\n        ls_conf = JSON.parse(lsc_str)\r\n        result = ls_conf ? ls_conf : JSON.parse(JSON.stringify(config)) || {};\r\n        Object.entries(result.resources)\r\n    }\r\n    catch(e){\r\n        console.warn(`Failed to parse config ${lsc_str}`)\r\n        localStorage.setItem(\"raconf\", JSON.stringify(config))\r\n    }\r\n\r\n    if(!result.resources){\r\n        result.resources = {}\r\n    }\r\n    const resources = result.resources\r\n\r\n    for(let [resource_name, resource] of Object.entries(resources||{})){\r\n        \r\n        // link relationship to FK column\r\n        if(!(resource.columns instanceof Array || resource.relationships instanceof Array)){\r\n            continue\r\n        }\r\n\r\n        if(!resource.type){\r\n            resource.type = resource_name\r\n        }\r\n\r\n        resource.search_cols = []\r\n        result.resources[resource_name].name = resource_name\r\n\r\n        for(let col of resource.columns){\r\n            for(let rel of resource.relationships || []){\r\n                for(let fk of rel.fks || []){\r\n                    if(col.name == fk){\r\n                        col.relationship = rel;\r\n                        col.relationship.target_resource = result.resources[col.relationship.target]\r\n                    }\r\n                }\r\n            }\r\n            if(col.search){\r\n                resource.search_cols.push(col);\r\n            }\r\n        }\r\n    }\r\n    \r\n    return result || reset_Conf()\r\n}\r\n\r\nexport const reset_Conf = (reload) => {\r\n    console.log(\"Resetting conf\", config)\r\n    localStorage.setItem(\"raconf\", JSON.stringify(config));\r\n    if(reload){\r\n        window.location.reload()\r\n    }\r\n    return config\r\n}\r\n\r\nexport const conf = get_Conf()\r\n\r\nexport default conf","import { stringify } from 'query-string';\nimport { fetchUtils, DataProvider, HttpError } from 'react-admin';\nimport merge from 'deepmerge';\nimport { defaultSettings } from './default-settings';\nimport ResourceLookup from './resourceLookup';\nimport {get_Conf} from '../Config'\n\nconst conf : { [ key: string] : any } = get_Conf();\n/**\n * Based on\n * \n * https://github.com/marmelab/react-admin/blob/master/packages/ra-data-simple-rest/src/index.ts\n * @see https://github.com/marmelab/FakeRest\n * \n */\nexport const jsonapiClient = (\n  apiUrl: string,\n  userSettings = {conf : {}},\n  httpClient = fetchUtils.fetchJson,\n  countHeader: string = 'Content-Range'\n): DataProvider => {\n  const settings = merge(defaultSettings, userSettings);\n  const conf__ = userSettings.conf;\n\n  \n  return {\n    /*******************************************************************************************\n     * getList\n     *******************************************************************************************/\n    getList: (resource, params) => {\n      /*todo: rename resource to resource_name*/\n      const resource_name = resource;\n      const { page, perPage } = params.pagination;\n      \n      const resource_conf : any = conf.resources[resource_name];\n      const sort : string = resource_conf.sort\n      // Create query with pagination params.\n      const query : {[k: string]: any} = {\n        'page[number]': page,\n        'page[size]': perPage,\n        'page[offset]': (page - 1) * perPage,\n        'page[limit]': perPage,\n        sort: sort ? sort : ''\n      };\n\n\n      // Add all filter params to query.\n      if(params.filter?.q && \"resources\" in conf){\n        // search is requested by react-admin\n        const search_cols = resource_conf.columns.filter((col : any) => col.search == true).map((col :any) => col.name);\n        const sort = resource_conf.sort\n        query['filter'] = JSON.stringify(search_cols.map((col_name: string) => {return { \n                              \"name\":col_name,\n                              \"op\":\"like\",\n                              \"val\":`${params.filter.q}%`};}) // => startswith operator in sql\n            )\n      }\n      else{\n        Object.keys(params.filter || {}).forEach((key) => {\n          query[`filter[${key}]`] = params.filter[key];\n        });\n      }\n\n      // Add sort parameter, first check the default configured sorting, then the customized sort\n      if (params.sort && params.sort.field) {\n        const prefix = params.sort.order === 'ASC' ? '' : '-';\n        query.sort = `${prefix}${params.sort.field}`;\n      }\n      const rel_conf = conf.resources[resource_name].relationships || []\n      const includes: string[] = rel_conf.map((rel : any) => rel.name);\n      query['include'] = includes.join(',');\n\n      const url = `${apiUrl}/${resource}?${stringify(query)}`;\n\n      return httpClient(url)\n        .then(({ json }) => {\n          // const lookup = new ResourceLookup(json.data);\n          // When meta data and the 'total' setting is provided try\n          // to get the total count.\n          let total = 0;\n          if (json.meta && settings.total) {\n            total = json.meta[settings.total];\n          }\n          // Use the length of the data array as a fallback.\n          total = total || json.data.length;\n          const lookup = new ResourceLookup(json);\n          const jsonData = json.data.map((resource: any) =>{\n              //console.log(\"unwrapping\", resource);\n              return lookup.unwrapData(resource, includes)\n            }\n          );\n          return {\n            data: jsonData,\n            included: json.included,\n            //included: json.included.map((item: any) => lookup.unwrapData(item, [])),\n            total: total\n          };\n        })\n        .catch((err: HttpError) => {\n          console.log('catch Error', err.body);\n          const errorHandler = settings.errorHandler;\n          return Promise.reject(errorHandler(err));\n        });\n    },\n\n    /*******************************************************************************************\n      getOne\n    ********************************************************************************************/\n    getOne: (resource: any, params: { id: any }) => {\n      //const url = `${apiUrl}/${resource}/${params.id}?include=%2Ball&page[limit]=50`;\n      const resource_conf = conf[\"resources\"][resource];\n      const rel_conf = resource_conf.relationships || [];\n      const includes: string[] = rel_conf.map((rel : any) => rel.name).join(\",\")\n      //const url = `${apiUrl}/${resource}/${params.id}?include=%2Ball`;\n      const url = `${apiUrl}/${resource}/${params.id}?include=${includes}`;\n      \n      return httpClient(url).then(({ json }) => {\n\n        const { id, attributes, relationships, type } = json.data;\n        //const included = json.included;\n        Object.assign(attributes, relationships, {type: type}, {relationships: relationships}, {attributes: {...attributes} });\n        return {\n          data: {\n            id,\n            ...attributes\n          }\n        };\n      });\n    },\n\n    /*******************************************************************************************\n      getMany\n    ********************************************************************************************/\n    getMany: (resource, params) => {\n      resource = capitalize(resource);\n      /* const query = {\n        filter: JSON.stringify({ id: params.ids })\n      }; */\n      const query = 'filter[id]=' + JSON.stringify(params.ids);\n      // const url = `${apiUrl}/${resource}?${stringify(query)}`;\n      const url = `${apiUrl}/${resource}?${query}`;\n      return httpClient(url).then(({ json }) => {\n        console.log('gtMany', json);\n        // When meta data and the 'total' setting is provided try\n        // to get the total count.\n        let total = 0;\n        if (json.meta && settings.total) {\n          total = json.meta[settings.total];\n        }\n        // Use the length of the data array as a fallback.\n        total = total || json.data.length; //  { id: any; attributes: any; }\n        const jsonData = json.data.map((value: any) =>\n          Object.assign({ id: value.id, type: value.type }, value.attributes)\n        );\n\n        return {\n          data: jsonData,\n          total: total\n        };\n      });\n    },\n\n    /*******************************************************************************************\n      getManyReference\n    ********************************************************************************************/\n    getManyReference: (resource, params : any) => {\n      console.log('GMR')\n      console.log(resource, params.target)\n      const { page, perPage } = params.pagination;\n      const { field, order } = params.sort;\n\n      const query: {[k: string]: any} = {\n        sort: JSON.stringify([field, order]),\n        range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n        filter_: JSON.stringify({\n          ...params.filter\n        })\n      };\n      //query[`filter[${params.target}]`] = params.id\n      //const url = `${apiUrl}/${resource}?${stringify(query)}`;\n      const relationship_name = params.target?.name\n      const url = `${apiUrl}/${params.target?.source}/${params.id}/${relationship_name}?${stringify(query)}`\n      const options = {};\n      \n      return httpClient(url, options).then(({ headers, json }) => {\n        if (!headers.has(countHeader)) {\n          console.debug(\n            `The ${countHeader} header is missing in the HTTP Response. The simple REST data provider expects responses for lists of resources to contain this header with the total number of results to build the pagination. If you are using CORS, did you declare ${countHeader} in the Access-Control-Expose-Headers header?`\n          );\n        }\n        return {\n          data: json.data,\n          total: json.data?.length\n        };\n      });\n    },\n\n    update: (resource, params) => {\n      let type = conf[\"resources\"][resource].type;\n      const arr = settings.endpointToTypeStripLastLetters;\n      for (const i in arr) {\n        if (resource.endsWith(arr[i])) {\n          type = resource.slice(0, arr[i].length * -1);\n          break; // quit after first hit\n        }\n      }\n      const data = {\n        data: {\n          id: params.id,\n          type: type,\n          attributes: params.data\n        }\n      };\n\n      return httpClient(`${apiUrl}/${resource}/${params.id}`, {\n        method: settings.updateMethod,\n        body: JSON.stringify(data)\n      })\n        .then(({ json }) => {\n          const { id, attributes } = json.data;\n          /* const attributes = json.data;\n           delete attributes.id;\n          const updateData: any = {\n            any too keep compiler happy \n           data: {\n              id: params.id,\n              type: resource,\n              attributes: attributes\n            }\n          }; */\n          return {\n            data: {\n              id,\n              ...attributes\n            }\n          };\n        })\n        .catch((err: HttpError) => {\n          console.log('catch Error', err.body);\n          const errorHandler = settings.errorHandler;\n          return Promise.reject(errorHandler(err));\n        });\n    },\n\n    // simple-rest doesn't handle provide an updateMany route, so we fallback to calling update n times instead\n    updateMany: (resource, params) =>\n      Promise.all(\n        params.ids.map((id) =>\n          httpClient(`${apiUrl}/${resource}/${id}`, {\n            method: 'PUT',\n            body: JSON.stringify(params.data)\n          })\n        )\n      ).then((responses) => ({ data: responses.map(({ json }) => json.id) })),\n\n    /* create_old: (resource, params) =>\n      httpClient(`${apiUrl}/${resource}`, {\n        method: 'POST',\n        body: JSON.stringify(params.data)\n      }).then(({ json }) => ({\n        data: { ...params.data, id: json.id }\n      })), */\n\n    create: (resource, params) => {\n      let type = resource;\n      const arr = settings.endpointToTypeStripLastLetters;\n      for (const i in arr) {\n        if (resource.endsWith(arr[i])) {\n          type = resource.slice(0, arr[i].length * -1);\n          break; // quit after first hit\n        }\n      }\n      const data = {\n        data: {\n          type: type,\n          attributes: params.data\n        }\n      };\n      return httpClient(`${apiUrl}/${resource}`, {\n        method: 'POST',\n        body: JSON.stringify(data)\n      })\n        .then(({ json }) => {\n          const { id, attributes } = json.data;\n          return {\n            data: {\n              id,\n              ...attributes\n            }\n          };\n        })\n        .catch((err: HttpError) => {\n          console.log('catch Error', err.body);\n          const errorHandler = settings.errorHandler;\n          return Promise.reject(errorHandler(err));\n        });\n    },\n\n    delete: (resource, params) =>\n      httpClient(`${apiUrl}/${resource}/${params.id}`, {\n        method: 'DELETE',\n        headers: new Headers({\n          'Content-Type': 'text/plain'\n        })\n      }).then(({ json }) => ({ data: json })),\n\n    // simple-rest doesn't handle filters on DELETE route, so we fallback to calling DELETE n times instead\n    deleteMany: (resource, params) =>\n      Promise.all(\n        params.ids.map((id) =>\n          httpClient(`${apiUrl}/${resource}/${id}`, {\n            method: 'DELETE',\n            headers: new Headers({\n              'Content-Type': 'text/plain'\n            })\n          })\n        )\n      ).then((responses) => ({\n        data: responses.map(({ json }) => json.id)\n      })),\n\n    getResources: () => {\n        \n        if(conf){\n            return Promise.resolve({data: conf});\n        };\n        return httpClient(`${apiUrl}/schema`, {\n            method: 'GET'\n        }).then(({json}) => {\n            localStorage.setItem('raconf', JSON.stringify(json));\n            return { data: json };\n        })\n        .catch(()=> {return {data : {}} })\n      }\n    \n  };\n};\n\nfunction capitalize(s: string): string {\n  return s;\n  return s[0].toUpperCase() + s.slice(1);\n}\nexport interface includeRelations {\n  resource: string;\n  includes: string[];\n}\n","import * as React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: \"75%\",\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n  textAlign: \"left\"\r\n};\r\n\r\n\r\n\r\nexport default function JoinModal({label, content, resource_name}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = (e) => {setOpen(true); e.stopPropagation();}\r\n  const handleClose = (e) => {e.stopPropagation();setOpen(false);}\r\n\r\n  return (\r\n    <div>\r\n      <span onClick={handleOpen} className=\"JoinedField\" title={resource_name}>{label} </span>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            {label}\r\n          </Typography>\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            {content}\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\n\nimport { useState, useEffect, useMemo} from 'react';\nimport { List,\n    Datagrid,\n    TextField,\n    EditButton,\n} from \"react-admin\";\nimport Grid from '@material-ui/core/Grid';\nimport { Resource, TabbedShowLayout, Tab } from 'react-admin';\nimport {\n  Edit,\n  Create,\n  Show,\n  SimpleForm,\n  TextInput,\n  SimpleShowLayout,\n  TabbedShowLayoutTabs,\n  ReferenceManyField,\n  useRecordContext,\n  Link\n} from \"react-admin\";\nimport { Typography } from '@material-ui/core';\nimport { useRefresh } from 'react-admin';\nimport { useDataProvider } from 'react-admin';\nimport { FunctionField } from 'react-admin';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport {get_Conf} from './Config.js'\nimport loadable from '@loadable/component'\nimport Popover from '@material-ui/core/Popover';\nimport Button from '@material-ui/core/Button';\nimport JoinModal from './components/JoinModal'\nimport { AutocompleteInput, ReferenceInput } from 'react-admin';\nimport { Pagination } from 'react-admin';\nimport './style/DynStyle.css'\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\nimport { useNotify, useRedirect } from 'react-admin';\n\n\n//import {ExtComp} from './components/ExtComp';\n\nconst conf = get_Conf();\n\nconst searchFilters = [\n    <TextInput source=\"q\" label=\"Search\" alwaysOn />\n];\n\n\nconst type2resource = (type) => {\n    for(let [resource_name, resource] of Object.entries(conf?.resources)){\n        if(resource.type === type){\n            return resource_name\n        }\n    }\n    console.warn(`No resource for type \"${type}`)\n    return conf[type]\n}\n\n\nconst ColumnField = ({column}) => {\n    \n    const component = column.component // component name to be loaded\n    const style = column.style || {}\n        \n    const default_comp = <TextField source={column.name} key={column.name} style={style} />\n    if(!component){\n        return default_comp\n    }\n    // component is specified => render the specified component\n    try{\n        //const Component = loadable(() => import(`./components/Custom.js`), {\n        const Component = loadable(() => import(`./components/Custom.js`), {\n                resolveComponent: (components) => components[component],\n        })\n        return <Component column={column}/>\n    }\n    catch(e){\n        alert(\"Custom component error\")\n        console.error(\"Custom component error\", e)\n    }\n    return default_comp\n}\n\n\nconst load_custom_component = (component_name, item) => {\n\n    try{\n        const LabelComponent = loadable(() => import(`./components/Custom.js`), {\n            resolveComponent: (components) => components[`${component_name}`],\n        })\n        return <LabelComponent instance={item} />\n    }\n    catch(e){\n        alert(\"Custom component error\")\n        console.error(\"Custom component error\", e)\n    }\n    return null\n}\n\n\nconst JoinedField = ({column, join}) => {\n    const record = useRecordContext();\n    if(record.attributes){\n        Object.assign(record, record.attributes)\n    }\n    const rel_name = join.name;\n    const id = record.id\n    const target_resource = join.target\n    \n    const dataProvider = useDataProvider();\n    const fk = join.fks[0]\n    const user_key = conf.resources[join.target]?.user_key\n    \n    const { data, loading, error } = useQueryWithStore({ \n        type: 'getOne',\n        resource: target_resource,\n        payload: { id: record[fk] }\n    });\n    let item = data || record[rel_name]\n    \n    const user_component = conf.resources[join.target]?.user_component\n    let label = item?.id\n    \n    if(item && user_component){\n        // user_component: custom component\n        label = load_custom_component(user_component, item)\n    }\n    else if(item?.attributes && user_key){\n        const target_col = column.relationship.target_resource.columns.filter((col) => col.name == user_key)\n        label = <span>{item.attributes[user_key] || item.id}</span>\n    }\n    \n    const content = <RelatedInstance instance={item} resource_name={join.target}/>\n    return <JoinModal label={label} key={column.name} content={content} resource_name={join.target}/>\n}\n\n\nconst column_fields = (columns, relationships) => {\n\n    if(!relationships){\n        return []\n    }\n    const joins = relationships.filter(rel => rel.direction === \"toone\")\n    const fields = columns.map((column) => {\n\n        if (column.hidden){\n            return null;\n        }\n        for(let join of joins){\n            // check if the column is a (toone) relationship FK\n            for(let fk of join.fks){\n                if(column.name == fk){\n                    return <JoinedField key={column.name} column={column} join={join} label={column.label? column.label: column.name}/>\n                }\n            }\n        }\n        return <ColumnField key={column.name} column={column} label={column.label? column.label: column.name} style={column.header_style} />\n        }\n    )\n    return fields\n}\n\n\nconst DynPagination = props => (\n    <Pagination rowsPerPageOptions={[10, 20, 50, 100]}\n                perPage={props.perPage || 25 }\n                {...props} />\n);\n\n\nexport const gen_DynResourceList = (resource) => (props) => {\n\n    const columns = resource.columns\n    const relationships = resource.relationships\n    const fields = column_fields(columns, relationships);\n    const dataProvider = useDataProvider();\n    const refresh = useRefresh();\n    const buttons = [\n        resource.edit !== false ? <EditButton key={resource.name} label={\"\"}/> : null,\n        resource.delete !== false ? <FunctionField \n                onClick={(e)=> {e.stopPropagation()}}\n                key={resource.name}\n                render={record => <DeleteIcon style={{fill: \"#3f51b5\"}} onClick={(item)=>deleteField(dataProvider, props.resource, record, refresh)}/>}\n        /> : null\n    ]\n    \n    return <List filters={searchFilters}\n                pagination={<DynPagination perPage={resource.perPage}/>}\n                sort={resource.sort || \"\"}\n                {...props} >\n                <Datagrid rowClick=\"show\">\n                    {fields}\n                    {buttons}\n                </Datagrid>\n            </List>\n};\n\n\nexport const gen_DynResourceEdit = (resource) => {\n    \n    const columns = resource.columns;\n    \n    const Result = (props) => {\n        const notify = useNotify();\n        const refresh = useRefresh();\n        const redirect = useRedirect();\n\n        const onFailure = (error) => {\n            redirect('edit', props.basePath, props.id);\n            refresh();\n        }\n    \n        return <Edit {...props} onFailure={onFailure}>\n            <SimpleForm>\n                {columns.map((col) => <DynInput column={col} key={col.name}/> )}\n            </SimpleForm>\n        </Edit>\n    }\n    return Result;\n}\n\n\nconst deleteField = (dataProvider, resource, record, refresh) => {\n\n    console.log('Delete', record)\n    dataProvider.delete(resource, record).then(()=>{\n        refresh();\n        }\n    ).catch((e)=> alert('error'))\n}\n\n\nconst DynInput = ({column, resource}) => {\n\n    if(column.relationship?.direction == \"toone\" && column.relationship.target){\n        const search_cols = conf.resources[column.relationship.target].search_cols\n        let input =  <AutocompleteInput optionText={''} key={column.name}/>\n        if(!search_cols){\n            console.error(\"no searchable columns configured\");\n        }\n        else if(search_cols.length == 0){\n            console.warn(`no searchable columns configured for ${column.relationship.target}`);\n        }\n        else {\n            input = <AutocompleteInput optionText={search_cols[0].name} key={column.name}/>\n        }\n        return <ReferenceInput source={column.name} label={`${column.relationship.name} (${column.name})`} reference={column.relationship.target}>\n                    {input}\n                </ReferenceInput>\n    }\n    return <TextInput source={column.name}/>\n}\n\n\nexport const gen_DynResourceCreate = (resource) => (props) => {\n\n    return <Create {...props}>\n        <SimpleForm>\n            {resource.columns.map((col) => <DynInput column={col} resource={resource} key={col.name}/> )}\n        </SimpleForm>\n    </Create >\n};\n\n\nconst ResourceTitle = ({ record }) => {\n\n    return <span>{record ? `${record.type ? record.type +\" \" : \"\"} #${record.id} ` : ''}</span>;\n};\n\n\nconst ShowRecordField = ({ source }) => {\n  const record = useRecordContext();\n  return record ? <ShowField label={source} value={record[source]}/> : null\n};\n\n\nconst ShowField = ({ label, value }) => {\n    \n    return (\n      <Grid item xs={3}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {label}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {value}\n        </Typography>\n      </Grid>\n    )\n  };\n  \n\nconst DynRelationshipOne = (resource, id, relationship) => {\n\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n    const [related, setRelated] = useState(false);\n    const dataProvider = useDataProvider();\n    \n    useEffect(() => {\n        dataProvider.getOne(resource, { id: id })\n            .then(({ data }) => {\n                return { rel_resource: data[relationship.target]?.data.type, rel_id: data[relationship.target]?.data.id }\n            })\n            .then(({rel_resource, rel_id}) => {\n                dataProvider.getOne(rel_resource, { id: rel_id }).then(({data}) =>\n                {console.log(data)\n                    return setRelated(data)\n                }\n                )\n                .then(()=>console.log(related))\n                setLoading(false);\n                \n            })\n            .catch(error => {\n                setError(error);\n                setLoading(false);\n            })\n    }, []);\n    \n    return <Tab label={relationship.name} >\n               <RelatedInstance instance={related} />\n            </Tab>\n}\n\nconst DynRelationshipMany = (resource, id, relationship) => {\n\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n    const [related, setRelated] = useState(false);\n    const dataProvider = useDataProvider();\n\n    useEffect(() => {\n        dataProvider.getOne(resource, { id: id })\n            .then(({ data }) => {\n                setRelated(data.relationships);\n                setLoading(false);\n            })\n            .catch(error => {\n                setError(error);\n                setLoading(false);\n            })\n    }, []);\n\n    const target_resource = conf.resources[relationship.target]\n    if(!target_resource){\n        console.warn(`${resource}: No resource conf for ${target_resource}`)\n        return <span></span>\n    }\n\n    if(!target_resource?.columns){\n        console.log(\"No target resource columns\")\n        return <div/>\n    }\n\n    // ignore relationships pointing back to the parent resource\n    const columns = target_resource.columns.filter(col => col.relationship?.target !== resource)\n    const relationships = target_resource?.relationships\n    const fields = column_fields(columns, relationships);\n    relationship.source = resource\n    \n    return <Tab label={relationship.name} >\n                <List pagination={<DynPagination perPage={target_resource.perPage}/>} >\n                    <ReferenceManyField reference={relationship.target} target={relationship} addLabel = {false}>\n                        <Datagrid rowClick=\"show\" sort=\"id\">\n                            {fields}\n                        <EditButton />\n                        </Datagrid>\n                    </ReferenceManyField>\n                </List>\n            </Tab>\n}\n\n\nconst ShowInstance = ({columns, relationships, resource_name, id}) => {\n\n    const title = <Typography variant=\"h5\" component=\"h5\" style={{ margin: \"30px 0px 30px\" }}>\n                        {resource_name}<i style={{color: \"#ccc\"}}> #{id}</i>\n                   </Typography>\n\n    return <SimpleShowLayout>\n                {title}\n                <Grid container spacing={3} margin={5} m={40}>\n                    {columns.map((col) => <ShowRecordField source={col.name}/> )}\n                </Grid>\n                \n                <hr style={{ margin: \"30px 0px 30px\" }}/>\n\n                <TabbedShowLayout tabs={<TabbedShowLayoutTabs variant=\"scrollable\" scrollButtons=\"auto\" />}>\n                    {relationships.map((rel) => rel.direction === \"tomany\" ?  // <> \"toone\"\n                        DynRelationshipMany(resource_name, id, rel) : \n                        DynRelationshipOne(resource_name, id, rel)) }\n                </TabbedShowLayout>\n\n            </SimpleShowLayout>\n}\n\n\nconst RelatedInstance = ({instance}) => {\n\n    const resource_name = type2resource(instance?.type)\n    if (!instance || ! resource_name){\n        return <span></span>;\n    }\n    \n    const resource_conf = conf.resources[resource_name]\n    const columns = resource_conf?.columns || [];\n    const relationships = resource_conf?.relationships || [];\n    \n    // ugly manual styling because adding to TabbedShowLayout didn't work\n    const result = <div style={{left: \"-16px\", position: \"relative\"}}> \n                    \n                        <div style={{textAlign:\"right\", width:\"100%\"}}>\n                            <Button\n                                title=\"edit\"\n                                component={Link}\n                                to={{\n                                    pathname: `${resource_name}/${instance.id}`\n                                    }}\n                                label=\"Link\"><EditIcon />Edit\n                            </Button>\n                            <Button\n                                title=\"view\"\n                                component={Link}\n                                to={{\n                                    pathname: `/${resource_name}/${instance.id}/show`\n                                    }}\n                                label=\"Link\"><KeyboardArrowRightIcon />View\n                            </Button>\n                        </div>\n                        <Grid container title=\"qsd\">\n                                {columns.map((col) => <ShowField label={col.name} key={col.name} value={instance.attributes[col.name]}/> )}\n                        </Grid>\n                    </div>\n\n    \n    return result;\n}\n\n\nexport const gen_DynResourceShow = (resource_conf) => (props) => {\n\n    const columns = resource_conf.columns\n    const relationships= resource_conf.relationships\n\n    return <Show title={<ResourceTitle />} {...props}>\n                <ShowInstance columns={columns} relationships={relationships} resource_name={props.resource} id={props.id}/>\n            </Show>\n}\n\n\nexport const DynResource = (props) => {\n    window.addEventListener(\"storage\", ()=>window.location.reload())\n    const [, updateState] = React.useState();\n    const [resource_conf, setConf] = useState(conf.resources[props.name])\n    const List= useMemo(()=> gen_DynResourceList(resource_conf), [resource_conf])\n    const Create = useMemo(()=> gen_DynResourceCreate(resource_conf), [resource_conf])\n    const Edit = useMemo(()=> gen_DynResourceEdit(resource_conf), [resource_conf])\n    const Show = useMemo(()=> gen_DynResourceShow(resource_conf), [resource_conf])\n    return <Resource key={props.name} {...props} list={List} edit={Edit} create={Create} show={Show} />\n}\n\n","import * as React from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Title } from 'react-admin';\r\n\r\nconst Home = () => (\r\n    <Card>\r\n        <Title title=\"Home\" />\r\n        <CardContent>\r\n            Hello World\r\n        </CardContent>\r\n    </Card>\r\n);\r\n\r\nexport default Home;\r\n","import * as React from 'react';\r\nimport { TextareaAutosize, TextField } from '@material-ui/core';\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport {reset_Conf} from \"../Config\"\r\nimport MonacoEditor from '@uiw/react-monacoeditor';\r\nimport { TabbedShowLayout, Tab } from 'react-admin';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nconst yaml = require('js-yaml')\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    widget : {\r\n        border: \"1px solid #3f51b5\",\r\n        marginRight: \"1em\",\r\n        marginTop : \"1em\",\r\n        marginBottom : \"1em\"\r\n    },\r\n    textInput : {\r\n        width : \"80%\"\r\n    }\r\n}));\r\n\r\n\r\nconst ConfSelect = () => {\r\n    let configs = []\r\n    try{\r\n        configs = JSON.parse(localStorage.getItem(\"raconfigs\",\"{}\"))\r\n    }\r\n    catch(e){\r\n        \r\n    }\r\n    const [current, setCurrent] = React.useState(configs && configs[0]);\r\n  \r\n    const handleChange = (event) => {\r\n      setCurrent(event.target.value);\r\n    };\r\n  \r\n    return (\r\n      <Box sx={{ minWidth: 120 }}>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"demo-simple-select-label\">Config</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={current}\r\n            label=\"Configs\"\r\n            size=\"small\"\r\n            onChange={handleChange}\r\n            defaultValue={\"30\"}\r\n          >\r\n            {\r\n                configs ? Object.entries(configs).map((config) => <MenuItem value={\"30\"}>Ten</MenuItem>) : null\r\n            }\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n\r\nconst saveConfig = () => {\r\n    /*\r\n    Save the current config in raconf to raconfigs\r\n    */\r\n    let current_conf = localStorage.getItem(\"raconf\")\r\n    const configs = JSON.parse(localStorage.getItem(\"raconfigs\",\"{}\"))\r\n    \r\n\r\n\r\n}\r\n\r\n\r\nconst ConfigurationUI = () => {\r\n\r\n    const save_yaml = (ystr, ev) => {\r\n        console.log(ystr)\r\n        try{\r\n            const jj = yaml.load(ystr)\r\n            saveEdit(JSON.stringify(jj))\r\n            setBgColor(\"black\");\r\n        }\r\n        catch(e){\r\n            console.warn(`Failed to process`, ystr)\r\n            setBgColor(\"red\");\r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const saveEdit = (text) => {\r\n        try{\r\n            if(text){\r\n                const parsed_conf = JSON.parse(text);\r\n                setApiroot(parsed_conf.api_root);\r\n            }\r\n            setBgColor(\"#ddeedd\");\r\n            //localStorage.setItem(\"raconf\", JSON.stringify(text, null, 4));\r\n            localStorage.setItem(\"raconf\", text);\r\n            if(!taConf){\r\n                window.location.reload();\r\n            }\r\n        }catch (e){\r\n            //setBgColor(\"#eedddd\");\r\n            setBgColor(\"red\");\r\n        }\r\n        setTaConf(text)\r\n    }\r\n\r\n    let conf = localStorage.getItem(\"raconf\") ||  JSON.stringify(reset_Conf())\r\n    const [taConf, setTaConf] = useState(conf ? JSON.stringify(JSON.parse(conf), null, 4) : \"\");\r\n    //const [bgColor, setBgColor] = useState(\"#ddeedd\");\r\n    const [bgColor, setBgColor] = useState(\"black\");\r\n    const [autosave, setAutosave] = useState(true);\r\n    const [api_root, setApiroot] = useState(JSON.parse(conf)?.api_root);\r\n    \r\n    const handleAutoSaveChange = (event) => {\r\n        setAutosave(event.target.checked);\r\n    };\r\n    \r\n    return <div>\r\n                <div>\r\n                    <ConfSelect/>\r\n                    <Button className={classes.widget} onClick={()=> saveEdit(\"\")} color=\"primary\" >Clear</Button>\r\n                    <Button className={classes.widget} onClick={()=> saveEdit(JSON.stringify(reset_Conf(), null, 4))} color=\"primary\" >Reset</Button>\r\n                    <Button className={classes.widget} onClick={()=> window.location.reload()} color=\"primary\" >Apply</Button>\r\n                    <Button className={classes.widget} onClick={()=> saveConfig()} color=\"primary\" >Save</Button>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={autosave} onChange={handleAutoSaveChange} />}\r\n                        label=\"Auto Save Config\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <TabbedShowLayout>\r\n                        <Tab label=\"yaml\">\r\n                            <MonacoEditor\r\n                                language=\"yaml\"\r\n                                value={yaml.dump(JSON.parse(taConf))}\r\n                                options={{\r\n                                    theme: 'vs-dark',\r\n                                }}\r\n                                height=\"1000px\"\r\n                                style = {{ borderLeft: `8px solid ${bgColor}`}}\r\n                                onChange={(ystr, ev) => save_yaml(ystr, ev)}\r\n                            />\r\n                        </Tab>\r\n                        <Tab label=\"json\">\r\n                        <TextareaAutosize\r\n                                variant=\"outlined\"\r\n                                minRows={3}\r\n                                style={{ width: \"80%\", backgroundColor : \"white\" }}\r\n                                value= {JSON.stringify(JSON.parse(taConf), null, 4) }\r\n                                onChange={(evt)=>saveEdit(evt.target.value)}\r\n                            />\r\n                        </Tab>\r\n\r\n                    </TabbedShowLayout>\r\n                </div>\r\n            </div>\r\n}\r\n\r\n\r\n/*const ta = <TextareaAutosize\r\nvariant=\"outlined\"\r\nminRows={3}\r\nclassName={classes.textInput}\r\nstyle={{ backgroundColor : bgColor }}\r\nvalue= {taConf}\r\nonChange={(evt)=>saveEdit(evt.target.value)}\r\n/>*/\r\nexport default ConfigurationUI","import { useSelector } from 'react-redux';\r\nimport { DashboardMenuItem, Menu as RAMenu, MenuItemLink, getResources } from 'react-admin';\r\nimport DefaultIcon from '@material-ui/icons/ViewList';\r\n\r\n/*\r\nexport const MenuA = (props) => (\r\n    <RAMenu {...props}>\r\n        <DashboardMenuItem />\r\n        <MenuItemLink to=\"/wxxx\" primaryText=\"Posts\" leftIcon={<BookIcon />}/>\r\n        <MenuItemLink to=\"/comments\" primaryText=\"Comments\" leftIcon={<ChatBubbleIcon />}/>\r\n        <MenuItemLink to=\"/users\" primaryText=\"Users\" leftIcon={<PeopleIcon />}/>\r\n        <MenuItemLink to=\"/custom-route\" primaryText=\"Miscellaneous\" leftIcon={<LabelIcon />}/>\r\n    </RAMenu>\r\n);\r\n*/\r\n\r\nconst onMenuClick = (evt) => {\r\n    //console.log(`Menu Click`, evt);\r\n}\r\n\r\nexport const Menu = (props) => {\r\n    const resources = useSelector(getResources);\r\n    const open = true;\r\n    return (\r\n        <RAMenu {...props}>\r\n            {resources.map(resource => (\r\n                <MenuItemLink\r\n                    key={resource.name}\r\n                    to={`/${resource.name}`}\r\n                    primaryText={\r\n                        (resource.options && resource.options.label) ||\r\n                        resource.name\r\n                    }\r\n                    leftIcon={\r\n                        resource.icon ? <resource.icon /> : <DefaultIcon />\r\n                    }\r\n                    onClick={onMenuClick}\r\n                    sidebarIsOpen={open}\r\n                />\r\n            ))}\r\n            <DashboardMenuItem />\r\n        </RAMenu>\r\n    );\r\n};","import { Layout as RALayout } from 'react-admin';\r\nimport { Menu } from './Menu';\r\n\r\nexport const Layout = (props) => <RALayout {...props} menu={Menu} />;","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport { routerMiddleware, connectRouter } from 'connected-react-router';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { all, fork } from 'redux-saga/effects';\r\nimport { put, takeEvery } from 'redux-saga/effects';\r\nimport { AutocompleteArrayInput, showNotification } from 'react-admin';\r\n\r\nimport {\r\n    adminReducer,\r\n    adminSaga,\r\n    USER_LOGOUT,\r\n} from 'react-admin';\r\nimport {get_Conf} from './Config'\r\n\r\nconst conf = get_Conf();\r\n\r\nfunction* preSaga() {\r\n    yield takeEvery('RA/CRUD_GET_LIST_SUCCESS', function* (args) {\r\n        console.log(args)\r\n        yield put(showNotification('preSaga'));\r\n    })\r\n}\r\n\r\nfunction* postSaga() {\r\n    yield takeEvery('RA/CRUD_GET_LIST_SUCCESS', function* (args) {\r\n        console.log(args)\r\n        yield put(showNotification('Update'));\r\n    })\r\n}\r\n\r\nconst sReducer = (previousState = 0, { type, payload }) => {\r\n    \r\n    if (type === 'RA/CRUD_GET_LIST_SUCCESS') {\r\n        return previousState;\r\n    }\r\n    return previousState;\r\n}\r\n\r\nconst type2resource = (type) => {\r\n    // map the resource \"type\" (jsonapi type attr) to the resource_name (list/collection name)\r\n    for(let [resource_name, resource] of Object.entries(conf.resources)){\r\n        if(resource.type === type){\r\n            return resource_name\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nconst adminReducerWrapper = (previousState, action) => {\r\n    \r\n    const result = adminReducer(previousState, action)\r\n    //console.log(action)\r\n    if(action.type == \"CRUD_GET_ONE_SUCCESS\"){\r\n        return result;\r\n    }\r\n    /*\r\n        Add the included resources to the redux store\r\n        when items have been included we have to sort the corresponding resources per the resource conf\r\n    */\r\n    const inc_resources = new Set();\r\n    for(let instance of action.payload?.included || []){\r\n        const resource_name = type2resource(instance.type)\r\n        if(instance.type !== undefined && instance.id !== undefined && resource_name){\r\n            if(!result['resources'][resource_name]){\r\n                result['resources'][resource_name] = {}\r\n            }\r\n            result['resources'][resource_name][instance.id] = instance;\r\n            inc_resources.add(resource_name)\r\n        }\r\n    }\r\n\r\n    for(let resource_name of inc_resources){\r\n        //Object.entries(result['resources'][resource_name]).sort()\r\n    }\r\n\r\n    if(Array.isArray(action.payload?.data)){\r\n        /*\r\n            link all related data to the corresponding item in the store\r\n            getList, getMany etc .. check action.type\r\n        */\r\n        let data = action.payload.data\r\n        if(Array.isArray(action.payload.included)){\r\n            //data += action.payload.included\r\n        }\r\n        for(let instance of data){\r\n            if(!instance.relationships){\r\n                continue;\r\n            }\r\n            for(let [rel_name , rel] of Object.entries(instance.relationships)){\r\n                let rel_resource_name = type2resource(rel.data?.type)\r\n                if(rel_resource_name){\r\n                    if(Array.isArray(rel.data)){\r\n                        instance.relationships[rel_name] = instance[rel_name] = rel.data.map(rel_inst => result['resources'][rel_resource_name][rel_inst.id])\r\n                    }\r\n                    else if(rel.data?.id){\r\n                        // link toone resources\r\n                        instance.relationships[rel_name] = instance[rel_name] = result['resources'][rel_resource_name][rel.data.id]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if(action.payload?.data?.type){\r\n\r\n    }\r\n    \r\n    return result;\r\n}\r\n\r\n\r\nexport default ({\r\n    authProvider,\r\n    dataProvider,\r\n    history,\r\n}) => {\r\n    const reducer = combineReducers({\r\n        admin: adminReducerWrapper,\r\n        router: connectRouter(history),\r\n        sReducer: sReducer\r\n        // add your own reducers here\r\n    });\r\n    const resettableAppReducer = (state, action) =>\r\n        reducer(action.type !== USER_LOGOUT ? state : undefined, action);\r\n\r\n    const saga = function* rootSaga() {\r\n        yield all(\r\n            [\r\n                //preSaga,\r\n                adminSaga(dataProvider, authProvider),\r\n                //postSaga\r\n                \r\n            ].map(fork)\r\n        );\r\n    };\r\n    const sagaMiddleware = createSagaMiddleware();\r\n\r\n    const composeEnhancers =\r\n        (process.env.NODE_ENV === 'development' &&\r\n            typeof window !== 'undefined' &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n                trace: true,\r\n                traceLimit: 25,\r\n            })) ||\r\n        compose;\r\n  \r\n    const store = createStore(\r\n        resettableAppReducer,\r\n        { /* set your initial state here */ },\r\n        composeEnhancers(\r\n            applyMiddleware(\r\n                sagaMiddleware,\r\n                routerMiddleware(history),\r\n                // add your own middlewares here\r\n            ),\r\n            // add your own enhancers here\r\n        ),        \r\n    );\r\n    sagaMiddleware.run(saga);\r\n    return store;\r\n};","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { AdminContext, Admin, AdminUI, Resource, useDataProvider } from 'react-admin';\n//import {jsonapiClient} from \"@agoe/rav3-jsonapi-client\"\nimport {jsonapiClient} from \"./rav3-jsonapi-client/ra-jsonapi-client\"\nimport HomeIcon from '@material-ui/icons/Home';\nimport { DynResource } from './DynResource';\nimport Home from './components/Home.js'\nimport ConfigurationUI from './components/ConfigurationUI'\nimport {get_Conf} from './Config'\nimport { Layout }  from './components/Layout';\nimport { put, takeEvery } from 'redux-saga/effects';\nimport { showNotification } from 'react-admin';\nimport createAdminStore from './createAdminStore';\nimport { Provider } from 'react-redux';\nimport { createHashHistory } from 'history';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nconst history = createHashHistory();\n\n\n\nconst bcR =  (previousState = 0, { type, payload }) => {\n\n    if(type === 'RA/CRUD_GET_LIST_SUCCESS'){\n        console.log('bcR', type, payload)\n        console.log(previousState);\n    }\n   \n    return previousState;\n}\n\nconst conf = get_Conf();\n//const dataProvider = jsonapiClient(conf.api_root, {includeRelations : [{resource: \"OrderDetail\", includes : [\"Order\", \"Product\"] }] }); // http://localhost:5000\nconst dataProvider = jsonapiClient(conf.api_root, {});\nconst authProvider = () => Promise.resolve();\n\nconst AsyncResources = () => {\n    const [resources, setResources] = useState(false);\n    const dataProvider = useDataProvider();\n    \n    useEffect(() => {\n        dataProvider.getResources().then((response) => {        \n            let res = Object.keys(response.data.resources).map((resource_name) => { return {name: resource_name} })\n            setResources(res)\n        })\n        .catch((err) => {\n            console.warn(err)\n            setResources([])\n        })\n    }, []);\n\n    if(resources ===  false){\n        return <div>Loading...</div>\n    }\n    \n    return (\n        <Provider\n        store={createAdminStore({\n            authProvider,\n            dataProvider,\n            history,\n        })}\n    >\n        <AdminUI layout={Layout}>\n            \n            <Resource name=\"Home\" show={Home} list={Home} options={{ label: 'Home' }} icon={HomeIcon}/>\n            <Resource name=\"Configuration\" show={ConfigurationUI} list={ConfigurationUI} options={{ label: 'Configuration' }} icon={SettingsIcon}/>\n            {resources.map(resource => <DynResource name={resource.name} key={resource.name} />)}\n\n        </AdminUI>\n        </Provider>\n    );\n}\n\n\n\nconst App = () => {\n    \n    return (\n        <AdminContext dataProvider={dataProvider}  customReducers={{ admin2: bcR }}  >\n            <AsyncResources />\n        </AdminContext>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />\n   ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}