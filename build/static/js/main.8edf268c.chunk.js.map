{"version":3,"sources":["../../../node_modules/deepmerge/dist/cjs.js","../../src/errors.ts","../../src/default-settings.ts","../../src/resourceLookup.ts","Config.js","components/JoinModal.js","DynResource.js","components/Home.js","components/Menu.js","components/Layout.js","App.js","../../src/ra-jsonapi-provider.ts","reportWebVitals.js","index.js"],"names":["isMergeableObject","value","isNonNullObject","stringValue","Object","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","options","deepmerge","val","Array","defaultArrayMerge","target","source","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","property","mergeObject","destination","key","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","SafrsHttpError","defaultSettings","total","headers","Accept","updateMethod","arrayFormat","includeRelations","errorHandler","errors","httpError","console","endpointToTypeStripLastLetters","ResourceLookup","this","response","resources","entry","getKey","resource","get","has","lookup","unwrapData","s","ret","id","includes","relationName","relation","includedRelation","includedResource","relationshipData","get_Conf","ls_conf","lsc_str","localStorage","getItem","JSON","parse","e","warn","setItem","stringify","config","result","api_root","entries","resource_name","columns","relationships","search","name","col","rel","fks","fk","relationship","target_resource","push","reset_Conf","reload","log","window","location","conf","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","JoinModal","label","content","React","open","setOpen","Button","onClick","stopPropagation","Modal","onClose","Box","sx","Typography","variant","component","mt","searchFilters","TextInput","alwaysOn","ColumnField","column","default_comp","TextField","Component","loadable","resolveComponent","components","alert","error","JoinedField","join","record","useRecordContext","useState","item","dataProvider","useDataProvider","useEffect","getOne","then","data","user_key","user_component","component_name","LabelComponent","instance","load_custom_component","filter","gen_DynResourceList","props","refresh","useRefresh","fields","joins","direction","map","hidden","header_style","column_fields","buttons","edit","EditButton","delete","FunctionField","render","fill","deleteField","filters","perPage","Datagrid","rowClick","catch","DynInput","ReferenceInput","reference","AutocompleteInput","optionText","ResourceTitle","ContactName","ShowRecordField","ShowField","Grid","xs","color","RelatedInstance","resource_conf","container","spacing","margin","m","gen_DynResourceShow","title","SimpleShowLayout","TabbedShowLayout","setLoading","setError","setRelated","target_cols","Tab","ReferenceManyField","addLabel","attributes","DynRelationshipMany","related","rel_resource","type","rel_id","DynRelationship","DynResource","addEventListener","List","useMemo","Create","SimpleForm","Edit","gen_DynResourceEdit","Show","Resource","list","create","show","useStyles","makeStyles","theme","widget","marginRight","marginTop","marginBottom","textInput","Home","classes","saveEdit","text","parsed_conf","setApiroot","setBgColor","taConf","setTaConf","bgColor","autosave","setAutosave","className","size","defaultValue","FormControlLabel","control","Checkbox","checked","onChange","event","TextareaAutosize","minRows","backgroundColor","evt","onMenuClick","Menu","useSelector","getResources","MenuItemLink","to","primaryText","leftIcon","icon","sidebarIsOpen","DashboardMenuItem","Layout","menu","userSettings","httpClient","fetchUtils","fetchJson","countHeader","settings","merge","getList","params","page","query","sort","prefix","ir","include","url","apiUrl","json","err","Promise","getMany","getManyReference","field","order","range","filter_","update","arr","i","method","body","updateMany","responses","Headers","deleteMany","jsonapiClient","AsyncResources","setResources","res","keys","AdminUI","layout","HomeIcon","App","AdminContext","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8edf268c.chunk.js","sourcesContent":["'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import { HttpError } from 'react-admin';\n\nexport class NotImplementedError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.message = message;\n    this.name = 'NotImplementedError';\n  }\n}\n\nexport class SafrsHttpError extends HttpError {\n  constructor(message: string, status: number, body: any) {\n    super(message, status, body);\n    this.name = 'SafrsHttpError';\n  }\n}\n\nexport const safrsErrorHandler: HttpErrorHandler = (\n  httpError: HttpError\n): HttpError => {\n  /* Example Safrs Error message\n  {\n    \"errors\": [\n      {\n        \"title\": \"Request forbidden -- authorization will not help\",\n        \"detail\": \"\",\n        \"code\": \"403\"\n      }\n    ]\n  } */\n  interface err {\n    title: string;\n    detail: string;\n    code: string;\n  }\n  const errors: { errors: err[] } = httpError.body; // JSON.parse(httpError.body.stringify);\n  if (errors?.errors.length > 0) {\n    return new SafrsHttpError(\n      errors.errors[0].title,\n      httpError.status,\n      errors.errors[0].code\n    );\n  } else {\n    console.log('Unsopported Http Error Body', httpError.body);\n    return httpError;\n  }\n};\n\nexport interface HttpErrorHandler {\n  (httpError: HttpError): HttpError;\n}\n","import { safrsErrorHandler, HttpErrorHandler } from './errors';\nimport { includeRelations } from './ra-jsonapi-provider';\n\nexport const defaultSettings: settings = {\n  total: 'total',\n  headers: {\n    Accept: 'application/vnd.api+json; charset=utf-8',\n    'Content-Type': 'application/vnd.api+json; charset=utf-8'\n  },\n  updateMethod: 'PATCH',\n  arrayFormat: 'brackets',\n  includeRelations: [],\n  errorHandler: safrsErrorHandler,\n  endpointToTypeStripLastLetters: ['Model', 's'] // update/create type: UserModel -> User, Users -> User\n};\n\ninterface settings {\n  total: string;\n  headers: {};\n  updateMethod: string;\n  arrayFormat: string;\n  includeRelations: includeRelations[];\n  errorHandler: HttpErrorHandler;\n  endpointToTypeStripLastLetters?: string[];\n}\n","/**\n * A map-like class that maps resource linkage objects {id: 1, type: \"user\"} to concrete resources with attributes and\n * relationships\n */\nexport default class ResourceLookup {\n  lookup: Map<any, any>;\n  includes: string[];\n  /**\n   * Constructs a new lookup map\n   * @param {Object} response A JSON API response, in JSON format\n   */\n  constructor(response: any) {\n    this.lookup = new Map();\n    this.includes = [];\n\n    // If the response wasn't a JSON dictionary, we can't and don't need to build a lookup\n    if (typeof response !== 'object') return;\n\n    let resources;\n    // if (response.hasOwnProperty('included')) {\n    if (Object.prototype.hasOwnProperty.call(response, 'included')) {\n      resources = [...response.data, ...response.included];\n    } else {\n      resources = response.data;\n    }\n\n    // Iterate over each resource returned and put each in the lookup\n    for (const entry of resources) {\n      const key = this.getKey(entry);\n      this.lookup.set(key, entry);\n    }\n  }\n\n  /**\n   * Calculates a hashable key for JSON API resources\n   * @param resource A resource linkage object\n   * @returns {string}\n   */\n  getKey(resource: any) {\n    return `${resource.type}:${resource.id}`;\n  }\n\n  /**\n   * Looks up a resource\n   * @param resource A resource linkage object\n   * @returns {Object}\n   */\n  get(resource: any) {\n    // If we don't have included data for this resource, just return the Resource Linkage object, since that's still\n    // useful\n    if (this.has(resource)) {\n      return this.lookup.get(this.getKey(resource));\n    } else {\n      return resource;\n    }\n  }\n\n  /**\n   * Returns true if the resource is in the lookup\n   * @param resource\n   * @returns {boolean}\n   */\n  has(resource: any) {\n    return this.lookup.has(this.getKey(resource));\n  }\n\n  /**\n   * Converts a JSON API data object (with id, type, and attributes fields) into a flattened object\n   * @param {Object} response A JSON API data object\n   */\n  unwrapData(response: any, includes: string[]) {\n    // The base resource object\n    const ret = Object.assign(\n      {\n        id: response.id\n      },\n      response.attributes\n    );\n    if (includes.length === 0) {\n      // shortcut, no includes: scip relationships\n      return ret;\n    }\n    // Deal with relationships\n    // if (response.hasOwnProperty('relationships')) {\n    if (Object.prototype.hasOwnProperty.call(response, 'relationships')) {\n      // ret.relationships = {};\n      for (const relationName of Object.keys(response.relationships)) {\n        if (!includes.includes(relationName)) {\n          continue; // if we do not have includes for rlationships, we skip\n        }\n        if (includes && relationName in includes) {\n          continue;\n        }\n        const relation = response.relationships[relationName].data;\n        if (Array.isArray(relation)) {\n          ret[relationName] = relation.map((resource) => {\n            const includedRelation = this.get(resource);\n            const relationshipData = Object.assign(\n              {\n                id: includedRelation.id\n              },\n              includedRelation.attributes\n            );\n            return relationshipData; // this.unwrapData(this.get(resource));\n          });\n        } else if (relation == null) {\n          continue; // empty many to one relanships return a null value in jsaonaopi spec , == instead of ===: doing nothing also in case of undefined\n        } else {\n          const includedResource = this.get(relation);\n          const relationshipData = Object.assign(\n            {\n              id: includedResource.id\n            },\n            includedResource.attributes\n          );\n          ret[lowerFirstLetter(relation.type)] = relationshipData; // this.unwrapData(this.get(relation)); // ret.relationships[relationName] =\n        }\n      }\n    }\n\n    return ret;\n  }\n}\n\nfunction lowerFirstLetter(s: string): string {\n  return s[0].toLowerCase() + s.slice(1);\n}\n","import config from './Config.json'\r\n\r\nexport const get_Conf = () => {\r\n\r\n    let ls_conf = null\r\n    const lsc_str = localStorage.getItem(\"raconf\")\r\n    try{\r\n        ls_conf = JSON.parse(lsc_str)\r\n    }\r\n    catch(e){\r\n        console.warn(`Failed to parse config ${lsc_str}`)\r\n        localStorage.setItem(\"raconf\", JSON.stringify(config))\r\n    }\r\n\r\n    let result = ls_conf ? ls_conf : JSON.parse(JSON.stringify(config)) || {};\r\n    \r\n    result.api_root = result?.api_root ? result.api_root : 'https://apilogicserver.pythonanywhere.com/'\r\n    result.api_root = 'https://apilogicserver.pythonanywhere.com/'\r\n    result.api_root = result.api_root ? result.api_root : 'https://apilogicserver.pythonanywhere.com/'\r\n    //result.api_root = 'http://172.16.17.31:5000' // 'https://apilogicserver.pythonanywhere.com/'\r\n    const resources = result.resources\r\n\r\n    for(let [resource_name, resource] of Object.entries(resources||{})){\r\n        \r\n        // link relationship to FK column\r\n        if(!(resource.columns instanceof Array || resource.relationships instanceof Array)){\r\n            continue\r\n        }\r\n\r\n        resource.search = []\r\n        result.resources[resource_name].name = resource_name\r\n\r\n        for(let col of resource.columns){\r\n            for(let rel of resource.relationships){\r\n                for(let fk of rel.fks || []){\r\n                    if(col.name == fk){\r\n                        col.relationship = rel;\r\n                        col.relationship.target_resource = result.resources[col.relationship.target]\r\n                    }\r\n                }\r\n            }\r\n            if(col.search){\r\n                resource.search.push(col);\r\n            }\r\n        }\r\n    }\r\n    \r\n    return result || reset_Conf()\r\n}\r\n\r\nexport const reset_Conf = (reload) => {\r\n    console.log(\"Resetting conf\", config)\r\n    localStorage.setItem(\"raconf\", JSON.stringify(config));\r\n    if(reload){\r\n        window.location.reload()\r\n    }\r\n    return config\r\n}\r\n\r\nexport const conf = get_Conf()\r\n\r\nexport default conf","import * as React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function JoinModal({label, content}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = (e) => {setOpen(true); e.stopPropagation();}\r\n  const handleClose = (e) => {setOpen(false);e.stopPropagation();}\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleOpen}>{label}</Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            {label}\r\n          </Typography>\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            {content}\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\n\nimport { useState, useEffect, useMemo} from 'react';\nimport { List,\n    Datagrid,\n    TextField,\n    EditButton,\n} from \"react-admin\";\nimport Grid from '@material-ui/core/Grid';\nimport { Resource, TabbedShowLayout, Tab } from 'react-admin';\nimport {\n  Edit,\n  Create,\n  Show,\n  SimpleForm,\n  TextInput,\n  SimpleShowLayout,\n  ReferenceManyField,\n  useRecordContext\n} from \"react-admin\";\nimport { Typography } from '@material-ui/core';\nimport { useRefresh } from 'react-admin';\nimport { useDataProvider } from 'react-admin';\nimport { FunctionField } from 'react-admin';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {get_Conf} from './Config.js'\nimport loadable from '@loadable/component'\nimport Popover from '@material-ui/core/Popover';\nimport Button from '@material-ui/core/Button';\nimport JoinModal from './components/JoinModal'\nimport { AutocompleteInput, ReferenceInput } from 'react-admin';\nimport { Pagination } from 'react-admin';\n\nconst conf = get_Conf();\n\nconst searchFilters = [\n    <TextInput source=\"q\" label=\"Search\" alwaysOn />\n];\n\nconst ColumnField = ({column}) => {\n    \n    const component = column.component // component name to be loaded\n    const style = column.style || {}\n        \n    const default_comp = <TextField source={column.name} key={column.name} style={style} />\n    if(!component){\n        return default_comp\n    }\n    // component is specified => render the specified component\n    try{\n        const Component = loadable(() => import(`./components/Custom.js`), {\n            resolveComponent: (components) => components[component],\n        })\n        return <Component column={column}/>\n    }\n    catch(e){\n        alert(\"Custom component error\")\n        console.error(\"Custom component error\", e)\n    }\n    return default_comp\n}\n\n\nconst load_custom_component = (component_name, item) => {\n\n    try{\n        const LabelComponent = loadable(() => import(`./components/Custom.js`), {\n            resolveComponent: (components) => components[`${component_name}`],\n        })\n        return <LabelComponent instance={item} />\n    }\n    catch(e){\n        alert(\"Custom component error\")\n        console.error(\"Custom component error\", e)\n    }\n    return <span/>\n}\n\nconst JoinedField = ({column, join}) => {\n    const record = useRecordContext();\n    const id = record.id\n    const target_resource = join.target\n    const [item, setItem] = useState(false)\n    const dataProvider = useDataProvider();\n    const fk = join.fks[0]\n    \n    useEffect(() => {\n        dataProvider.getOne(target_resource, { id: record[fk] })\n            .then(({ data }) => {\n                setItem(data);\n            })\n    }, []);\n    \n    const user_key = conf.resources[join.target]?.user_key\n    const user_component = conf.resources[join.target]?.user_component\n    let label = id\n    \n    if(item && user_component){\n        // user_component: custom component\n        label = load_custom_component(user_component, item)\n    }\n    else if(item && user_key){\n        const target_col = column.relationship.target_resource.columns.filter((col) => col.name == user_key)\n        label = <span>{item[user_key] || id}</span>\n        \n    }\n    \n    \n    const data = <RelatedInstance instance={item} resource_name={join.target}/>\n    return <JoinModal label={label} key={column.name} content={data}/>\n}\n\n\nconst column_fields = (columns, relationships) => {\n\n    const joins = relationships.filter(rel => rel.direction === \"toone\")\n    const fields = columns.map((column) => {\n\n        if (column.hidden){\n            return null;\n        }\n        for(let join of joins){\n            // check if the column is a (toone) relationship FK\n            for(let fk of join.fks){\n                if(column.name == fk){\n                    return <JoinedField key={column.name} column={column} join={join} label={column.label? column.label: column.name}/>\n                }\n            }\n        }\n        return <ColumnField key={column.name} column={column} label={column.label? column.label: column.name} style={column.header_style} />\n        }\n    )\n    return fields\n}\n\n\nconst DynPagination = props => (\n    <Pagination rowsPerPageOptions={[10, 25, 50, 100]}\n                perPage={25}\n                {...props} />\n);\n\n\nexport const gen_DynResourceList = (resource) => (props) => {\n\n    const columns = resource.columns\n    const relationships = resource.relationships\n    const dataProvider = useDataProvider();\n    const refresh = useRefresh();\n    const fields = column_fields(columns, relationships);\n    const buttons = [\n        resource.edit !== false ? <EditButton key={resource.name} label={\"\"}/> : null,\n        resource.delete !== false ? <FunctionField \n                onClick={(e)=> {e.stopPropagation()}}\n                key={resource.name}\n                render={record => <DeleteIcon style={{fill: \"#3f51b5\"}} onClick={(item)=>deleteField(dataProvider, props.resource, record, refresh)}/>}\n        /> : null\n    ]\n    \n    return <List filters={searchFilters} \n                perPage={10}\n                {...props} >\n                <Datagrid rowClick=\"show\">\n                    {fields}\n                    {buttons}\n                </Datagrid>\n            </List>\n};\n\n\nexport const gen_DynResourceEdit = (resource) => {\n    \n    const columns = resource.columns;\n\n    const Result = (props) => {\n        console.log(props)\n        return <Edit {...props}>\n            <SimpleForm>\n                {columns.map((col) => <DynInput column={col} key={col.name}/> )}\n            </SimpleForm>\n        </Edit>\n    }\n    return Result;\n}\n\n\nconst deleteField = (dataProvider, resource, record, refresh) => {\n\n    console.log(record)\n    dataProvider.delete(resource, record).then(()=>{\n        refresh();\n        }\n    ).catch((e)=> alert('error'))\n}\n\n\nconst DynInput = ({column, resource}) => {\n\n    console.log(column);\n    if(column.relationship?.direction == \"toone\" && column.relationship.target){\n        const search_cols = \"ProductName\" \n        if(!search_cols){\n            console.error(\"no searchable columns configured\");\n            \n        }\n        return <ReferenceInput label={column.name} source={column.name} reference={column.relationship.target}>\n                    <AutocompleteInput optionText=\"ProductName\" />\n                </ReferenceInput>\n        return <ReferenceInput label={column.relationship.name} source=\"post_id\" reference={column.relationship.target} >\n                    <AutocompleteInput optionText={search_cols[0].name} />\n                </ReferenceInput>\n    }\n    return <TextInput source={column.name}/>\n}\n\nexport const gen_DynResourceCreate = (resource) => (props) => {\n\n    \n    return <Create {...props}>\n        <SimpleForm>\n            {resource.columns.map((col) => <DynInput column={col} resource={resource} key={col.name}/> )}\n        </SimpleForm>\n    </Create >\n};\n\n\nconst ResourceTitle = ({ record }) => {\n    return <span>Post {record ? `ID: \"${record.id}\" ContactName: \"${record.ContactName}\"` : ''}</span>;\n};\n\n\nconst ShowRecordField = ({ source }) => {\n  const record = useRecordContext();\n  return record ? <ShowField label={source} value={record[source]}/> : null\n};\n\n\nconst ShowField = ({ label, value }) => {\n    \n    return (\n      <Grid item xs={3}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {label}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {value}\n        </Typography>\n      </Grid>\n    )\n  };\n  \n\nconst DynRelationship = (resource, id, relationship) => {\n\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n    const [related, setRelated] = useState(false);\n    const dataProvider = useDataProvider();\n    \n    useEffect(() => {\n        dataProvider.getOne(resource, { id: id })\n            .then(({ data }) => {\n                console.log('data',data);\n                return { rel_resource: data[relationship.target]?.data.type, rel_id: data[relationship.target]?.data.id }\n            })\n            .then(({rel_resource, rel_id}) => {\n                console.log(rel_resource, rel_id)\n                dataProvider.getOne(rel_resource, { id: rel_id }).then(({data}) =>\n                   setRelated(data)\n                )\n                setLoading(false);\n            })\n            .catch(error => {\n                setError(error);\n                setLoading(false);\n            })\n    }, []);\n    \n\n    return <Tab label={relationship.name}>\n               <RelatedInstance instance={related} resource_name={relationship.target} />\n            </Tab>\n}\n\nconst RelatedInstance = ({instance, resource_name}) => {\n\n    const resource_conf = conf.resources[resource_name]\n    const columns = resource_conf?.columns ? resource_conf?.columns : [];\n\n    const result = instance? <Grid container spacing={3} margin={5} m={40}>\n                    {columns.map((col) => <ShowField label={col.name} value={instance[col.name]}/> )}\n                    </Grid> : null\n    \n    return result;\n}\n\n\nconst DynRelationshipMany = (resource, id, relationship) => {\n\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n    const [related, setRelated] = useState(false);\n    const dataProvider = useDataProvider();\n    \n\n    useEffect(() => {\n        dataProvider.getOne(resource, { id: id })\n            .then(({ data }) => {\n                setRelated(data.relationships);\n                setLoading(false);\n            })\n            .catch(error => {\n                setError(error);\n                setLoading(false);\n            })\n    }, []);\n\n    const target_cols = conf.resources[relationship.target]?.columns\n    \n    return <Tab label={relationship.name}>\n                <ReferenceManyField reference={relationship.target} target={relationship.fks[0]} addLabel = {false}>\n                    <Datagrid rowClick=\"show\">\n                        {target_cols?.map( (col) => \n                            <FunctionField\n                                    label={col.name}\n                                    key={col.name}\n                                    render={record => <span>{record?.attributes ? record?.attributes[col.name] : ''}</span>} />\n                        )}\n                    <EditButton />\n                    </Datagrid>\n                </ReferenceManyField>\n            </Tab>\n}\n\n\nexport const gen_DynResourceShow = (columns, relationships) => (props) => {\n\n    return <Show title={<ResourceTitle />} {...props}>\n                <SimpleShowLayout>\n                    \n                    <Typography variant=\"h5\" component=\"h5\" style={{ margin: \"30px 0px 30px\" }}>\n                        Instance Data:\n                    </Typography>\n\n                    <Grid container spacing={3} margin={5} m={40}>\n                        {columns.map((col) => <ShowRecordField source={col.name}/> )}\n                    </Grid>\n                    \n                    <hr style={{ margin: \"30px 0px 30px\" }}/>\n\n                    <TabbedShowLayout>\n                        {relationships.map((rel) => rel.direction === \"tomany\" ?  // <> \"toone\"\n                            DynRelationshipMany(props.resource, props.id, rel) : \n                            DynRelationship(props.resource, props.id, rel)) }\n                    </TabbedShowLayout>\n\n                </SimpleShowLayout>\n            </Show>\n}\n\n\nexport const DynResource = (props) => {\n    window.addEventListener(\"storage\", ()=>window.location.reload())\n    const resource_conf = conf.resources[props.name]\n    const List= useMemo(()=> gen_DynResourceList(resource_conf), [resource_conf])\n    const Create = useMemo(()=> gen_DynResourceCreate(resource_conf), [resource_conf])\n    const Edit = useMemo(()=> gen_DynResourceEdit(resource_conf), [resource_conf])\n    const Show = useMemo(()=> gen_DynResourceShow(resource_conf.columns, resource_conf.relationships), [resource_conf])    \n    return <Resource key={props.name} {...props} list={List} edit={Edit} create={Create} show={Show} />\n}\n\n","import { TextareaAutosize, TextField } from '@material-ui/core';\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport {reset_Conf} from \"../Config\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    widget : {\r\n        border: \"1px solid #3f51b5\",\r\n        marginRight: \"1em\",\r\n        marginTop : \"1em\",\r\n        marginBottom : \"1em\"\r\n    },\r\n    textInput : {\r\n        width : \"80%\"\r\n    }\r\n}));\r\n    \r\nconst Home = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const saveEdit = (text) => {\r\n        try{\r\n            if(text){\r\n                const parsed_conf = JSON.parse(text);\r\n                setApiroot(parsed_conf.api_root);\r\n            }\r\n            setBgColor(\"#ddeedd\");\r\n            localStorage.setItem(\"raconf\", text);\r\n            if(!taConf){\r\n                window.location.reload();\r\n            }\r\n        }catch (e){\r\n            setBgColor(\"#eedddd\");\r\n        }\r\n        setTaConf(text)\r\n    }\r\n\r\n    let conf = localStorage.getItem(\"raconf\") ||  JSON.stringify(reset_Conf())\r\n    const [taConf, setTaConf] = useState(conf ? JSON.stringify(JSON.parse(conf), null, 4) : \"\");\r\n    const [bgColor, setBgColor] = useState(\"#ddeedd\");\r\n    const [autosave, setAutosave] = useState(true);\r\n    const [api_root, setApiroot] = useState(JSON.parse(conf)?.api_root);\r\n    \r\n    const handleAutoSaveChange = (event) => {\r\n        setAutosave(event.target.checked);\r\n    };\r\n\r\n\r\n    return <div >\r\n                <div>\r\n                    <TextField\r\n                        className={classes.textInput}\r\n                        variant=\"outlined\"\r\n                        id=\"outlined-helperText\"\r\n                        label=\"API root URL\"\r\n                        size=\"small\"\r\n                        defaultValue={api_root}\r\n                    />\r\n                    <br/>\r\n                    <Button className={classes.widget} onClick={()=> saveEdit(\"\")} color=\"primary\" >Clear</Button>\r\n                    <Button className={classes.widget} onClick={()=> reset_Conf()} color=\"primary\" >Reset</Button>\r\n                    <Button className={classes.widget} onClick={()=> window.location.reload()} color=\"primary\" >Apply</Button>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={autosave} onChange={handleAutoSaveChange} />}\r\n                        label=\"Auto Save Config\"\r\n                    />\r\n                    \r\n                </div>\r\n                <TextareaAutosize\r\n                    variant=\"outlined\"\r\n                    minRows={3}\r\n                    className={classes.textInput}\r\n                    style={{ backgroundColor : bgColor }}\r\n                    value= {taConf}\r\n                    onChange={(evt)=>saveEdit(evt.target.value)}\r\n                />\r\n                \r\n            </div>\r\n}\r\n\r\nexport default Home","import { useSelector } from 'react-redux';\r\nimport { DashboardMenuItem, Menu as RAMenu, MenuItemLink, getResources } from 'react-admin';\r\nimport DefaultIcon from '@material-ui/icons/ViewList';\r\n\r\n/*\r\nexport const MenuA = (props) => (\r\n    <RAMenu {...props}>\r\n        <DashboardMenuItem />\r\n        <MenuItemLink to=\"/wxxx\" primaryText=\"Posts\" leftIcon={<BookIcon />}/>\r\n        <MenuItemLink to=\"/comments\" primaryText=\"Comments\" leftIcon={<ChatBubbleIcon />}/>\r\n        <MenuItemLink to=\"/users\" primaryText=\"Users\" leftIcon={<PeopleIcon />}/>\r\n        <MenuItemLink to=\"/custom-route\" primaryText=\"Miscellaneous\" leftIcon={<LabelIcon />}/>\r\n    </RAMenu>\r\n);\r\n*/\r\n\r\nconst onMenuClick = (evt) => {\r\n    console.log(`Menu Click`, evt);\r\n}\r\n\r\nexport const Menu = (props) => {\r\n    const resources = useSelector(getResources);\r\n    const open = true;\r\n    return (\r\n        <RAMenu {...props}>\r\n            {resources.map(resource => (\r\n                <MenuItemLink\r\n                    key={resource.name}\r\n                    to={`/${resource.name}`}\r\n                    primaryText={\r\n                        (resource.options && resource.options.label) ||\r\n                        resource.name\r\n                    }\r\n                    leftIcon={\r\n                        resource.icon ? <resource.icon /> : <DefaultIcon />\r\n                    }\r\n                    onClick={onMenuClick}\r\n                    sidebarIsOpen={open}\r\n                />\r\n            ))}\r\n            <DashboardMenuItem />\r\n        </RAMenu>\r\n    );\r\n};","import { Layout as RALayout } from 'react-admin';\r\nimport { Menu } from './Menu';\r\n\r\nexport const Layout = (props) => <RALayout {...props} menu={Menu} />;","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { AdminContext, AdminUI, Resource, ListGuesser, useDataProvider } from 'react-admin';\n//import {jsonapiClient} from \"@agoe/rav3-jsonapi-client\"\nimport {jsonapiClient} from \"@agoe/rav3-jsonapi-client\"\nimport HomeIcon from '@material-ui/icons/Home';\nimport { DynResource } from './DynResource';\nimport Home from './components/Home.js'\nimport conf from './Config'\nimport { Layout }  from './components/Layout';\n\nconst dataProvider = jsonapiClient(conf.api_root); // http://localhost:5000\n\nconst AsyncResources = () => {\n    const [resources, setResources] = useState(false);\n    const dataProvider = useDataProvider();\n    \n\n    useEffect(() => {\n        dataProvider.getResources().then((response) => {        \n            let res = Object.keys(response.data.resources).map((resource_name) => { return {name: resource_name} })\n            setResources(res)\n        })\n        .catch((err) => {\n            console.warn(err)\n            alert(`failed to fetch schema, no resources available for api ${conf.api_root}`)\n            setResources([])\n        })\n    }, []);\n\n    if(resources ===  false){\n        return <div>Loading...</div>\n    }\n    return (\n        <AdminUI layout={Layout}>\n            <Resource name=\"Home\" show={Home} list={Home} options={{ label: 'Home' }} icon={HomeIcon}/>\n            {resources.map(resource => <DynResource name={resource.name} key={resource.name} />)}\n        </AdminUI>\n    );\n}\n\nconst App = () => {\n    \n    return (\n        <AdminContext dataProvider={dataProvider}>\n            <AsyncResources />\n        </AdminContext>\n    );\n}\n\nexport default App;","import { stringify } from 'query-string';\nimport { fetchUtils, DataProvider, HttpError } from 'react-admin';\nimport merge from 'deepmerge';\nimport { defaultSettings } from './default-settings';\nimport ResourceLookup from './resourceLookup';\n\n/**\n * https://github.com/marmelab/react-admin/blob/master/packages/ra-data-simple-rest/src/index.ts\n * Latest commit 44a1d8f on 6 Dec 2020\n * 44a1d8f569db23a7fc826c1a9094e4e041cc51da\n * https://github.com/marmelab/react-admin/tree/44a1d8f569db23a7fc826c1a9094e4e041cc51da\n *\n * Maps react-admin queries to a simple REST API\n *\n * This REST dialect is similar to the one of FakeRest\n *\n * @see https://github.com/marmelab/FakeRest\n *\n * @example\n *\n * getList     => GET http://my.api.url/posts?sort=['title','ASC']&range=[0, 24]\n * getOne      => GET http://my.api.url/posts/123\n * getMany     => GET http://my.api.url/posts?filter={id:[123,456,789]}\n * update      => PUT http://my.api.url/posts/123\n * create      => POST http://my.api.url/posts\n * delete      => DELETE http://my.api.url/posts/123\n *\n * @example\n *\n * import * as React from \"react\";\n * import { Admin, Resource } from 'react-admin';\n * import simpleRestProvider from 'ra-data-simple-rest';\n *\n * import { PostList } from './posts';\n *\n * const App = () => (\n *     <Admin dataProvider={simpleRestProvider('http://path.to.my.api/')}>\n *         <Resource name=\"posts\" list={PostList} />\n *     </Admin>\n * );\n *\n * export default App;\n * export default (apiUrl, userSettings = {}) => (type, resource, params) => {\n  let url = '';\n  const settings = merge(defaultSettings, userSettings);\n\n  const options = {\n    headers: settings.headers,\n  };\n */\nexport const jsonapiClient = (\n  apiUrl: string,\n  userSettings = {},\n  httpClient = fetchUtils.fetchJson,\n  countHeader: string = 'Content-Range'\n): DataProvider => {\n  const settings = merge(defaultSettings, userSettings);\n  return {\n    getList: (resource, params) => {\n      /* const { page, perPage } = params.pagination\n    const { field, order } = params.sort\n\n    const rangeStart = (page - 1) * perPage\n    const rangeEnd = page * perPage - 1\n\n    const query = {\n      sort: JSON.stringify([field, order]),\n      range: JSON.stringify([rangeStart, rangeEnd]),\n      filter: JSON.stringify(params.filter)\n    }\n    const url = `${apiUrl}/${resource}?${stringify(query)}`\n    const options =\n      countHeader === 'Content-Range'\n        ? {\n            // Chrome doesn't return `Content-Range` header if no `Range` is provided in the request.\n            headers: new Headers({\n              Range: `${resource}=${rangeStart}-${rangeEnd}`\n            })\n          }\n        : {} */\n\n      const { page, perPage } = params.pagination;\n\n      // Create query with pagination params.\n      const query = {\n        'page[number]': page,\n        'page[size]': perPage,\n        'page[offset]': (page - 1) * perPage,\n        'page[limit]': perPage,\n        sort: ' '\n      };\n\n      // Add all filter params to query.\n      Object.keys(params.filter || {}).forEach((key) => {\n        query[`filter[${key}]`] = params.filter[key];\n      });\n\n      // Add sort parameter\n      if (params.sort && params.sort.field) {\n        const prefix = params.sort.order === 'ASC' ? '' : '-';\n        query.sort = `${prefix}${params.sort.field}`;\n      }\n      const includes: string[] = [];\n\n      const includeRelations: includeRelations[] = settings.includeRelations;\n\n      for (const ir of includeRelations) {\n        if (resource === ir.resource) {\n          query['include'] = ir.includes.join(',');\n          for (const include of ir.includes) {\n            includes.push(include);\n          }\n          break;\n        }\n      }\n\n      const url = `${apiUrl}/${resource}?${stringify(query)}`;\n\n      return httpClient(url)\n        .then(({ json }) => {\n          // const lookup = new ResourceLookup(json.data);\n          // When meta data and the 'total' setting is provided try\n          // to get the total count.\n          let total = 0;\n          if (json.meta && settings.total) {\n            total = json.meta[settings.total];\n          }\n          // Use the length of the data array as a fallback.\n          total = total || json.data.length; //  { id: any; attributes: any; }\n          const lookup = new ResourceLookup(json);\n          const jsonData = json.data.map((resource: any) =>\n            lookup.unwrapData(resource, includes)\n          );\n          /* const jsonData = json.data.map((value: any) => {\n          const relAttributeKey = Object.keys(value)[0];\n          return Object.assign(\n            { id: value.id },\n            value.attributes,\n            value[relAttributeKey]\n          );\n        }); */\n\n          return {\n            data: jsonData,\n            total: total\n          };\n        })\n        .catch((err: HttpError) => {\n          console.log('catch Error', err.body);\n          const errorHandler = settings.errorHandler;\n          return Promise.reject(errorHandler(err));\n        });\n    },\n\n    /* getOne: (resource, params) =>\n      httpClient(`${apiUrl}/${resource}/${params.id}`).then(({ json }) => ({\n        data: json.data\n      })), */\n\n    getOne: (resource: any, params: { id: any }) => {\n      const url = `${apiUrl}/${resource}/${params.id}?include=%2Ball&page[limit]=50`;\n      return httpClient(url).then(({ json }) => {\n        const { id, attributes, relationships } = json.data;\n        //const included = json.included;\n        Object.assign(attributes, relationships);\n        return {\n          data: {\n            id,\n            ...attributes\n          }\n        };\n      });\n    },\n\n    getMany: (resource, params) => {\n      resource = capitalize(resource);\n      /* const query = {\n        filter: JSON.stringify({ id: params.ids })\n      }; */\n      const query = 'filter[id]=' + JSON.stringify(params.ids);\n      // const url = `${apiUrl}/${resource}?${stringify(query)}`;\n      const url = `${apiUrl}/${resource}?${query}`;\n      return httpClient(url).then(({ json }) => {\n        // When meta data and the 'total' setting is provided try\n        // to get the total count.\n        let total = 0;\n        if (json.meta && settings.total) {\n          total = json.meta[settings.total];\n        }\n        // Use the length of the data array as a fallback.\n        total = total || json.data.length; //  { id: any; attributes: any; }\n        const jsonData = json.data.map((value: any) =>\n          Object.assign({ id: value.id }, value.attributes)\n        );\n\n        return {\n          data: jsonData,\n          total: total\n        };\n      });\n    },\n\n    getManyReference: (resource, params) => {\n      const { page, perPage } = params.pagination;\n      const { field, order } = params.sort;\n\n      // const rangeStart = (page - 1) * perPage;\n      // const rangeEnd = page * perPage - 1;\n\n      const query = {\n        sort: JSON.stringify([field, order]),\n        range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n        filter_: JSON.stringify({\n          ...params.filter\n        })\n      };\n      query[`filter[${params.target}]`] = params.id\n      const url = `${apiUrl}/${resource}?${stringify(query)}`;\n      const options = {};\n      /* countHeader === 'Content-Range'\n          ? {\n              // Chrome doesn't return `Content-Range` header if no `Range` is provided in the request.\n              headers: new Headers({\n                Range: `${resource}=${rangeStart}-${rangeEnd}`\n              })\n            }\n          : {} */\n\n      return httpClient(url, options).then(({ headers, json }) => {\n        if (!headers.has(countHeader)) {\n          console.debug(\n            `The ${countHeader} header is missing in the HTTP Response. The simple REST data provider expects responses for lists of resources to contain this header with the total number of results to build the pagination. If you are using CORS, did you declare ${countHeader} in the Access-Control-Expose-Headers header?`\n          );\n        }\n        return {\n          data: json.data,\n          total: 100\n          /*  countHeader === 'Content-Range'\n              ? parseInt(\n                  headers.get('content-range') ?? ''.split('/').pop() ?? '10',\n                  10\n                )\n              : parseInt(headers.get(countHeader.toLowerCase()) ?? '0')\n        }; */\n        };\n      });\n    },\n\n    update: (resource, params) => {\n      let type = resource;\n      const arr = settings.endpointToTypeStripLastLetters;\n      for (const i in arr) {\n        if (resource.endsWith(arr[i])) {\n          type = resource.slice(0, arr[i].length * -1);\n          break; // quit after first hit\n        }\n      }\n      const data = {\n        data: {\n          id: params.id,\n          type: type,\n          attributes: params.data\n        }\n      };\n      return httpClient(`${apiUrl}/${resource}/${params.id}`, {\n        method: settings.updateMethod,\n        body: JSON.stringify(data)\n      })\n        .then(({ json }) => {\n          const { id, attributes } = json.data;\n          /* const attributes = json.data;\n           delete attributes.id;\n          const updateData: any = {\n            any too keep compiler happy \n           data: {\n              id: params.id,\n              type: resource,\n              attributes: attributes\n            }\n          }; */\n          return {\n            data: {\n              id,\n              ...attributes\n            }\n          };\n        })\n        .catch((err: HttpError) => {\n          console.log('catch Error', err.body);\n          const errorHandler = settings.errorHandler;\n          return Promise.reject(errorHandler(err));\n        });\n    },\n\n    // simple-rest doesn't handle provide an updateMany route, so we fallback to calling update n times instead\n    updateMany: (resource, params) =>\n      Promise.all(\n        params.ids.map((id) =>\n          httpClient(`${apiUrl}/${resource}/${id}`, {\n            method: 'PUT',\n            body: JSON.stringify(params.data)\n          })\n        )\n      ).then((responses) => ({ data: responses.map(({ json }) => json.id) })),\n\n    /* create_old: (resource, params) =>\n      httpClient(`${apiUrl}/${resource}`, {\n        method: 'POST',\n        body: JSON.stringify(params.data)\n      }).then(({ json }) => ({\n        data: { ...params.data, id: json.id }\n      })), */\n\n    create: (resource, params) => {\n      let type = resource;\n      const arr = settings.endpointToTypeStripLastLetters;\n      for (const i in arr) {\n        if (resource.endsWith(arr[i])) {\n          type = resource.slice(0, arr[i].length * -1);\n          break; // quit after first hit\n        }\n      }\n      const data = {\n        data: {\n          type: type,\n          attributes: params.data\n        }\n      };\n      return httpClient(`${apiUrl}/${resource}`, {\n        method: 'POST',\n        body: JSON.stringify(data)\n      })\n        .then(({ json }) => {\n          const { id, attributes } = json.data;\n          return {\n            data: {\n              id,\n              ...attributes\n            }\n          };\n        })\n        .catch((err: HttpError) => {\n          console.log('catch Error', err.body);\n          const errorHandler = settings.errorHandler;\n          return Promise.reject(errorHandler(err));\n        });\n    },\n\n    delete: (resource, params) =>\n      httpClient(`${apiUrl}/${resource}/${params.id}`, {\n        method: 'DELETE',\n        headers: new Headers({\n          'Content-Type': 'text/plain'\n        })\n      }).then(({ json }) => ({ data: json })),\n\n    // simple-rest doesn't handle filters on DELETE route, so we fallback to calling DELETE n times instead\n    deleteMany: (resource, params) =>\n      Promise.all(\n        params.ids.map((id) =>\n          httpClient(`${apiUrl}/${resource}/${id}`, {\n            method: 'DELETE',\n            headers: new Headers({\n              'Content-Type': 'text/plain'\n            })\n          })\n        )\n      ).then((responses) => ({\n        data: responses.map(({ json }) => json.id)\n      })),\n\n    getResources: () => {\n        const conf = localStorage.getItem('raconf');\n        if(conf && JSON.parse(conf)){\n            return Promise.resolve({data: JSON.parse(conf)});\n        };\n        return httpClient(`${apiUrl}/schema`, {\n            method: 'GET'\n        }).then(({json}) => {\n            localStorage.setItem('raconf', JSON.stringify(json));\n            return { data: json };\n        })}\n    \n  };\n};\n\nfunction capitalize(s: string): string {\n  return s[0].toUpperCase() + s.slice(1);\n}\nexport interface includeRelations {\n  resource: string;\n  includes: string[];\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />\n   ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}