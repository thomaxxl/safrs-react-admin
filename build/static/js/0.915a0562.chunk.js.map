{"version":3,"sources":["../node_modules/@mui/icons-material/PlayCircleOutline.js","components/external/index.js","../node_modules/@mui/material/FormHelperText/formHelperTextClasses.js","../node_modules/@mui/material/FormHelperText/FormHelperText.js","../node_modules/@mui/material/TextField/textFieldClasses.js","../node_modules/@mui/material/TextField/TextField.js","components/external/UserPasswordTab.js","components/CreateUser.js","components/ApiAdmin.js","components/Custom.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","MyComp","props","getFormHelperTextUtilityClasses","slot","generateUtilityClass","formHelperTextClasses","generateUtilityClasses","_excluded","FormHelperTextRoot","styled","name","overridesResolver","styles","ownerState","root","size","capitalize","contained","filled","theme","_extends","color","palette","text","secondary","typography","caption","textAlign","marginTop","marginRight","marginBottom","marginLeft","disabled","error","main","FormHelperText","React","inProps","ref","useThemeProps","children","className","component","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","fcs","formControlState","states","variant","focused","required","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","dangerouslySetInnerHTML","__html","getTextFieldUtilityClass","variantComponent","standard","Input","FilledInput","outlined","OutlinedInput","TextFieldRoot","FormControl","TextField","autoComplete","autoFocus","defaultValue","FormHelperTextProps","fullWidth","helperText","idOverride","id","InputLabelProps","inputProps","InputProps","inputRef","label","maxRows","minRows","multiline","onBlur","onChange","onFocus","placeholder","rows","select","SelectProps","type","InputMore","shrink","notched","native","undefined","useId","helperTextId","inputLabelId","InputComponent","InputElement","_jsxs","InputLabel","htmlFor","Select","labelId","input","UserPasswordTab","conf","useConf","notify","useNotify","record","useRecordContext","useDataProvider","useState","pwdValue","setPwdValue","rpwdValue","setRPwdValue","submitColor","setSubmitColor","Box","sx","m","width","noValidate","Grid","item","xs","spacing","margin","Typography","e","target","length","console","log","Button","onClick","data","httpAuthClient","api_root","method","body","JSON","stringify","then","catch","CreateUser","resource_name","resource","resources","Create","SimpleForm","container","style","attributes","map","attr","TextInput","source","PasswordInput","autocomplete","boxStyle","position","top","left","transform","bgcolor","border","boxShadow","p","useStyles","makeStyles","joined_field","cursor","modalStyle","overflow","height","display","fontWeight","ApiModal","open","setOpen","output","setOutput","box_style","setBoxStyle","stopPropagation","title","Modal","onClose","connection_string","port","hostname","create_url","requestOptions","headers","localStorage","getItem","Loading","fetch","response","json","create_api","ApiGenerateField","mode","ApiShow","show","SampleColumnField","attribute","EmployeeLabel","employee","instance","FirstName","LastName","CustomerLabel","customer","CompanyName","ContactName","UserPasswordField","CustomTab"],"mappings":"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","file":"static/js/0.915a0562.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m10 16.5 6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'PlayCircleOutline');\n\nexports.default = _default;","\r\nexport const MyComp = (props) => {\r\n    return <div>HMMMM</div>\r\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getFormHelperTextUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormHelperText', slot);\n}\nconst formHelperTextClasses = generateUtilityClasses('MuiFormHelperText', ['root', 'error', 'disabled', 'sizeSmall', 'sizeMedium', 'contained', 'focused', 'filled', 'required']);\nexport default formHelperTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport capitalize from '../utils/capitalize';\nimport formHelperTextClasses, { getFormHelperTextUtilityClasses } from './formHelperTextClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    contained,\n    size,\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', error && 'error', size && `size${capitalize(size)}`, contained && 'contained', focused && 'focused', filled && 'filled', required && 'required']\n  };\n  return composeClasses(slots, getFormHelperTextUtilityClasses, classes);\n};\n\nconst FormHelperTextRoot = styled('p', {\n  name: 'MuiFormHelperText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.size && styles[`size${capitalize(ownerState.size)}`], ownerState.contained && styles.contained, ownerState.filled && styles.filled];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, theme.typography.caption, {\n  textAlign: 'left',\n  marginTop: 3,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  [`&.${formHelperTextClasses.disabled}`]: {\n    color: theme.palette.text.disabled\n  },\n  [`&.${formHelperTextClasses.error}`]: {\n    color: theme.palette.error.main\n  }\n}, ownerState.size === 'small' && {\n  marginTop: 4\n}, ownerState.contained && {\n  marginLeft: 14,\n  marginRight: 14\n}));\nconst FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormHelperText'\n  });\n\n  const {\n    children,\n    className,\n    component = 'p'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant', 'size', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n\n  const ownerState = _extends({}, props, {\n    component,\n    contained: fcs.variant === 'filled' || fcs.variant === 'outlined',\n    variant: fcs.variant,\n    size: fcs.size,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormHelperTextRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children === ' ' ?\n    /*#__PURE__*/\n    // notranslate needed while Google Translate will not fix zero-width space issue\n    // eslint-disable-next-line react/no-danger\n    _jsx(\"span\", {\n      className: \"notranslate\",\n      dangerouslySetInnerHTML: {\n        __html: '&#8203;'\n      }\n    }) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default FormHelperText;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTextFieldUtilityClass(slot) {\n  return generateUtilityClass('MuiTextField', slot);\n}\nconst textFieldClasses = generateUtilityClasses('MuiTextField', ['root']);\nexport default textFieldClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoComplete\", \"autoFocus\", \"children\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport { getTextFieldUtilityClass } from './textFieldClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTextFieldUtilityClass, classes);\n};\n\nconst TextFieldRoot = styled(FormControl, {\n  name: 'MuiTextField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTextField'\n  });\n\n  const {\n    autoComplete,\n    autoFocus = false,\n    children,\n    className,\n    color = 'primary',\n    defaultValue,\n    disabled = false,\n    error = false,\n    FormHelperTextProps,\n    fullWidth = false,\n    helperText,\n    id: idOverride,\n    InputLabelProps,\n    inputProps,\n    InputProps,\n    inputRef,\n    label,\n    maxRows,\n    minRows,\n    multiline = false,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    placeholder,\n    required = false,\n    rows,\n    select = false,\n    SelectProps,\n    type,\n    value,\n    variant = 'outlined'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    color,\n    disabled,\n    error,\n    fullWidth,\n    multiline,\n    required,\n    select,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('MUI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  const InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    InputMore.label = label;\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  const id = useId(idOverride);\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n\n  const InputElement = /*#__PURE__*/_jsx(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n\n  return /*#__PURE__*/_jsxs(TextFieldRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant,\n    ownerState: ownerState\n  }, other, {\n    children: [label && /*#__PURE__*/_jsx(InputLabel, _extends({\n      htmlFor: id,\n      id: inputLabelId\n    }, InputLabelProps, {\n      children: label\n    })), select ? /*#__PURE__*/_jsx(Select, _extends({\n      \"aria-describedby\": helperTextId,\n      id: id,\n      labelId: inputLabelId,\n      value: value,\n      input: InputElement\n    }, SelectProps, {\n      children: children\n    })) : InputElement, helperText && /*#__PURE__*/_jsx(FormHelperText, _extends({\n      id: helperTextId\n    }, FormHelperTextProps, {\n      children: helperText\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a `textarea` element is rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the component.\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default TextField;","import React, { useState } from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Typography, Button } from '@material-ui/core';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport { FormControl } from '@mui/material';\r\nimport {useRecordContext, useDataProvider} from \"react-admin\";\r\nimport {httpAuthClient} from \"../../rav3-jsonapi-client/ra-jsonapi-client\"\r\nimport { useConf } from \"../../Config\";\r\nimport { useNotify } from 'react-admin';\r\n\r\nexport const UserPasswordTab = () => {\r\n    const conf = useConf();\r\n    const notify = useNotify();\r\n    const record = useRecordContext();\r\n    const dataProvider = useDataProvider();\r\n    const [pwdValue, setPwdValue] = useState(\"\");\r\n    const [rpwdValue, setRPwdValue] = useState(\"\");\r\n    const [submitColor, setSubmitColor] = useState(\"\")\r\n    const onPwdChange = (e) => {\r\n        let pwdValue = e.target.value\r\n        setPwdValue(pwdValue)\r\n        setSubmitColor(pwdValue === rpwdValue && pwdValue.length > 5  ? \"primary\" : \"\")\r\n        console.log(pwdValue, rpwdValue);\r\n    }\r\n    const onRPwdVerify = (e) => {\r\n        let rpwdValue = e.target.value\r\n        setRPwdValue(rpwdValue)\r\n        setSubmitColor(pwdValue === rpwdValue && pwdValue.length > 5 ? \"primary\" : \"\")\r\n        console.log(pwdValue, rpwdValue);\r\n        \r\n    }\r\n    const handleSubmit = () => {\r\n        console.log(rpwdValue);\r\n        if(pwdValue !== rpwdValue){\r\n            notify('Passwords don\\'t match',  { type: 'warning' })\r\n            return\r\n        }\r\n        if(pwdValue.length < 6){\r\n            notify('Password too short',  { type: 'warning' })\r\n            return\r\n        }\r\n        const data = {\r\n            \"password\": pwdValue\r\n        }\r\n        httpAuthClient(`${conf.api_root}/Users/${record.id}/change_password`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then(()=>notify('Password Changed!'))\r\n        .catch(()=>notify(`Error Changing Password`,  { type: 'warning' }))\r\n          \r\n    }\r\n\r\n    return (\r\n        <Box\r\n        component=\"form\"\r\n        sx={{\r\n            '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n        }}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        >\r\n        <FormControl>\r\n            <Grid item xs={12} spacing={4} margin={5} >\r\n                <Typography variant=\"body2\" component=\"p\" ><b>Change the user password</b></Typography>\r\n            </Grid>\r\n            <Grid item xs={12} spacing={4} margin={5} >\r\n            <TextField\r\n                id=\"outlined-password-input\"\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                onChange={onPwdChange}\r\n            />\r\n            </Grid>\r\n            <Grid item xs={12} spacing={4} margin={5} >\r\n            <TextField\r\n                id=\"outlined-password-input\"\r\n                label=\"Repeat Password\"\r\n                type=\"password\"\r\n                onChange={onRPwdVerify}\r\n            />\r\n            </Grid>\r\n            <Grid item xs={12} spacing={4} margin={5} >\r\n            <Button variant=\"contained\" color={submitColor} onClick={handleSubmit}>Submit</Button>\r\n            </Grid>\r\n        </FormControl>\r\n        </Box>\r\n    );\r\n}\r\n","import { React } from \"react\";\r\nimport {\r\n    Create,\r\n    SimpleForm,\r\n    PasswordInput,\r\n    TextInput\r\n} from \"react-admin\"\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DynInput from \"./DynInput\";\r\nimport {useConf} from '../Config.js'\r\n\r\nexport const CreateUser  = ({resource_name, ...props}) => {\r\n    const conf = useConf();    \r\n    const resource = conf.resources[resource_name]\r\n\r\n    return <Create {...props}>\r\n                <SimpleForm>\r\n                    <Grid container spacing={3} margin={5} m={400} style={{ width: \"40%\" }}>\r\n                        {resource.attributes.map((attr) => <Grid item xs={12} spacing={4} margin={5} > <TextInput source={attr.name} fullWidth /> </Grid> )}\r\n                        <Grid item xs={12} spacing={4} margin={5} >\r\n                            <PasswordInput label=\"Password\" defaultValue=\"\" fullWidth inputProps={{ autocomplete: 'current-password' }} />\r\n                        </Grid>\r\n                        <Grid item xs={12} spacing={4} margin={5} >\r\n                            <PasswordInput label=\"Repeat Password\" defaultValue=\"\" fullWidth inputProps={{ autocomplete: 'current-password' }}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </SimpleForm>\r\n            </Create >\r\n}\r\n\r\n","import * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PlayCircleOutlineIcon from '@mui/icons-material/PlayCircleOutline';\nimport Button from '@material-ui/core/Button';\nimport { useConf } from '../Config';\nimport {Loading,\n    useRecordContext\n} from 'react-admin'\n\nconst boxStyle = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: \"75%\",\n  bgcolor: 'background.paper',\n  border: '0px solid #000',\n  boxShadow: 24,\n  p: 4,\n  textAlign: \"left\"\n};\n\nconst useStyles = makeStyles({\n  joined_field : {cursor: \"pointer\", color: \"#3f51b5\"},\n  modalStyle:{\n    position:'absolute',\n    top:'10%',\n    left:'10%',\n    overflow:'scroll',\n    height:'100%',\n    display:'block',\n    fontWeight : \"0.6em\",\n    display: 'flex'\n  }\n});\n\n\nconst ApiModal = (props) => {\n    const conf = useConf()\n    const create_api = (record) =>{\n        const create_url = `${conf.api_root}/Apis/${record.id}/generate`\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json', \n                        'Authorization' : `Bearer ${localStorage.getItem('auth_token')}` },\n            body: '{}'\n        };\n        setOutput(<Loading/>)\n        box_style.top = \"90%\"\n        setBoxStyle(box_style)\n        fetch(create_url, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setOutput(<pre>{data}</pre>)\n            })\n    }\n    \n    const [open, setOpen] = React.useState(false);\n    const [output, setOutput] = React.useState(\"\");\n    const [box_style, setBoxStyle] = React.useState(boxStyle);\n    const handleOpen = (e) => {setOpen(true); e.stopPropagation();}\n    const handleClose = (e) => {e.stopPropagation();setOpen(false);}\n    const record = props.record\n    const classes = useStyles()\n    \n    return (\n        <span>\n        <span onClick={handleOpen} className={classes.joined_field} title={` Relationship` }><PlayCircleOutlineIcon/></span>\n        <Modal\n            className={classes.modalStyle}\n            open={open}\n            onClose={handleClose}\n            onClick={(e)=>e.stopPropagation()}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        >\n            <Box sx={box_style}>\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                Create API \n            </Typography>\n                Pressing the button will generate an API with the following properties:\n                <dl>\n                <dt>Name:</dt>\n                <dd>{record?.name}</dd>\n                <dt>Database URL:</dt>\n                <dd>{record?.connection_string}</dd>\n                <dt>Port:</dt>\n                <dd>{record?.port}</dd>\n                <dt>Hostname:</dt>\n                <dd>{record?.hostname}</dd>\n                </dl>\n                <Button variant=\"outlined\" onClick={()=>create_api(record)}> Start <PlayCircleOutlineIcon/> </Button>\n                <hr/>\n                \n                {output}\n                \n            </Box>\n        </Modal>\n        </span>\n    );\n}\n\nexport const ApiGenerateField = (props) => {\n\n  if(props.mode === \"list\"){\n      return <ApiModal {...props}/>\n  }\n  return <></>\n}\n\nexport const ApiShow = (props) => {\n    const record = useRecordContext();\n    console.log(record)   \n    return <>\n                <div>xxxx</div>\n                {props.show}\n            </>\n}","import { React } from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Typography } from '@material-ui/core';\r\nimport { List,\r\n    Datagrid,\r\n    TextField,\r\n    EditButton,\r\n    SaveButton,\r\n    PasswordInput\r\n} from \"react-admin\";\r\n\r\nimport Button from '@mui/material/Button';\r\nimport {useRecordContext, useDataProvider} from \"react-admin\";\r\nimport {MyComp} from './external'\r\n//import CreateUser from './CreateUser'\r\nexport {UserPasswordTab} from './external/UserPasswordTab'\r\nexport {CreateUser} from './CreateUser'\r\nexport * from './ApiAdmin'\r\nexport * from './external'\r\n\r\n\r\nexport const SampleColumnField = ({attribute}) => {\r\n    return <TextField source={attribute.name} key={attribute.name} style={{color : \"red\" }} />\r\n}\r\n\r\nexport const EmployeeLabel = (props) => {\r\n    const employee = props.instance\r\n    return <div> {employee.attributes?.FirstName} {employee.attributes?.LastName}</div>\r\n}\r\n\r\nexport const CustomerLabel = (props) => {\r\n    const customer = props.instance\r\n    return <div> <b>{customer.attributes?.CompanyName}</b> <i>{customer.attributes?.ContactName}</i></div>\r\n}\r\n\r\nexport const UserPasswordField = (props) => {\r\n\r\n    if(props.mode === \"list\"){\r\n        return <span/>\r\n    }\r\n    if(props.mode === \"edit\"){\r\n        return <>\r\n            <Grid item xs={12} spacing={4} margin={5} >\r\n                <Typography variant=\"h6\" component=\"h6\" >Change Password</Typography>\r\n            </Grid>\r\n            <Grid item xs={4} spacing={4} margin={5} ><PasswordInput source=\"_password\" /> </Grid>\r\n            <Grid item xs={4} spacing={4} margin={5} ><PasswordInput source=\"_password\" /> </Grid>\r\n            <Grid item xs={4} spacing={4} margin={5} ></Grid>\r\n        </>\r\n    }\r\n    return <></>\r\n}\r\n\r\nexport const CustomTab = (props) => {\r\n    const record = useRecordContext();\r\n    \r\n    console.log(record)\r\n    return <div>Some Text</div>\r\n}\r\n\r\n\r\n"],"sourceRoot":""}